<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Looking up foreign key values using Model::displayField &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="post">
	<h2><a href="/posts/looking-up-foreign-key-values-using-modeldisplayfield:480f4dd6-e36c-4e76-bba1-4483cbdd56cb">Looking up foreign key values using Model::displayField</a></h2>	<div class="posted-on">
		<p>Posted on 18/2/07 by 
		<a href="/felix">Felix Geisend√∂rfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
		<div class="deprecated-post">
	<h3>Deprecated post</h3>
	<p>
		The authors of this post have marked it as deprecated. This means the information displayed is most likely
		<strong>outdated, inaccurate, boring</strong> or a combination of all three.
	</p>
	<p><strong>Policy:</strong> We never delete deprecated posts, but they are not listed in our categories or show up in the search anymore.</p>
	<p>
		<strong>Comments:</strong> You can continue to leave comments on this post, but please consult
		<a href="http://www.google.com">Google</a> or <a href="/posts/search/conditions:posts">our search</a>		first if you want to get an answer ; ).
	</p>
</div>		<p><strong>Update:</strong> I updated the lookup function below to make use of Model::field instead of Model::find which should be a better choice in this context ; ).</p>
<p>Hey folks,</p>
<p>today I was spending some implementing various aspects of my new web application. One of the things I needed to do was to make sure that all Users that sign up for an account automatically become members of a certain group called 'Freemium'. For this reason my users table has a foreign key field called 'group_id' where I store what group each User belongsTo. However, I'm somebody who dislikes hard coding "magic numbers". This means I hate to code things like this:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="co1">// Make the User belongTo the group 'Freemium' which always has the id 1</span><br />
<span class="re0">$this</span>-&gt;<span class="me1">User</span>-&gt;<span class="me1">set</span><span class="br0">&#40;</span><span class="st0">'group_id'</span>, <span class="nu0">1</span><span class="br0">&#41;</span>;</div>
<p>To me that is a bad practice for several reasons. For one it makes the code incredibly hard to read if this is done for several groups (with different id's) without explaining in the comments what is going on. The other thing is that I like my applications to be db data agnostic. That means if somebody would just empty all tables in an application I wrote, I would like it to automatically recover to it's original install state. I know this is not practical / desirable for all kinds of applications, but I find it very useful for the projects I often deal with (and especially applications  I plan to distribute).</p>
<p>So how to do this better? Well it's pretty simply actually. Instead of hardcoding the 'group_id' to 1 for the sign-up process, one should instead query the groups table for a group called 'Freemium' and use it's id. If this group doesn't exist yet, then simply create it and use the 'id' value of this new record. So when going through this process today, I realised: 'Hey, this is something I need pretty often' and decided to make this more generic and less verbose. The result is a little function called 'lookup' which I recommend you to add to your AppModel:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="coMULTI">/**<br />
&nbsp;* A generic function that simply returns the value of a given $field for an record<br />
&nbsp;* that matches the given $conditions. If $create is set to true and no record matching<br />
&nbsp;* the conditions can be found, it will be created automatically.<br />
&nbsp;*<br />
&nbsp;* @param string $field The name of the field to look the value up<br />
&nbsp;* @param mixed $conditions Either an array of conditions, or a string when using the displayField for the lookup<br />
&nbsp;* @param boolean $create If set to true and $conditions don't match anything, a new record will be created<br />
&nbsp;* @return mixed Either false on failure, or the value of $field matching $conditions<br />
&nbsp;*/</span><br />
<span class="kw2">function</span> lookup<span class="br0">&#40;</span><span class="re0">$field</span>, <span class="re0">$conditions</span>, <span class="re0">$create</span> = <span class="kw2">false</span><span class="br0">&#41;</span><br />
<span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="co1">// If $conditions is no array</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/is_array"><span class="kw3">is_array</span></a><span class="br0">&#40;</span><span class="re0">$conditions</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// Then assume a value for this model's displayField was provided</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$conditions</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#40;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">getDisplayField</span><span class="br0">&#40;</span><span class="br0">&#41;</span> =&gt; <span class="re0">$conditions</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="co1">// Try to find a $fieldValue matching our $conditions</span><br />
&nbsp; &nbsp; <span class="re0">$fieldValue</span> = <span class="re0">$this</span>-&gt;<span class="me1">field</span><span class="br0">&#40;</span><span class="re0">$field</span>, <span class="re0">$conditions</span><span class="br0">&#41;</span>;<br />
<br />
&nbsp; &nbsp; <span class="co1">// If no $fieldValue matching the $conditions was found, and $create mode is set to false</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><span class="re0">$fieldValue</span>===<span class="kw2">false</span> &amp;&amp; !<span class="re0">$create</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// Return false meaning that the lookup failed</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="kw2">false</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="kw1">elseif</span> <span class="br0">&#40;</span><span class="re0">$fieldValue</span>===<span class="kw2">false</span> &amp;&amp; <span class="re0">$create</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// Otherwise, create a new record matching our $conditions</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">create</span><span class="br0">&#40;</span><span class="re0">$conditions</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// If saving the new record failed</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!<span class="re0">$this</span>-&gt;<span class="me1">save</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// Return false meaning that the lookup failed</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="kw2">false</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// When querying for the new $fieldValue, make sure we find the new record for sure</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$conditions</span><span class="br0">&#91;</span><span class="re0">$this</span>-&gt;<span class="me1">primaryKey</span><span class="br0">&#93;</span> = <span class="re0">$this</span>-&gt;<span class="me1">id</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// Read the $fieldValue again (so we get things like default values of the db, cakephp created/modified fields, etc.)</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$fieldValue</span> = <span class="re0">$this</span>-&gt;<span class="me1">field</span><span class="br0">&#40;</span><span class="re0">$field</span>, <span class="re0">$conditions</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="co1">// Return the value of our $field </span><br />
&nbsp; &nbsp; <span class="kw1">return</span> <span class="re0">$fieldValue</span>;<br />
<span class="br0">&#125;</span></div>
<p>There are several ways to use it. The first, and most simple way, is to rely on Model::displayField. CakePHP will always try to figure out which one this is for you by checking if your model has a 'name' or a 'title' field. So my groups table for example has a field called 'name' which CakePHP automatically detects. This allows me to replace the code from above with this:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$this</span>-&gt;<span class="me1">User</span>-&gt;<span class="me1">set</span><span class="br0">&#40;</span><span class="st0">'group_id'</span>, <span class="re0">$this</span>-&gt;<span class="me1">Group</span>-&gt;<span class="me1">lookup</span><span class="br0">&#40;</span><span class="st0">'id'</span>, <span class="st0">'Freemium'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;</div>
<p>But one of the requirements was also that the group 'Freemium' is automatically created if it doesn't exist already. In order to do this we just have to set the 3rd $create parameter to true:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$this</span>-&gt;<span class="me1">User</span>-&gt;<span class="me1">set</span><span class="br0">&#40;</span><span class="st0">'group_id'</span>, <span class="re0">$this</span>-&gt;<span class="me1">Group</span>-&gt;<span class="me1">lookup</span><span class="br0">&#40;</span><span class="st0">'id'</span>, <span class="st0">'Freemium'</span>, <span class="kw2">true</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;</div>
<p>And voila, we have met all initial requirements for a best practices foreign key lookup approach using a simple one-liner. If you want to get more fancy, you can also make the 2nd parameter an array of $conditions to use for finding the lookup field value, but I don't think one will need that very often. I think this function is most efficient and elegant when used to lookup id values of groups, types and other things of that nature.</p>
<p>Alright, I hope some of you find this post useful. One last thing I got in line is that I want to point out <a href="http://www.thinkingphp.org/2007/02/12/access-your-config-files-rapidly-win32-only/">yet another</a> very useful tool for windows, called <a href="http://taskix.robustit.com/">Taskix</a>. It allows me to do one of the things that I've wanted to be able to do forever: to re-arrange my windows in the taskbar. You simply download it, start it, and from that point on you can simply drag and drop your opened windows to any position in the taskbar. Big thanks to Adrian Schlesinger who wrote it!</p>
<p>-- Felix Geisend√∂rfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/480f4dd6-e36c-4e76-bba1-4483cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Flooking-up-foreign-key-values-using-modeldisplayfield%3A480f4dd6-e36c-4e76-bba1-4483cbdd56cb &amp;title=Looking+up+foreign+key+values+using+Model%3A%3AdisplayField';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Flooking-up-foreign-key-values-using-modeldisplayfield%3A480f4dd6-e36c-4e76-bba1-4483cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Flooking-up-foreign-key-values-using-modeldisplayfield%3A480f4dd6-e36c-4e76-bba1-4483cbdd56cb&amp;title=Looking+up+foreign+key+values+using+Model%3A%3AdisplayField&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Flooking-up-foreign-key-values-using-modeldisplayfield%3A480f4dd6-e36c-4e76-bba1-4483cbdd56cb&amp;title=Looking+up+foreign+key+values+using+Model%3A%3AdisplayField';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>
	<div class="related-posts">
		<h3>(Theoretically) Related Posts</h3>
				<ul class="first">
							<li><a href="/posts/how-to-do-group-by-conditions-in-model-find()-calls:483fdc1c-8454-4593-a55e-37244834cda3">How to do Group By conditions in Model find() calls in the CakePHP RC1</a></li>
							<li><a href="/posts/update-to-the-rss-feed-parser-model:480f4dd5-0988-4bc8-98a8-455ecbdd56cb">Update to the RSS feed parser Model</a></li>
							<li><a href="/posts/making-error-handling-for-modelsave-more-beautiful-in-cakephp:480f4dd6-7110-4706-8230-4a97cbdd56cb">Making error handling for Model::save more beautiful in CakePHP</a></li>
							<li><a href="/posts/how-to-put-combined-fields-into-cakephps-model-generatelist:480f4dfe-7dec-4b43-bc7c-4258cbdd56cb">How to put Combined Fields Into CakePHP&#039;s Model-&gt;generateList()</a></li>
							<li><a href="/posts/remember-the-days-before-spam-a-cakephp-model-for-akismet:480f4dd5-d358-4f51-ac83-45f1cbdd56cb">Remember the days before spam? A CakePHP Model for Akismet  </a></li>
					</ul>
		<ul>
							<li><a href="/posts/dessert-13-a-simple-config-model:480f4dd5-d100-4e7f-80e6-416acbdd56cb">Dessert #13 - A simple Config Model</a></li>
							<li><a href="/posts/update-on-cakephp-google-analytics-apimodel:480f4dd5-7044-47bc-945a-4d90cbdd56cb">Update on CakePHP Google Analytics API/Model</a></li>
							<li><a href="/posts/google-analytics-php-api-cakephp-model:480f4dd5-b2a4-452a-b4ed-4f3fcbdd56cb">Google Analytics PHP Api (CakePHP Model)</a></li>
							<li><a href="/posts/modelsave-now-returns-an-array:480f4dd6-0a7c-4026-ad5a-49c8cbdd56cb">Model::save() now returns an array!</a></li>
							<li><a href="/posts/implementing-different-types-for-cakes-modelfind-method:485030de-4778-456e-8400-44d84834cda3">How to bend Cake&#039;s Model::find() method to your needs</a></li>
					</ul>
	</div>
	<div class="clear">&nsbp;</div>

			<p>You can <a href="#comment_form">skip to the end</a> and add a comment.</p>
	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/looking-up-foreign-key-values-using-modeldisplayfield:480f4dd6-e36c-4e76-bba1-4483cbdd56cb">8 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/looking-up-foreign-key-values-using-modeldisplayfield:480f4dd6-e36c-4e76-bba1-4483cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	<div class="post_comments">
	<div class="clear"></div>
									<div id="comment-480f4de6-95f0-43e4-bbad-42afcbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=f2b8a45c5431b462a8a038c975397e35&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://blog.tommmy.de" rel="nofollow">Tom</a>						</strong>
						<strong>said 
						on Feb 18, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Heya felix, long time no see, but this time/post i have to comment, that this piece of code is very useful for me ; )  ty mate!</p>
<p>ok, have to go back to my cmdb project, happy baking ;o)</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4de6-ced4-4b9d-826b-436ccbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=a92e5d86be5f8a3408d46acc2943f99c&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Lucian Lature&nbsp;						</strong>
						<strong>said 
						on Feb 18, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hi, Felix!...</p>
<p>Just wanted to know...what are you working on?...hehe...it's your own project or is it a client's?...</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4de6-0570-4669-abef-45c5cbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=f4112f3023c643bf2f7b32c9c5dcfcba&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://cakebaker.42dh.com" rel="nofollow">Daniel Hofstetter</a>						</strong>
						<strong>said 
						on Feb 18, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Instead of using a magic number you could use a constant, so instead of using the value "1" you would have something like "FREEMIUM_GROUP_ID".</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4de6-d964-446d-877a-46c7cbdd56cb" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.debuggable.com/felix" rel="nofollow">Felix Geisend√∂rfer</a>						</strong>
						<strong>said 
						on Feb 18, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Lucian: I was talking about my own web application I'm working on. I'll probably do a post about it in a couple of days ; ).</p>
<p>Daniel: Well, this still doesn't allow for automatic db regeneration if tables are emptied. Plus I'm just not a huge fan of global constants these days : ).</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4de8-2188-4154-a30e-45bdcbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=5af3e5b853628dda69afa96e593c4fc9&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Ben&nbsp;						</strong>
						<strong>said 
						on Apr 13, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>thanks for taskix link!</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4de8-c0d0-4522-b63e-4c4ecbdd56cb" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.debuggable.com/felix" rel="nofollow">Felix Geisend√∂rfer</a>						</strong>
						<strong>said 
						on Apr 14, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Ben: Np. I really like the tool and am still using it so I'm happy to share it ; ).</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4de8-8978-447d-88ef-4cb3cbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=86fa2bcac48632d550fa791bfc7be073&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://triplejeah.com" rel="nofollow">Jason Leveille</a>						</strong>
						<strong>said 
						on Apr 24, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Great post Felix.  This technique is superb and I can't wait to implement it in future work.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4df0-36e4-44cb-a6b8-4849cbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e3770513e29ca177861a41125d2f6d40&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Mark&nbsp;						</strong>
						<strong>said 
						on Sep 27, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hofstetter,</p>
<p>(old post I know, but wanted to point this out for others)</p>
<p>Using Magic numbers and using CONSTANTS are the same thing in this context.  </p>
<p>The problem is the value for the group_id he is using is a primary key (autogenerated) from the database.  If the table were dumped, that value would not restart at 1, but it would continue incrementing.  So the next insertion after an emptied table not match the magic number or constant.  </p>
<p>This is a great solution to a very common problem.</p>
<p>The other solution is not to use ID's for this at all, but rather use names.  i.e. if I have these groups:</p>
<p>id,title<br />
1,Free</br><br />
2.Paid</br><br />
3,Super</br></p>
<p>group membership is usually implemented such that you have the groupid and the userid in a join table (user_groups).</p>
<p>Alternatively, we could have our groups table like so:</p>
<p>id,title,name<br />
1,Free,free</br><br />
2,Paid,paid</br><br />
3,Super,super</br></p>
<p>Refer to the groups by name (since title can be changed/translated but name should not)</p>
<p>Just my .02 cents</p>
				</div>
				<div class="clear"></div>
							</div>
	  	
				<div class="divider"></div>
		<a name="comment_form"></a>
		<p>This post is too old. We do not allow comments here anymore in order to fight spam. If you have real feedback or questions for the post, please <a href="/contact">contact us</a>.</p>
	</div></div>
	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@J√∂rn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
