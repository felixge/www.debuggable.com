<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Migrating a Database Table for use with the CakePHP Sluggable Behavior &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="post">
	<h2><a href="/posts/migrating-a-database-table-for-use-with-the-cakephp-sluggable-behavior:4a2cee35-0e24-4d73-a545-3f514834cda3">Migrating a Database Table for use with the CakePHP Sluggable Behavior</a></h2>	<div class="posted-on">
		<p>Posted on 8/6/09 by 
		<a href="/tim">Tim Kosch√ºtzki</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/tim_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hey folks,</p>
<p>if you are not familiar with <a href="http://bakery.cakephp.org/articles/view/sluggable-behavior">Mariano's Sluggable Behavior</a>, you should definitely check it out. It's a nice tool to generate SEO-friendly urls in your application. If you are anything like debuggable.com with our long urls, you might want to look at it. ;)</p>
<p>If you don't know what a url slug is:</p>
<p>A slug is a few words that describe a post or a page. Slugs are usually a URL friendly version of the post title, but a slug can be anything you like. Slugs are meant to be used with your site's urls as they help describe what the content at the URL is. They might or might not help your SEO ranking as well for the keywords in the slug/content.</p>
<p>Example post url: <a href="http://flashfun247.com/games/play/racing/tg-motocross-2">http://flashfun247.com/games/play/racing/tg-motocross-2</a>.</p>
<p>The slug for that game content is "tg-motocross-2".</p>
<p>This blogpost deals with migrating an existing production table into using Mariano's sluggable behavior and thereby increasing SEO friendliness of your site.</p>
<h3>Step 1: Back up the database table</h3>
<p>Back up the table for which you want to add slugs. We cannot be blamed for any database damage this might cause.</p>
<h3>Step 2: Modify your database</h3>
<p>Add a "slug" field to the table. The default length that the behavior uses is 100 chars which should be enough in most cases. So VARCHAR(100) is what you need or the equivalent for your db driver.</p>
<h3>Step 3: Add your $actsAs declaration</h3>
<p>Add the proper call to $actsAs to the model that you want to migrate. Put in any existing behaviors that you need as well:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">var</span> <span class="re0">$actsAs</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><br />
&nbsp; <span class="st0">'Containable'</span>,<br />
&nbsp; <span class="st0">'Lookupable'</span>,<br />
&nbsp; <span class="st0">'Sluggable'</span> =&gt; <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'overwrite'</span> =&gt; <span class="kw2">true</span><span class="br0">&#41;</span><br />
<span class="br0">&#41;</span>;</div>
<p>Make sure to set the overwrite option, as otherwise the behavior will refuse to overwrite the slug field the way we will do it. Also make sure to set the 'label' option if the table field that your slugs will depend on is not called 'title'.</p>
<p>For the full host of options, <a href="http://bakery.cakephp.org/articles/view/sluggable-behavior">check the sluggable behavior</a>.</p>
<p><strong>Important:</strong> The field your slugs depend on (title, name or combinations) MUST NOT be empty for any row in your table. The shell takes this into account and provides you with an error log. To save you some headaches, make sure the fields are properly filled before you run the sluggish shell.</p>
<h3>Step 4: Modify The Sluggable Behavior Code</h3>
<p>You need to change the Sluggable behavior code on two occurances to make it work with the recent Cake releases.</p>
<p>1. Change Line 121 to:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$conditions</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="re0">$Model</span>-&gt;<span class="me1">alias</span> . <span class="st0">'.'</span> . <span class="re0">$this</span>-&gt;__settings<span class="br0">&#91;</span><span class="re0">$Model</span>-&gt;<span class="me1">alias</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'slug'</span><span class="br0">&#93;</span> . <span class="st0">' LIKE'</span> =&gt; <span class="re0">$slug</span> . <span class="st0">'%'</span><span class="br0">&#41;</span>;</div>
<p>2. Change Line 125 to:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$conditions</span><span class="br0">&#91;</span><span class="re0">$Model</span>-&gt;<span class="me1">alias</span> . <span class="st0">'.'</span> . <span class="re0">$Model</span>-&gt;<span class="me1">primaryKey</span> . <span class="st0">' &lt;&gt;'</span><span class="br0">&#93;</span> = <span class="re0">$Model</span>-&gt;<span class="me1">id</span>;</div>
<p>This is simply changing the syntax for NOT and LIKE conditions.</p>
<h3>Step 5: Download Debuggable's Sluggish Shell</h3>
<p>Copy the following code to a 'sluggish.php' file in your vendors/shells folder. Just mouseover the code to see it in raw text.</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;"><span class="kw2">&lt;?php</span><br />
<span class="coMULTI">/**<br />
&nbsp;* Sluggish Shell<br />
&nbsp;*<br />
&nbsp;* Set overwrite =&gt; true before running this in your $actsAs declaration!<br />
&nbsp;* This shell allows you to generate unique slugs for a database table ready for use <br />
&nbsp;* with the sluggable behavior by Mariano Iglesias<br />
&nbsp;*<br />
&nbsp;*<br />
&nbsp;* Sluggish Shell : Make your table sluggable<br />
&nbsp;* Copyright 2009, Debuggable, Ltd. (http://debuggable.com)<br />
&nbsp;*<br />
&nbsp;* Licensed under The MIT License<br />
&nbsp;* Redistributions of files must retain the above copyright notice.<br />
&nbsp;*<br />
&nbsp;* @filesource<br />
&nbsp;* @copyright &nbsp; &nbsp; Copyright 2009, Debuggable, Ltd. (http://debuggable.com)<br />
&nbsp;* @link &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;http://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project<br />
&nbsp;* @license &nbsp; &nbsp; &nbsp; http://www.opensource.org/licenses/mit-license.php The MIT License<br />
&nbsp;*/</span><br />
<span class="kw2">class</span> SluggishShell <span class="kw2">extends</span> Shell <span class="br0">&#123;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; <span class="kw2">function</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/empty"><span class="kw3">empty</span></a><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">args</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="re0">$this</span>-&gt;<span class="me1">out</span><span class="br0">&#40;</span><span class="st0">'You need to specify a modelname'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
<br />
&nbsp; &nbsp; <span class="re0">$model</span> = <span class="re0">$this</span>-&gt;<span class="me1">args</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>;<br />
&nbsp; &nbsp; <span class="re0">$force</span> = <a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">args</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span> ? <span class="re0">$this</span>-&gt;<span class="me1">args</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> : <span class="kw2">false</span>;<br />
<br />
&nbsp; &nbsp; <span class="re0">$Model</span> = ClassRegistry::<span class="me2">init</span><span class="br0">&#40;</span><span class="re0">$model</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="re0">$behavior</span> = <span class="st0">'Sluggable'</span>;<br />
<br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/is_object"><span class="kw3">is_object</span></a><span class="br0">&#40;</span><span class="re0">$Model</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="re0">$this</span>-&gt;<span class="me1">out</span><span class="br0">&#40;</span><span class="st0">'This model does not exist.'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
<br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/in_array"><span class="kw3">in_array</span></a><span class="br0">&#40;</span><span class="re0">$behavior</span>, <span class="re0">$Model</span>-&gt;<span class="me1">actsAs</span><span class="br0">&#41;</span> &amp;&amp; !<a href="http://www.php.net/array_key_exists"><span class="kw3">array_key_exists</span></a><span class="br0">&#40;</span><span class="re0">$behavior</span>, <span class="re0">$Model</span>-&gt;<span class="me1">actsAs</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="re0">$this</span>-&gt;<span class="me1">out</span><span class="br0">&#40;</span><span class="st0">'The Sluggable Behavior is not yet linked to the model.'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
<br />
&nbsp; &nbsp; <span class="re0">$label</span> = <span class="st0">'title'</span>;<br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$Model</span>-&gt;<span class="me1">actsAs</span><span class="br0">&#91;</span><span class="st0">'Sluggable'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'label'</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$label</span> = <span class="re0">$Model</span>-&gt;<span class="me1">actsAs</span><span class="br0">&#91;</span><span class="st0">'Sluggable'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'label'</span><span class="br0">&#93;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
<br />
&nbsp; &nbsp; <span class="re0">$Model</span>-&gt;<span class="me1">recursive</span> = <span class="nu0">-1</span>;<br />
&nbsp; &nbsp; <span class="re0">$conditions</span> = <span class="re0">$force</span> ? <span class="kw2">false</span> : <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'slug'</span> =&gt; <span class="st0">''</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="re0">$rows</span> = <span class="re0">$Model</span>-&gt;<span class="me1">find</span><span class="br0">&#40;</span><span class="st0">'all'</span>, <a href="http://www.php.net/compact"><span class="kw3">compact</span></a><span class="br0">&#40;</span><span class="st0">'conditions'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="re0">$count</span> = <a href="http://www.php.net/count"><span class="kw3">count</span></a><span class="br0">&#40;</span><span class="re0">$rows</span><span class="br0">&#41;</span>;<br />
<br />
&nbsp; &nbsp; <span class="re0">$i</span> = <span class="nu0">0</span>;<br />
&nbsp; &nbsp; <span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="re0">$rows</span> <span class="kw1">as</span> <span class="re0">$row</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$Model</span>-&gt;<span class="me1">set</span><span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$Model</span>-&gt;<span class="me1">primaryKey</span> =&gt; <span class="re0">$row</span><span class="br0">&#91;</span><span class="re0">$model</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="re0">$Model</span>-&gt;<span class="me1">primaryKey</span><span class="br0">&#93;</span>,<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$label</span> =&gt; <span class="re0">$row</span><span class="br0">&#91;</span><span class="re0">$model</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="re0">$label</span><span class="br0">&#93;</span><br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="re0">$Model</span>-&gt;<span class="me1">save</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
<br />
&nbsp; &nbsp; &nbsp; <span class="re0">$row</span> = <span class="re0">$Model</span>-&gt;<span class="me1">find</span><span class="br0">&#40;</span><span class="st0">'first'</span>, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="st0">'conditions'</span> =&gt; <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$Model</span>-&gt;<span class="me1">primaryKey</span> =&gt; <span class="re0">$row</span><span class="br0">&#91;</span><span class="re0">$model</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="re0">$Model</span>-&gt;<span class="me1">primaryKey</span><span class="br0">&#93;</span>,<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="st0">'slug'</span> =&gt; <span class="st0">''</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#41;</span>,<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="st0">'contain'</span> =&gt; <span class="kw2">false</span><br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/empty"><span class="kw3">empty</span></a><span class="br0">&#40;</span><span class="re0">$row</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$i</span>++;<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">out</span><span class="br0">&#40;</span><span class="st0">'Problem saving the slug for '</span> . <span class="re0">$row</span><span class="br0">&#91;</span><span class="re0">$model</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="re0">$label</span><span class="br0">&#93;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">out</span><span class="br0">&#40;</span><span class="re0">$Model</span>-&gt;<span class="me1">validationErrors</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">out</span><span class="br0">&#40;</span><span class="st0">'Added '</span> . <span class="re0">$i</span> . <span class="st0">' slugs for '</span> . <span class="re0">$count</span> . <span class="st0">' '</span> . Inflector::<span class="me2">pluralize</span><span class="br0">&#40;</span><span class="re0">$model</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; <span class="kw2">function</span> help<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">out</span><span class="br0">&#40;</span><span class="st0">'Debuggable Ltd. Sluggish Shell - http://debuggable.com'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">hr</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">out</span><span class="br0">&#40;</span><span class="st0">'Important: Configure your paths in the shell<span class="es0">\'</span>s initialize() function.'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">hr</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">out</span><span class="br0">&#40;</span><span class="st0">'This shell allows you to migrate a database table to use Mariano Iglesias<span class="es0">\'</span> Sluggable Behavior.'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">out</span><span class="br0">&#40;</span><span class="st0">'Add a slug field to the table, download the sluggable behavior, add your $actsAs declaration and run this shell.'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">out</span><span class="br0">&#40;</span><span class="st0">''</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">hr</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">out</span><span class="br0">&#40;</span><span class="st0">&quot;Usage: cake sluggish ModelNameInCamelCase&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">out</span><span class="br0">&#40;</span><span class="st0">''</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span><br />
<span class="kw2">?&gt;</span></div>
<p>The code is very simple. The shell takes a modelname and checks if your $actsAs declaration is properly set up. If it is, it finds all rows from the table and saves them right away, with the label field in the Model::set() call.<br />
Since we have specified overwrite => true in the $actsAs declaration, the sluggable behavior now overwrites all slug fields in the table, giving you nice slugs.</p>
<h3>Step 6: Run The Sluggish Shell</h3>
<p>Run "cake sluggish ModelNameInCamelCase" in your terminal.</p>
<h3>Step 7: Change your urls</h3>
<p>The Sluggable behavior creates unique slugs. If two of your blogposts for example have the same title, the first one will have 'my-blogpost-title' as its slug and the second one will have 'my-blogpost-title-1'. Mariano's behavior attaches an integer to the slug depending on how often the slug was used already.</p>
<p>Now that you have <strong>unique</strong> slugs, you can change your controller code and view code to take account of this. If you are heavily indexed in google already, you might want to provide 301 (permanent) redirects for the old urls, or just offer both urls to access the same blogpost, but only use slugs throughout the app.</p>
<p>Enjoy! Post any feedback or help requests in the comments below.</p>
<p>-- Tim Koschuetzki aka DarkAngelBGE<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/4a2cee35-0e24-4d73-a545-3f514834cda3"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fmigrating-a-database-table-for-use-with-the-cakephp-sluggable-behavior%3A4a2cee35-0e24-4d73-a545-3f514834cda3 &amp;title=Migrating+a+Database+Table+for+use+with+the+CakePHP+Sluggable+Behavior';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fmigrating-a-database-table-for-use-with-the-cakephp-sluggable-behavior%3A4a2cee35-0e24-4d73-a545-3f514834cda3';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fmigrating-a-database-table-for-use-with-the-cakephp-sluggable-behavior%3A4a2cee35-0e24-4d73-a545-3f514834cda3&amp;title=Migrating+a+Database+Table+for+use+with+the+CakePHP+Sluggable+Behavior&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fmigrating-a-database-table-for-use-with-the-cakephp-sluggable-behavior%3A4a2cee35-0e24-4d73-a545-3f514834cda3&amp;title=Migrating+a+Database+Table+for+use+with+the+CakePHP+Sluggable+Behavior';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>
	<div class="related-posts">
		<h3>(Theoretically) Related Posts</h3>
				<ul class="first">
							<li><a href="/posts/drake-drupal-cakephp-is-making-progress:480f4dd5-7218-454c-92a0-4f44cbdd56cb">Drake (Drupal + CakePHP) is making progress</a></li>
							<li><a href="/posts/cakephp-workshop-in-raleigh-nc-sep-6-to-7:488a234d-39fc-4d06-9c57-65aa4834cda3">CakePHP Workshop in Raleigh, NC (Sep 6-7)</a></li>
							<li><a href="/posts/cakephp-removecache-shell---remove-your-cache-files-easily:4a277938-977c-43bc-bd83-645c4834cda3">CakePHP RemoveCache Shell - Remove Your Cache Files Easily</a></li>
							<li><a href="/posts/normalizing-cakephp-model-records:48b7ed7f-9498-4b9c-8734-6f014834cda3">Normalizing CakePHP model records</a></li>
							<li><a href="/posts/modeling-relationships-in-cakephp-faking-rails-throughassociation:480f4dd6-b990-485e-abe4-4baccbdd56cb">Modeling relationships in CakePHP (faking Rails&#039; ThroughAssociation)</a></li>
					</ul>
		<ul>
							<li><a href="/posts/extra-hot-cakephp-1.2-stable-is-finally-released!:4954151c-f87c-434b-abbd-4e404834cda3">Extra Hot: CakePHP 1.2 Stable is finally released!</a></li>
							<li><a href="/posts/running-tests-from-the-commandline-in-cakephp:4821f908-da38-4987-909a-25c74834cda3">Running Tests from The Commandline in CakePHP</a></li>
							<li><a href="/posts/cakephp-all-others:480f4dfe-0bb0-46bc-b668-415ccbdd56cb">CakePHP &gt; All Others</a></li>
							<li><a href="/posts/using-cakephp-in-external-php-systems-cmss-weblogs-etc:480f4dd5-ed94-4186-acda-4443cbdd56cb">Using CakePHP in external PHP Systems (CMS&#039;s, Weblogs, etc.)</a></li>
							<li><a href="/posts/macgyver-menu-for-cakephp-whats-the-active-menu-item:480f4dd6-c044-436e-bbde-4ed8cbdd56cb">MacGyver menu for CakePHP - What&#039;s the active menu item?</a></li>
					</ul>
	</div>
	<div class="clear">&nsbp;</div>

			<p>You can <a href="#comment_form">skip to the end</a> and add a comment.</p>
	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/migrating-a-database-table-for-use-with-the-cakephp-sluggable-behavior:4a2cee35-0e24-4d73-a545-3f514834cda3">1 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/migrating-a-database-table-for-use-with-the-cakephp-sluggable-behavior:4a2cee35-0e24-4d73-a545-3f514834cda3#CommentAddForm">Add Comment</a>	</div>
	<div class="post_comments">
	<div class="clear"></div>
									<div id="comment-4a2cfc86-b854-4b09-8a75-3d474834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=6a9ee06a0980bfabae4c894514815514&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Dan&nbsp;						</strong>
						<strong>said 
						on Jun 08, 2009:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>You should really provide 301 (permanent) redirects so that search engines will use the new urls in future. </p>
<p>Also, in my experience, having the same content available through multiple urls had an adverse effect on my search rank.</p>
				</div>
				<div class="clear"></div>
							</div>
	  	
				<div class="divider"></div>
		<a name="comment_form"></a>
		<p>This post is too old. We do not allow comments here anymore in order to fight spam. If you have real feedback or questions for the post, please <a href="/contact">contact us</a>.</p>
	</div></div>
	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@J√∂rn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
