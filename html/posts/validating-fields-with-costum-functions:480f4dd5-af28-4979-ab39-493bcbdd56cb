<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Validating fields with custom validateField() functions &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="post">
	<h2><a href="/posts/validating-fields-with-costum-functions:480f4dd5-af28-4979-ab39-493bcbdd56cb">Validating fields with custom validateField() functions</a></h2>	<div class="posted-on">
		<p>Posted on 27/1/06 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
		<div class="deprecated-post">
	<h3>Deprecated post</h3>
	<p>
		The authors of this post have marked it as deprecated. This means the information displayed is most likely
		<strong>outdated, inaccurate, boring</strong> or a combination of all three.
	</p>
	<p><strong>Policy:</strong> We never delete deprecated posts, but they are not listed in our categories or show up in the search anymore.</p>
	<p>
		<strong>Comments:</strong> You can continue to leave comments on this post, but please consult
		<a href="http://www.google.com">Google</a> or <a href="/posts/search/conditions:posts">our search</a>		first if you want to get an answer ; ).
	</p>
</div>		<p><b>Update: </b> Tobius has written up a very detailed tutorial concerning custom validation based on the idea presented here. It's definitly worth to have a look at it in the <a href="http://wiki.cakephp.org/tutorials:complex_model_validation_routines">Wiki</a>! But since it's not making use of generateFields() I'll present a solution with generateFields() including error messages here soon.</p>
<p>Yesterday tobius asked me if there was a way of validating the data to be saved in a model in a more individual manner then the current regex way can handle things. So since I didn't know when something like this will be available in CakePHP I offered to write a little function that would support a base for doing it.</p>
<p>All it does is to hook into the beforeSave() function and then looping through all fields passed to the model and then checks a a function named validateField($value) exists in the model and if yes only validates this field if it returns true. Field will alway be CamelBack for the actual field name in the db. so user_name would be validateUserName($value).</p>
<p>In order to use it putt a file called app_model.php inside of your <i>app</i> directory. This is the code to paste in:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">class</span> AppModel <span class="kw2">extends</span> Model <br />
<span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw2">function</span> beforeSave<span class="br0">&#40;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#123;</span> &nbsp; &nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">data</span><span class="br0">&#91;</span><span class="re0">$this</span>-&gt;<span class="me1">name</span><span class="br0">&#93;</span> <span class="kw1">as</span> <span class="re0">$field</span> =&gt; <span class="re0">$value</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$tryToCall</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span>&amp;<span class="re0">$this</span>, <span class="st0">'validate'</span> . Inflector::<span class="me2">camelize</span><span class="br0">&#40;</span><span class="re0">$field</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/is_callable"><span class="kw3">is_callable</span></a><span class="br0">&#40;</span><span class="re0">$tryToCall</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$result</span> = <a href="http://www.php.net/call_user_func"><span class="kw3">call_user_func</span></a><span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span>&amp;<span class="re0">$this</span>, <span class="re0">$tryToCall</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span>, <span class="re0">$value</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!<span class="re0">$result</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">validationErrors</span><span class="br0">&#91;</span><span class="re0">$field</span><span class="br0">&#93;</span> = <span class="nu0">1</span>; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />
<br />
&nbsp; &nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">validationErrors</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="kw2">false</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span></div>
<p>For anyone who wants to use this: <b>This does not support custom error messages for the validated fields yet</b>. If you need them I can get you on track about what to do for it. Just post in the comments ; ) ...</p>
<p><b>Associations:</b> I've talked with PhpNut_ about the way associations will work with this and he said the correct way of saving association data is:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$this</span>-&gt;<span class="me1">ModelA</span>-&gt;<span class="me1">save</span><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">params</span><span class="br0">&#91;</span>’data’<span class="br0">&#93;</span><span class="br0">&#91;</span>’ModelA’<span class="br0">&#93;</span><span class="br0">&#41;</span>;<br />
<span class="re0">$this</span>-&gt;<span class="me1">ModelB</span>-&gt;<span class="me1">save</span><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">params</span><span class="br0">&#91;</span>’data’<span class="br0">&#93;</span><span class="br0">&#91;</span>’ModelB’<span class="br0">&#93;</span><span class="br0">&#41;</span>;</div>
<p><b>and not</b></p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$this</span>-&gt;<span class="me1">ModelB</span>-&gt;<span class="me1">save</span><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">params</span><span class="br0">&#91;</span>’data’<span class="br0">&#93;</span><span class="br0">&#41;</span>;</div>
<p>So as long as you follow that guidline this should work with just about any model setup. (In case I misunderstood him and this is wrong plz let me know!)</p>
<p>--Felix aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/480f4dd5-af28-4979-ab39-493bcbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fvalidating-fields-with-costum-functions%3A480f4dd5-af28-4979-ab39-493bcbdd56cb &amp;title=Validating+fields+with+custom+validateField%28%29+functions';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fvalidating-fields-with-costum-functions%3A480f4dd5-af28-4979-ab39-493bcbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fvalidating-fields-with-costum-functions%3A480f4dd5-af28-4979-ab39-493bcbdd56cb&amp;title=Validating+fields+with+custom+validateField%28%29+functions&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fvalidating-fields-with-costum-functions%3A480f4dd5-af28-4979-ab39-493bcbdd56cb&amp;title=Validating+fields+with+custom+validateField%28%29+functions';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>
	<div class="related-posts">
		<h3>(Theoretically) Related Posts</h3>
				<ul class="first">
							<li><a href="/posts/using-generatefields-fix-fields-of-the-type-date:480f4dd5-1410-4124-86b2-4f0ccbdd56cb">Using generateFields() + Fix fields of the type &#039;date&#039;</a></li>
							<li><a href="/posts/yummy-cakephp-functions-you-should-know-about:480f4dd5-4528-4a53-a0ec-4aa8cbdd56cb">Yummy CakePHP functions you should know about!</a></li>
							<li><a href="/posts/dessert-8-render-custom-errors:480f4dd5-6fcc-4a19-8da5-46c2cbdd56cb">Dessert #8 - Render custom errors</a></li>
							<li><a href="/posts/validating-the-cleaned-output-of-htmlhelperdatetimeoptiontag:480f4dd6-b7fc-439e-829f-4028cbdd56cb">Validating the cleaned output of HtmlHelper::dateTimeOptionTag()</a></li>
							<li><a href="/posts/making-two-form-fields-required-to-match-each-other:480f4dfd-5c40-4c1d-ad0d-42b6cbdd56cb">Making two form fields required to match each other</a></li>
					</ul>
		<ul>
							<li><a href="/posts/dessert-5-keep-a-custom-configuration-file:480f4dd5-6ee8-40ab-a6f0-413bcbdd56cb">Dessert #5 - Keep a custom configuration file</a></li>
							<li><a href="/posts/getting-serious-with-jquery-adding-custom-css-selectors:480f4dd6-e834-4cf6-a5cc-478ccbdd56cb">Getting serious with jQuery - Adding custom CSS selectors</a></li>
							<li><a href="/posts/unlimited-model-fields-expandable-behavior:48428c2e-9a88-47ec-ae8e-77a64834cda3">Unlimited Model fields - Expandable Behavior</a></li>
					</ul>
	</div>
	<div class="clear">&nsbp;</div>

			<p>You can <a href="#comment_form">skip to the end</a> and add a comment.</p>
	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/validating-fields-with-costum-functions:480f4dd5-af28-4979-ab39-493bcbdd56cb">9 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/validating-fields-with-costum-functions:480f4dd5-af28-4979-ab39-493bcbdd56cb#CommentAddForm">Add Comment</a>	</div>
	<div class="post_comments">
	<div class="clear"></div>
									<div id="comment-480f4dd7-4980-47e2-8128-4716cbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=f4112f3023c643bf2f7b32c9c5dcfcba&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://cakebaker.wordpress.com" rel="nofollow">Daniel Hofstetter</a>						</strong>
						<strong>said 
						on Jan 27, 2006:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I think it should be:</p>
<p>$this-&gt;ModelA-&gt;save($this-&gt;params['data']['ModelA']);<br />
$this-&gt;ModelB-&gt;save($this-&gt;params['data']['ModelB']);</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dd7-6010-4f73-a01b-4512cbdd56cb" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.debuggable.com/felix" rel="nofollow">Felix Geisendörfer</a>						</strong>
						<strong>said 
						on Jan 27, 2006:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>uups, yes you are right. I just corrected it.<br />
-> never publish things you haven't double</br><br />
checked with your IDE ^^.</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dd7-317c-4179-a8e0-4b17cbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://cakebaker.wordpress.com/2006/01/27/nice-custom-validation-solution/" rel="nofollow">cake baker &raquo; Nice custom validation solution</a>						</strong>
						<strong>said 
						on Jan 27, 2006:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>[...] Felix from  presents in his post a nice solution with beforeSave() for doing custom validations. I still have to test it, but it looks very promising. Good job, Felix! [...]</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dd7-787c-49c4-8126-40d1cbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=2ed9c6d585a68c8d3359155b2cd8db18&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://julien.portalier.com" rel="nofollow">JMG</a>						</strong>
						<strong>said 
						on Jan 28, 2006:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Very nice idea !</p>
<p>Just a little thing : Model::validates() will not be called if Model::beforeSave() returns false. It could be calling Model::validates() first, and then, per field, if no error occured to it, call the field's custom validation. Eg : a member registration form. The generic validation would check if member_id isn't empty (or any other check). If not, then the custom validation will check member_id's availability.</p>
<p>&gt; This does not support custom error messages for the validated fields yet.</p>
<p>Fairly easy to implement. Just return an error string from the callback and instead of setting $this-&gt;validationErrors[$field] to 1, set it to the error string. Then modify HtmlHelper::tagErrorMsg in this way :</p>
<p>    function tagErrorMsg ($field, $text)<br />
    {</br><br />
        $this-&gt;setFormTag($field);</br><br />
        $error = $this-&gt;tagIsInvalid($this-&gt;model, $this-&gt;field);</br><br />
        if ( $error !== 0 )</br><br />
        {</br><br />
            return sprintf('%s', is_numeric( $error ) ? empty($text) ? 'Error in field': $text : $error);</br><br />
        }</br><br />
        return null;</br><br />
    }</br></p>
<p>And you're set : custom error messages from Model's verification !</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dd7-3354-48db-a132-4cdfcbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=adf23b5f68a2546a56673af23f50c110&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Ricardo Stuven&nbsp;						</strong>
						<strong>said 
						on Jan 28, 2006:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I like this solution. BTW, check out:<br />
http://groups.google.cl/group/cake-php/browse_thread/thread/745087981eb00a5b</br><br />
That thread needs a revival :)</br></p>
<p>In other news...<br />
I tried something like:</br><br />
$this-&gt;ModelA-&gt;save($this-&gt;params[’data’][’ModelA’]);</br><br />
$this-&gt;ModelB-&gt;save($this-&gt;params[’data’][’ModelB’]);</br><br />
...and it did not work. See how it works Model::set() [which is called by save() ] and you will understand.</br><br />
This will work fine:</br><br />
$this-&gt;ModelA-&gt;save(array(’ModelA’=&gt;$this-&gt;params[’data’][’ModelA’]));</br><br />
$this-&gt;ModelB-&gt;save(array(’ModelB’=&gt;$this-&gt;params[’data’][’ModelB’]));</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dd7-1258-4003-a0cd-40cfcbdd56cb" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.debuggable.com/felix" rel="nofollow">Felix Geisendörfer</a>						</strong>
						<strong>said 
						on Jan 28, 2006:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hey thx JMG and Ricardo for your insightful comments. I'll try out what both of you said myself and then update this post according to it.</p>
<p>And JMG, while your solution would work like a charm, I hate to hack anything inside the cake/ folder so Ill write something that will work without hacking a helper. I think the validateField() function should either give back true if the validation was successful or a string with the error if it wasn't. Then I think I'll overwrite generateFields() in controller and modify the output of it with the custom error messages. Think that will work ...?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dd7-ff04-40b7-9a85-4ac4cbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=2ed9c6d585a68c8d3359155b2cd8db18&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://julien.portalier.com" rel="nofollow">JMG</a>						</strong>
						<strong>said 
						on Jan 29, 2006:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hum, I don't know, I didn't dive enough into Cake's code to say. That's something to try, but maybe a little bit harder to do, even if I agree with you: I should not hack in the cake/ directory. Hopefully I don't do it that much, and I keep a list of modifications needed, so upgrading Cake is just a matter of minutes.</p>
<p>BTW here is the final Model::beforeSave function I use. You'll notice I'm using method_exists() instead of is_callable() which didn't worked as expected: if the callback don't exist is_callable() says it is callable... woups.</p>
<p>	function beforeSave()<br />
	{</br><br />
		$this-&gt;validates();</br><br />
		foreach ( $this-&gt;data[$this-&gt;name] as $field =&gt; $value )</br><br />
		{</br><br />
			if ( empty( $this-&gt;validationErrors[$field] ) )</br><br />
			{</br><br />
				$method = 'validate'.Inflector::camelize( $field );</br><br />
				if ( method_exists( $this, $method ) )</br><br />
				{</br><br />
					$result = call_user_func( array( $this, $method ), $value );</br><br />
					if ( $result !== false )</br><br />
					{</br><br />
						$this-&gt;validationErrors[$field] = $result;</br><br />
					}</br><br />
				}</br><br />
			}</br><br />
		}</br><br />
		return empty( $this-&gt;validationErrors ) ? true : false;</br><br />
	}</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dd7-2ebc-43ca-8cc1-4fe7cbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=adf23b5f68a2546a56673af23f50c110&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Ricardo Stuven&nbsp;						</strong>
						<strong>said 
						on Jan 29, 2006:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>FYI, Daniel submitted a patch for the association saving problem:<br />
https://trac.cakephp.org/ticket/330</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dd7-aa80-4729-89b9-4ec9cbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://sentino.wordpress.com/2006/02/10/new-approach-validation/" rel="nofollow">sentino &raquo; Blog Archive &raquo; new approach cakephp valida</a>						</strong>
						<strong>said 
						on Feb 15, 2006:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>[...] Improved validation using CakePHP Complex Model Validation Routines Validating fields with custom validateField() functions [...]</p>
				</div>
				<div class="clear"></div>
							</div>
	  	
				<div class="divider"></div>
		<a name="comment_form"></a>
		<p>This post is too old. We do not allow comments here anymore in order to fight spam. If you have real feedback or questions for the post, please <a href="/contact">contact us</a>.</p>
	</div></div>
	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@Jörn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
