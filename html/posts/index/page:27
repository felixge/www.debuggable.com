<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Blog &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class="active"><a href="/blog">Blog</a></li><li class=""><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="paging">
	<a href="/posts/index/page:26" class="prev">&laquo; Previous</a> <span><a href="/posts/index/page:23">23</a></span> | <span><a href="/posts/index/page:24">24</a></span> | <span><a href="/posts/index/page:25">25</a></span> | <span><a href="/posts/index/page:26">26</a></span> | <span class="current">27</span> | <span><a href="/posts/index/page:28">28</a></span> | <span><a href="/posts/index/page:29">29</a></span> | <span><a href="/posts/index/page:30">30</a></span> | <span><a href="/posts/index/page:31">31</a></span> <a href="/posts/index/page:28" class="next">Next &raquo;</a></div>
	<div class="post">
	<h2><a href="/posts/i-believe-in-symmetry:48b24d77-ffe8-4544-9f21-4e3a4834cda3">I believe in Symmetry</a></h2>	<div class="posted-on">
		<p>Posted on 26/8/08 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hey folks,</p>
<p>if there is one thing I have consistently noticed while working with other programmers than its the following:</p>
<blockquote><p>Symmetry is beauty. People who get it are people who recognize and apply symmetry to their work.</p></blockquote>
<p>If I see new people coming in on a project the first things I look for are this: Do they pick up the coding standard used so far? If not, is at least their own coding standard consistent? Are they using patterns and does everything they do have a distinct "style"? Do they pick up on the overall style of the project and copy the solution patterns used so far?</p>
<p>No matter how "good" a programmer is by himself - being able to work symmetrical is the most important factor for team work. Yes, its not always fun to keep sticking to some old patterns if you have so many new and better ideas. But usually the discipline of not polluting your project with too many different approaches creates beautiful and easy to maintain applications.</p>
<p>-- Felix Geisendörfer aka the_undefined</p>
<p>PS: Sorry for the short post, but we had a little CakePHP get together at my place last night which I'll write about later on today.<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/48b24d77-ffe8-4544-9f21-4e3a4834cda3"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fi-believe-in-symmetry%3A48b24d77-ffe8-4544-9f21-4e3a4834cda3 &amp;title=I+believe+in+Symmetry';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fi-believe-in-symmetry%3A48b24d77-ffe8-4544-9f21-4e3a4834cda3';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fi-believe-in-symmetry%3A48b24d77-ffe8-4544-9f21-4e3a4834cda3&amp;title=I+believe+in+Symmetry&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fi-believe-in-symmetry%3A48b24d77-ffe8-4544-9f21-4e3a4834cda3&amp;title=I+believe+in+Symmetry';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/i-believe-in-symmetry:48b24d77-ffe8-4544-9f21-4e3a4834cda3">3 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/i-believe-in-symmetry:48b24d77-ffe8-4544-9f21-4e3a4834cda3#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/how-to-have-multiple-paginated-widgets-on-the-same-page-with-cakephp:48ad241e-b018-4532-a748-0ec74834cda3">How to have multiple paginated widgets on the same page with CakePHP</a></h2>	<div class="posted-on">
		<p>Posted on 25/8/08 by 
		<a href="/tim">Tim Koschützki</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/tim_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hey folks,</p>
<p>many of you might have run into the problem of having multiple boxes on the same page that need to be paginated. For example you might have a left column with a list of members of your site and a right column that shows for a example a list of forums. Yeah, that's not the best example, but you get the idea.</p>
<p>So the problem with Cake's paginator is, that its link structure does not know which widget is actually paginated. Let's have a look at a typical url after you clicked a pagination link:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
/users/view/488070d4-f5c8-41aa-87aa-4a951490b5da/page:<span class="nu0">2</span></div>
<p>Okay great. So imagine we have a UsersController with a view() action and our pagination passes in the page we would like to be on with regards to the list of users. Now, we click a pagination link in the communities box (let's call these boxes "widgets" from now on)... Yes you are right, the link will just look the same. So clicking on the pagination links in the community widget will just paginate our user list and the community list will stay at page 1. : /</p>
<h2>Problem</h2>
<p>How can we tell the CakePHP paginator which model it shall paginate?</p>
<h2>The Solution</h2>
<p>There are three things we need for this:</p>
<ol>
<li>We need to pass in the model that is being paginated to the structure.</li>
<li>We need to ensure we stay on the same page type when we click on a pagination link.</li>
<li>We need to extract the proper page variable from the url depending on the given model and put it into our pagination configuration.</li>
</ol>
<h2>1. Pass in the model that is being paginated to the structure</h2>
<p>Okay what I would like to recommend to you here is to have a generic paging.ctp element, which could contain the following code:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$paginator</span>-&gt;<span class="me1">params</span><span class="br0">&#91;</span><span class="st0">'paging'</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="kw1">return</span>;<br />
<span class="br0">&#125;</span><br />
<span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$model</span><span class="br0">&#41;</span> || <span class="re0">$paginator</span>-&gt;<span class="me1">params</span><span class="br0">&#91;</span><span class="st0">'paging'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="re0">$model</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'pageCount'</span><span class="br0">&#93;</span> &lt; <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="kw1">return</span>;<br />
<span class="br0">&#125;</span><br />
<span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$options</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="re0">$options</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span><br />
<br />
<span class="kw2">?&gt;</span><br />
&lt;div class=&quot;paging&quot;&gt;<br />
&nbsp; <span class="kw2">&lt;?php</span><br />
&nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$paginator</span>-&gt;<span class="me1">prev</span><span class="br0">&#40;</span><span class="st0">'&lt;&lt; Previous'</span>, <a href="http://www.php.net/array_merge"><span class="kw3">array_merge</span></a><span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'escape'</span> =&gt; <span class="kw2">false</span>, <span class="st0">'class'</span> =&gt; <span class="st0">'prev'</span><span class="br0">&#41;</span>, <span class="re0">$options</span><span class="br0">&#41;</span>, <span class="kw2">null</span>, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'class'</span> =&gt; <span class="st0">'disabled'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$paginator</span>-&gt;<span class="me1">numbers</span><span class="br0">&#40;</span>am<span class="br0">&#40;</span><span class="re0">$options</span>, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'before'</span> =&gt; <span class="kw2">false</span>, <span class="st0">'after'</span> =&gt; <span class="kw2">false</span>, <span class="st0">'separator'</span> =&gt; <span class="kw2">false</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$paginator</span>-&gt;<span class="me1">next</span><span class="br0">&#40;</span><span class="st0">'Next &gt;&gt;'</span>, <a href="http://www.php.net/array_merge"><span class="kw3">array_merge</span></a><span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'escape'</span> =&gt; <span class="kw2">false</span>, <span class="st0">'class'</span> =&gt; <span class="st0">'next'</span><span class="br0">&#41;</span>, <span class="re0">$options</span><span class="br0">&#41;</span>, <span class="kw2">null</span>, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'class'</span> =&gt; <span class="st0">'disabled'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="kw2">?&gt;</span><br />
&lt;/div&gt;</div>
<p>By that you ensure that the pagination texts are consistent throughout your application - something that is desirable in most cases. However, the most important reason for this is that we have all the fancy logic to make this hack work in one place and reusable for all widgets.</p>
<p>Here is how you would call the paging element for your Users index list out of your views:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;"><span class="kw2">&lt;?php</span><br />
<a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$this</span>-&gt;<span class="me1">element</span><span class="br0">&#40;</span><span class="st0">'paging'</span>, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'model'</span> =&gt; <span class="st0">'User'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
<span class="kw2">?&gt;</span></div>
<p>Let's go over the element's code now. Firstly, we check if we need to do paging - if a model is supplied and if its pageCount is greater than 1. We then supply a link structure for the paging links, including a previous and a next link and numbers. If you have worked with Cake's pagination before, this should be all very familiar to you.</p>
<p>Now on to making our fancy logic work.</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$paginator</span>-&gt;<span class="me1">params</span><span class="br0">&#91;</span><span class="st0">'paging'</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="kw1">return</span>;<br />
<span class="br0">&#125;</span><br />
<span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$model</span><span class="br0">&#41;</span> || <span class="re0">$paginator</span>-&gt;<span class="me1">params</span><span class="br0">&#91;</span><span class="st0">'paging'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="re0">$model</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'pageCount'</span><span class="br0">&#93;</span> &lt; <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="kw1">return</span>;<br />
<span class="br0">&#125;</span><br />
<span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$options</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="re0">$options</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span><br />
<br />
<span class="re0">$options</span><span class="br0">&#91;</span><span class="st0">'model'</span><span class="br0">&#93;</span> = <span class="re0">$model</span>;<br />
<span class="re0">$options</span><span class="br0">&#91;</span><span class="st0">'url'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'model'</span><span class="br0">&#93;</span> = <span class="re0">$model</span>;<br />
<span class="re0">$paginator</span>-&gt;__defaultModel = <span class="re0">$model</span>;<br />
<span class="kw2">?&gt;</span><br />
&lt;div class=&quot;paging&quot;&gt;<br />
&nbsp; <span class="kw2">&lt;?php</span><br />
&nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$paginator</span>-&gt;<span class="me1">prev</span><span class="br0">&#40;</span><span class="st0">'&lt;&lt; Previous'</span>, <a href="http://www.php.net/array_merge"><span class="kw3">array_merge</span></a><span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'escape'</span> =&gt; <span class="kw2">false</span>, <span class="st0">'class'</span> =&gt; <span class="st0">'prev'</span><span class="br0">&#41;</span>, <span class="re0">$options</span><span class="br0">&#41;</span>, <span class="kw2">null</span>, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'class'</span> =&gt; <span class="st0">'disabled'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$paginator</span>-&gt;<span class="me1">numbers</span><span class="br0">&#40;</span>am<span class="br0">&#40;</span><span class="re0">$options</span>, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'before'</span> =&gt; <span class="kw2">false</span>, <span class="st0">'after'</span> =&gt; <span class="kw2">false</span>, <span class="st0">'separator'</span> =&gt; <span class="kw2">false</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$paginator</span>-&gt;<span class="me1">next</span><span class="br0">&#40;</span><span class="st0">'Next &gt;&gt;'</span>, <a href="http://www.php.net/array_merge"><span class="kw3">array_merge</span></a><span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'escape'</span> =&gt; <span class="kw2">false</span>, <span class="st0">'class'</span> =&gt; <span class="st0">'next'</span><span class="br0">&#41;</span>, <span class="re0">$options</span><span class="br0">&#41;</span>, <span class="kw2">null</span>, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'class'</span> =&gt; <span class="st0">'disabled'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="kw2">?&gt;</span><br />
&lt;/div&gt;</div>
<p>We are passing the model to the $options array and set a private paginator variable to the $model value. Yeah, that's the ugly part about this hack. However, since we have it only in one place we can live with it. With that code in place, your links render fine and supply the model that needs to be paginated. Our link would now look like:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
/users/view/488070d4-f5c8-41aa-87aa-4a951490b5da/page:<span class="nu0">2</span>/model:User</div>
<p>Keep in mind we have this all configurable when calling the paging element. You can even pass in your own options array to the element if you want to go any further with this.</p>
<h2>2. We need to ensure we stay on the same page type when we click on a pagination link</h2>
<p>Imagine that you want to display your paginated widgets not only on one page, the users index, but also on /users/view/[ID]. How do we let the paginator know we want to stay on the same user page? Let me rephrase, how do we supply the user ID in a consistent manner to the pagination links, so that if a pagination link in a widget is clicked, it redirects you back to /users/view/[ID], but with the widget being at the proper page.</p>
<p>The code for this is relatively easy, but I am not so happy with the solution yet. What I did is check for a certain variable that would *only* occur on the said pages, like /users/view:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$community</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="re0">$options</span><span class="br0">&#91;</span><span class="st0">'url'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="br0">&#93;</span> = <span class="re0">$community</span><span class="br0">&#91;</span><span class="st0">'Community'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'id'</span><span class="br0">&#93;</span>;<br />
<span class="br0">&#125;</span> <span class="kw1">elseif</span> <span class="br0">&#40;</span><a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$user</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="re0">$options</span><span class="br0">&#91;</span><span class="st0">'url'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="br0">&#93;</span> = <span class="re0">$user</span><span class="br0">&#91;</span><span class="st0">'User'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'id'</span><span class="br0">&#93;</span>;<br />
<span class="br0">&#125;</span></div>
<p>So, if a $user variable is set, we assume we are on a user specific page. Same for a community... , a forum post, etc.. I feel bad about this part, because that could so easily be buggy. I won't present another approach I had in mind for this, because I would like you guys to discuss the one presented here first. : ]</p>
<p>Here is the pagination element in its entirety:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$paginator</span>-&gt;<span class="me1">params</span><span class="br0">&#91;</span><span class="st0">'paging'</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="kw1">return</span>;<br />
<span class="br0">&#125;</span><br />
<span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$model</span><span class="br0">&#41;</span> || <span class="re0">$paginator</span>-&gt;<span class="me1">params</span><span class="br0">&#91;</span><span class="st0">'paging'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="re0">$model</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'pageCount'</span><span class="br0">&#93;</span> &lt; <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="kw1">return</span>;<br />
<span class="br0">&#125;</span><br />
<span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$options</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="re0">$options</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span><br />
<br />
<span class="re0">$options</span><span class="br0">&#91;</span><span class="st0">'model'</span><span class="br0">&#93;</span> = <span class="re0">$model</span>;<br />
<span class="re0">$options</span><span class="br0">&#91;</span><span class="st0">'url'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'model'</span><span class="br0">&#93;</span> = <span class="re0">$model</span>;<br />
<span class="re0">$paginator</span>-&gt;__defaultModel = <span class="re0">$model</span>;<br />
<br />
<span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$community</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="re0">$options</span><span class="br0">&#91;</span><span class="st0">'url'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="br0">&#93;</span> = <span class="re0">$community</span><span class="br0">&#91;</span><span class="st0">'Community'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'id'</span><span class="br0">&#93;</span>;<br />
<span class="br0">&#125;</span> <span class="kw1">elseif</span> <span class="br0">&#40;</span><a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$user</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="re0">$options</span><span class="br0">&#91;</span><span class="st0">'url'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="br0">&#93;</span> = <span class="re0">$user</span><span class="br0">&#91;</span><span class="st0">'User'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'id'</span><span class="br0">&#93;</span>;<br />
<span class="br0">&#125;</span><br />
<span class="kw2">?&gt;</span><br />
&lt;div class=&quot;paging&quot;&gt;<br />
&nbsp; <span class="kw2">&lt;?php</span><br />
&nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$paginator</span>-&gt;<span class="me1">prev</span><span class="br0">&#40;</span><span class="st0">'&lt;&lt; Previous'</span>, <a href="http://www.php.net/array_merge"><span class="kw3">array_merge</span></a><span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'escape'</span> =&gt; <span class="kw2">false</span>, <span class="st0">'class'</span> =&gt; <span class="st0">'prev'</span><span class="br0">&#41;</span>, <span class="re0">$options</span><span class="br0">&#41;</span>, <span class="kw2">null</span>, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'class'</span> =&gt; <span class="st0">'disabled'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$paginator</span>-&gt;<span class="me1">numbers</span><span class="br0">&#40;</span>am<span class="br0">&#40;</span><span class="re0">$options</span>, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'before'</span> =&gt; <span class="kw2">false</span>, <span class="st0">'after'</span> =&gt; <span class="kw2">false</span>, <span class="st0">'separator'</span> =&gt; <span class="kw2">false</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$paginator</span>-&gt;<span class="me1">next</span><span class="br0">&#40;</span><span class="st0">'Next &gt;&gt;'</span>, <a href="http://www.php.net/array_merge"><span class="kw3">array_merge</span></a><span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'escape'</span> =&gt; <span class="kw2">false</span>, <span class="st0">'class'</span> =&gt; <span class="st0">'next'</span><span class="br0">&#41;</span>, <span class="re0">$options</span><span class="br0">&#41;</span>, <span class="kw2">null</span>, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'class'</span> =&gt; <span class="st0">'disabled'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="kw2">?&gt;</span><br />
&lt;/div&gt;</div>
<h2>3. Extract the proper page variable from the url</h2>
<p>So it seems we got the frontend part done. Let's have a look at some code for the backend to make this work. For the users list, your code to paginate the users might likely look like this:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$this</span>-&gt;<span class="me1">paginate</span><span class="br0">&#91;</span><span class="st0">'User'</span><span class="br0">&#93;</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><br />
&nbsp; <span class="st0">'contain'</span> =&gt; <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'Profile'</span><span class="br0">&#41;</span>,<br />
&nbsp; <span class="st0">'order'</span> =&gt; <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'User.name'</span> =&gt; <span class="st0">'asc'</span><span class="br0">&#41;</span>,<br />
&nbsp; <span class="st0">'limit'</span> =&gt; <span class="nu0">20</span><br />
<span class="br0">&#41;</span>;<br />
<span class="re0">$users</span> = <span class="re0">$this</span>-&gt;<span class="me1">paginate</span><span class="br0">&#40;</span><span class="st0">'User'</span><span class="br0">&#41;</span>;</div>
<p>Straightforward, we need 20 users paginated. Now we need to investigate the url to check if the user model is given in a reusable manner, so that this will work for all paginations of all models:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param string $model <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; <span class="kw2">function</span> pageForPagination<span class="br0">&#40;</span><span class="re0">$model</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$page</span> = <span class="nu0">1</span>;<br />
&nbsp; &nbsp; <span class="re0">$sameModel</span> = <a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">params</span><span class="br0">&#91;</span><span class="st0">'named'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'model'</span><span class="br0">&#93;</span><span class="br0">&#41;</span> &amp;&amp; <span class="re0">$this</span>-&gt;<span class="me1">params</span><span class="br0">&#91;</span><span class="st0">'named'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'model'</span><span class="br0">&#93;</span> == <span class="re0">$model</span>;<br />
&nbsp; &nbsp; <span class="re0">$pageInUrl</span> = <a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">params</span><span class="br0">&#91;</span><span class="st0">'named'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'page'</span><span class="br0">&#93;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><span class="re0">$sameModel</span> &amp;&amp; <span class="re0">$pageInUrl</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$page</span> = <span class="re0">$this</span>-&gt;<span class="me1">params</span><span class="br0">&#91;</span><span class="st0">'named'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'page'</span><span class="br0">&#93;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">passedArgs</span><span class="br0">&#91;</span><span class="st0">'page'</span><span class="br0">&#93;</span> = <span class="re0">$page</span>;<br />
&nbsp; &nbsp; <span class="kw1">return</span> <span class="re0">$page</span>;<br />
&nbsp; <span class="br0">&#125;</span></div>
<p>The trick is this handy little function that you place in your AppController class. It analyzes the url's given model and extracts the page. If the model is not given, it defaults to page 1. By that we ensure the widget that is being paginated is put on the right page and the other ones stay at page 1.</p>
<p>Here is the rewritten controller code:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$page</span> = <span class="re0">$this</span>-&gt;<span class="me1">pageForPagination</span><span class="br0">&#40;</span><span class="st0">'User'</span><span class="br0">&#41;</span>;<br />
<span class="re0">$this</span>-&gt;<span class="me1">paginate</span><span class="br0">&#91;</span><span class="st0">'User'</span><span class="br0">&#93;</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><br />
&nbsp; <span class="st0">'contain'</span> =&gt; <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'Profile'</span><span class="br0">&#41;</span>,<br />
&nbsp; <span class="st0">'order'</span> =&gt; <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'Profile.name'</span> =&gt; <span class="st0">'asc'</span><span class="br0">&#41;</span>,<br />
&nbsp; <span class="st0">'limit'</span> =&gt; <span class="nu0">20</span>,<br />
&nbsp; <span class="st0">'page'</span> =&gt; <span class="re0">$page</span><br />
<span class="br0">&#41;</span>;<br />
<span class="re0">$users</span> = <span class="re0">$this</span>-&gt;<span class="me1">paginate</span><span class="br0">&#40;</span><span class="st0">'User'</span><span class="br0">&#41;</span>;</div>
<p>Don't forget to supply the calculated page in your pagination config.</p>
<p>Now you are totally free for the other widgets. For example the pagination code for your community widget would look like this now:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$page</span> = <span class="re0">$this</span>-&gt;<span class="me1">pageForPagination</span><span class="br0">&#40;</span><span class="st0">'Community'</span><span class="br0">&#41;</span>;<br />
<span class="re0">$this</span>-&gt;<span class="me1">paginate</span><span class="br0">&#91;</span><span class="st0">'Community'</span><span class="br0">&#93;</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><br />
&nbsp; <span class="st0">'contain'</span> =&gt; <span class="kw2">false</span>,<br />
&nbsp; <span class="st0">'order'</span> =&gt; <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'Community.title'</span> =&gt; <span class="st0">'asc'</span><span class="br0">&#41;</span>,<br />
&nbsp; <span class="st0">'limit'</span> =&gt; <span class="nu0">5</span>,<br />
&nbsp; <span class="st0">'page'</span> =&gt; <span class="re0">$page</span><br />
<span class="br0">&#41;</span>;<br />
<span class="re0">$communities</span> = <span class="re0">$this</span>-&gt;<span class="me1">paginate</span><span class="br0">&#40;</span><span class="st0">'Community'</span><span class="br0">&#41;</span>;</div>
<p>Alrighty, that's it for paginating multiple widgets on the same page with CakePHP. As you see, the hack did not involve a lot of fancy logic, which really is a plus for Cake's paginator. You might wonder why CakePHP does not offer this functionality in the first place. Well, it doesn't yet, but since pagination might be redone in the future chances are good it will support this out of the core at some point.</p>
<p>Also keep in mind we want to promote the use of the controller's $paginate property. In this article I overwrite it for the action used. You might want to move the parameters that aren't changed up to the $params property initialisation.</p>
<p>Have a good one!</p>
<p>-- Tim Koschuetzki aka DarkAngelBGE<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/48ad241e-b018-4532-a748-0ec74834cda3"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fhow-to-have-multiple-paginated-widgets-on-the-same-page-with-cakephp%3A48ad241e-b018-4532-a748-0ec74834cda3 &amp;title=How+to+have+multiple+paginated+widgets+on+the+same+page+with+CakePHP';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fhow-to-have-multiple-paginated-widgets-on-the-same-page-with-cakephp%3A48ad241e-b018-4532-a748-0ec74834cda3';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fhow-to-have-multiple-paginated-widgets-on-the-same-page-with-cakephp%3A48ad241e-b018-4532-a748-0ec74834cda3&amp;title=How+to+have+multiple+paginated+widgets+on+the+same+page+with+CakePHP&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fhow-to-have-multiple-paginated-widgets-on-the-same-page-with-cakephp%3A48ad241e-b018-4532-a748-0ec74834cda3&amp;title=How+to+have+multiple+paginated+widgets+on+the+same+page+with+CakePHP';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/how-to-have-multiple-paginated-widgets-on-the-same-page-with-cakephp:48ad241e-b018-4532-a748-0ec74834cda3">23 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/how-to-have-multiple-paginated-widgets-on-the-same-page-with-cakephp:48ad241e-b018-4532-a748-0ec74834cda3#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/simple-data-access-control:48b250b6-7314-48e8-8252-6efb4834cda3">Simple Data Access Control</a></h2>	<div class="posted-on">
		<p>Posted on 25/8/08 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hey folks,</p>
<p>this is post #6 of my <a href="http://debuggable.com/posts/time-to-grow-again-or-loose-money:48ab3665-2054-4e55-b13f-0c104834cda3">30 day challenge</a>.</p>
<p>If your application is like most, then you have some basic permission requirements for your data. A simple scenario is the following. Blog posts can only be edited by their owners and administrators. Same goes for viewing unpublished blog posts. Given that requirement I usually wrote code like this in the past:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">class</span> PostsController <span class="kw2">extends</span> Controller<span class="br0">&#123;</span><br />
&nbsp; <span class="kw2">function</span> view<span class="br0">&#40;</span><span class="re0">$id</span> = <span class="kw2">null</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$post</span> = <span class="re0">$this</span>-&gt;<span class="me1">Post</span>-&gt;<span class="me1">findById</span><span class="br0">&#40;</span><span class="re0">$post</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">notEmpty</span><span class="br0">&#40;</span><span class="re0">$post</span>, <span class="st0">'404'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="re0">$ownPost</span> = <span class="re0">$post</span><span class="br0">&#91;</span><span class="st0">'Post'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'user_id'</span><span class="br0">&#93;</span> == User::<span class="me2">get</span><span class="br0">&#40;</span><span class="st0">'id'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="kw2">true</span><span class="br0">&#40;</span><span class="re0">$post</span><span class="br0">&#91;</span><span class="st0">'Post'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'published'</span><span class="br0">&#93;</span> || <span class="br0">&#40;</span><span class="re0">$ownPost</span> || User::<span class="me2">isAdmin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>, <span class="st0">'403'</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span> <br />
<br />
&nbsp; <span class="kw2">function</span> edit<span class="br0">&#40;</span><span class="re0">$id</span> = <span class="kw2">null</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$post</span> = <span class="re0">$this</span>-&gt;<span class="me1">Post</span>-&gt;<span class="me1">findById</span><span class="br0">&#40;</span><span class="re0">$post</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">notEmpty</span><span class="br0">&#40;</span><span class="re0">$post</span>, <span class="st0">'404'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="re0">$ownPost</span> = <span class="re0">$post</span><span class="br0">&#91;</span><span class="st0">'Post'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'user_id'</span><span class="br0">&#93;</span> == User::<span class="me2">get</span><span class="br0">&#40;</span><span class="st0">'id'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="kw2">true</span><span class="br0">&#40;</span><span class="re0">$ownPost</span> || User::<span class="me2">isAdmin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, <span class="st0">'403'</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span> <br />
<span class="br0">&#125;</span></div>
<p><strong>Note:</strong> See this post about <a href="http://debuggable.com/posts/assert-the-yummyness-of-your-cake:480f4dd6-7fe0-4113-9776-458acbdd56cb">the Assert implementation</a>. If you wonder about the User::get('id') call - that is part of our custom Auth system we hope to publish at some point.</p>
<p>One could argue that the above is not ideally DRY and therefor should be refactored. In the past I probably would have followed that logic. However, these days I'm more often like fuck DRY if a little dupplication here and there makes code easier to read and to maintain (yes, that is very much possible with certain one liners).</p>
<p>Anyway, what I don't like about the above is that I feel the logic for deciding record permissions falls into the Model realm. It simply makes more sense if you think of it as a business requirement which should be abstracted in the model layer. So here is how I deal with the problem these days:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">class</span> User <span class="kw2">extends</span> AppModel<span class="br0">&#123;</span><br />
&nbsp; <a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> can<span class="br0">&#40;</span><span class="re0">$action</span>, <span class="re0">$record</span>, <span class="re0">$options</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/is_string"><span class="kw3">is_string</span></a><span class="br0">&#40;</span><span class="re0">$options</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$options</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'model'</span> =&gt; <span class="re0">$options</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="re0">$options</span> = <a href="http://www.php.net/array_merge"><span class="kw3">array_merge</span></a><span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><br />
&nbsp; &nbsp; &nbsp; <span class="st0">'action'</span> =&gt; <span class="re0">$action</span>,<br />
&nbsp; &nbsp; &nbsp; <span class="st0">'model'</span> =&gt; <a href="http://www.php.net/key"><span class="kw3">key</span></a><span class="br0">&#40;</span><span class="re0">$record</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#41;</span>, <span class="re0">$options</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/method_exists"><span class="kw3">method_exists</span></a><span class="br0">&#40;</span><span class="re0">$options</span><span class="br0">&#91;</span><span class="st0">'model'</span><span class="br0">&#93;</span>, <span class="st0">'userCan'</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/call_user_func"><span class="kw3">call_user_func</span></a><span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="re0">$options</span><span class="br0">&#91;</span><span class="st0">'model'</span><span class="br0">&#93;</span>, <span class="re0">$method</span><span class="br0">&#41;</span>, <span class="re0">$record</span>, <span class="re0">$options</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="kw1">return</span> <span class="re0">$record</span><span class="br0">&#91;</span><span class="re0">$options</span><span class="br0">&#91;</span><span class="st0">'model'</span><span class="br0">&#93;</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'user_id'</span><span class="br0">&#93;</span> == User::<span class="me2">get</span><span class="br0">&#40;</span><span class="st0">'id'</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span><br />
<br />
<span class="kw2">class</span> Post <span class="kw2">extends</span> AppModel<span class="br0">&#123;</span><br />
&nbsp; <a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> userCan<span class="br0">&#40;</span><span class="re0">$record</span>, <span class="re0">$options</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><span class="re0">$options</span><span class="br0">&#91;</span><span class="st0">'action'</span><span class="br0">&#93;</span> == <span class="st0">'view'</span> &amp;&amp; <span class="re0">$record</span><span class="br0">&#91;</span><span class="st0">'Post'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'published'</span><span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="kw2">true</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="kw1">return</span> <span class="br0">&#40;</span><span class="re0">$record</span><span class="br0">&#91;</span><span class="st0">'Post'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'user_id'</span><span class="br0">&#93;</span> == User::<span class="me2">get</span><span class="br0">&#40;</span><span class="st0">'id'</span><span class="br0">&#41;</span><span class="br0">&#41;</span> || User::<span class="me2">isAdmin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span><br />
<br />
<span class="kw2">class</span> PostsController <span class="kw2">extends</span> Controller<span class="br0">&#123;</span><br />
&nbsp; <span class="kw2">function</span> view<span class="br0">&#40;</span><span class="re0">$id</span> = <span class="kw2">null</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$post</span> = <span class="re0">$this</span>-&gt;<span class="me1">Post</span>-&gt;<span class="me1">findById</span><span class="br0">&#40;</span><span class="re0">$post</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">notEmpty</span><span class="br0">&#40;</span><span class="re0">$post</span>, <span class="st0">'404'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="kw2">true</span><span class="br0">&#40;</span>User::<span class="me2">can</span><span class="br0">&#40;</span><span class="st0">'view'</span>, <span class="re0">$post</span><span class="br0">&#41;</span>, <span class="st0">'403'</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span> <br />
<br />
&nbsp; <span class="kw2">function</span> edit<span class="br0">&#40;</span><span class="re0">$id</span> = <span class="kw2">null</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$post</span> = <span class="re0">$this</span>-&gt;<span class="me1">Post</span>-&gt;<span class="me1">findById</span><span class="br0">&#40;</span><span class="re0">$post</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">notEmpty</span><span class="br0">&#40;</span><span class="re0">$post</span>, <span class="st0">'404'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="kw2">true</span><span class="br0">&#40;</span>User::<span class="me2">can</span><span class="br0">&#40;</span><span class="st0">'edit'</span>, <span class="re0">$post</span><span class="br0">&#41;</span>, <span class="st0">'403'</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span> <br />
<span class="br0">&#125;</span>
</div>
<p>This is quite some code for this refactoring, yet I found it extremly nice to work with this pattern torwards data access control. It is fairly light weight compared to most other approaches, yet gives you a per-Model and per-Context kind of flexibility on access control.</p>
<p>Let me know if you have any questions!</p>
<p>HTH,<br />
-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/48b250b6-7314-48e8-8252-6efb4834cda3"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fsimple-data-access-control%3A48b250b6-7314-48e8-8252-6efb4834cda3 &amp;title=Simple+Data+Access+Control';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fsimple-data-access-control%3A48b250b6-7314-48e8-8252-6efb4834cda3';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fsimple-data-access-control%3A48b250b6-7314-48e8-8252-6efb4834cda3&amp;title=Simple+Data+Access+Control&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fsimple-data-access-control%3A48b250b6-7314-48e8-8252-6efb4834cda3&amp;title=Simple+Data+Access+Control';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/simple-data-access-control:48b250b6-7314-48e8-8252-6efb4834cda3">14 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/simple-data-access-control:48b250b6-7314-48e8-8252-6efb4834cda3#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/4-cakephp-tricks:4811ad82-32dc-4a38-bc10-36304834cda3">Two CakePHP tricks</a></h2>	<div class="posted-on">
		<p>Posted on 24/8/08 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hey folks,</p>
<p>here we go with post #5 of my <a href="http://debuggable.com/posts/time-to-grow-again-or-loose-money:48ab3665-2054-4e55-b13f-0c104834cda3">30 day challenge</a></p>
<h3>Tip 1: Debugging frequently called functions</h3>
<p>Imagine you got 100 assertions in the unit test of a function. Suddenly one or two unit tests fail. The returned result makes no sense whatsoever and you need to debug the function. If you just put a debug() statement in, you will see hundreds of outputs and would not know which one belongs to the case you are interested in. My favorite solution to this problem is to use the Configure class as a toggle for showing the debug information. But lets look at an example:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$expected</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span>;<br />
<span class="re0">$r</span> = Set::<a href="http://www.php.net/extract"><span class="kw3">extract</span></a><span class="br0">&#40;</span><span class="st0">'/User[2]/id'</span>, <span class="re0">$a</span><span class="br0">&#41;</span>;<br />
<span class="re0">$this</span>-&gt;<span class="me1">assertEqual</span><span class="br0">&#40;</span><span class="re0">$r</span>, <span class="re0">$expected</span><span class="br0">&#41;</span>;<br />
<br />
<span class="co1">// Test that is failing</span><br />
<span class="re0">$expected</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="nu0">4</span>, <span class="nu0">5</span><span class="br0">&#41;</span>;<br />
Configure::<span class="me2">write</span><span class="br0">&#40;</span><span class="st0">'debug'</span>, <span class="nu0">1</span><span class="br0">&#41;</span>;<br />
<span class="re0">$r</span> = Set::<a href="http://www.php.net/extract"><span class="kw3">extract</span></a><span class="br0">&#40;</span><span class="st0">'/User[id&gt;3]/id'</span>, <span class="re0">$a</span><span class="br0">&#41;</span>;<br />
Configure::<span class="me2">write</span><span class="br0">&#40;</span><span class="st0">'debug'</span>, <span class="nu0">0</span><span class="br0">&#41;</span>;<br />
<span class="re0">$this</span>-&gt;<span class="me1">assertEqual</span><span class="br0">&#40;</span><span class="re0">$r</span>, <span class="re0">$expected</span><span class="br0">&#41;</span>;<br />
<br />
<span class="re0">$expected</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="nu0">2</span>, <span class="nu0">3</span><span class="br0">&#41;</span>;<br />
<span class="re0">$r</span> = Set::<a href="http://www.php.net/extract"><span class="kw3">extract</span></a><span class="br0">&#40;</span><span class="st0">'/User[id&gt;1][id&lt;=3]/id'</span>, <span class="re0">$a</span><span class="br0">&#41;</span>;<br />
<span class="re0">$t</span> his-&gt;<span class="me1">assertEqual</span><span class="br0">&#40;</span><span class="re0">$r</span>, <span class="re0">$expected</span><span class="br0">&#41;</span>;<br />
<br />
<span class="co1">// Function to debug</span><br />
<span class="kw2">function</span> <a href="http://www.php.net/extract"><span class="kw3">extract</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="co1">// do stuff</span><br />
&nbsp; debug<span class="br0">&#40;</span><span class="re0">$valueOfInterest</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span></div>
<p>This makes sure you only get the debug output for the one particular case you are interested in.</p>
<h3>Tip 2: Custom config file</h3>
<p>This is a very simple one. To make your application configurable via a global config file, all you need to do is the following. Put this code inside your /app/config/bootstrap.php file:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
Configure::<span class="me2">load</span><span class="br0">&#40;</span><span class="st0">'config'</span><span class="br0">&#41;</span>;</div>
<p>This causes a file called /app/config/config.php to be included. You can of course use any other name, but I like this one. Created the file inside /app/config and then fill it with code like this:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$config</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><br />
&nbsp; <span class="st0">'App.name'</span> =&gt; <span class="st0">'Debuggable.com'</span>,<br />
&nbsp; <span class="st0">'App.guestAccount'</span> =&gt; <span class="st0">'guest@debuggable.com'</span>,<br />
&nbsp; <span class="st0">'App.feedbackEmail'</span> =&gt; <span class="st0">'feedback@debuggable.com'</span>,<br />
&nbsp; <span class="st0">'App.loginCookieLife'</span> =&gt; <span class="st0">'+1 year'</span>,<br />
<span class="br0">&#41;</span>;<br />
date_default_timezone_set<span class="br0">&#40;</span><span class="st0">'UTC'</span><span class="br0">&#41;</span>;</div>
<p><strong>Note:</strong> CakePHP expects an array named $config to be present in this file. So you could use App => array(name => val) to assign the sub values of the App key, however CakePHP also use the same key (App) for some of its settings. So you shouldn't completely overwrite it unless you know what you are doing. The keys used by CakePHP right now are: 'base', 'baseUrl', 'dir', 'webroot' and 'encoding'.</p>
<p>You can now globally access any of your config values. Here is an example inside a layout for setting the title element:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
&lt;title&gt;&lt;?php <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$title_for_layout</span>.<span class="st0">' :: '</span>.Configure::<span class="me2">read</span><span class="br0">&#40;</span><span class="st0">'App.name'</span><span class="br0">&#41;</span>; <span class="kw2">?&gt;</span>&lt;/title&gt;</div>
<p>Alright, I hope you found something useful in the tips above,</p>
<p>-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/4811ad82-32dc-4a38-bc10-36304834cda3"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2F4-cakephp-tricks%3A4811ad82-32dc-4a38-bc10-36304834cda3 &amp;title=Two+CakePHP+tricks';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2F4-cakephp-tricks%3A4811ad82-32dc-4a38-bc10-36304834cda3';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2F4-cakephp-tricks%3A4811ad82-32dc-4a38-bc10-36304834cda3&amp;title=Two+CakePHP+tricks&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2F4-cakephp-tricks%3A4811ad82-32dc-4a38-bc10-36304834cda3&amp;title=Two+CakePHP+tricks';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/4-cakephp-tricks:4811ad82-32dc-4a38-bc10-36304834cda3">4 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/4-cakephp-tricks:4811ad82-32dc-4a38-bc10-36304834cda3#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/private-methods-follow-up:4873b289-8f70-4500-a798-76ea4834cda3">Private methods - Follow Up</a></h2>	<div class="posted-on">
		<p>Posted on 23/8/08 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hey folks,</p>
<p>as I expected almost everybody disagreed with <a href="http://debuggable.com/posts/programming-psychology-ii-private-methods:481ed862-b0d8-4a0e-9247-165c4834cda3">my views on private methods</a>. Here is the deal:</p>
<blockquote><p>If you can use the private / protected feature of your language to do more good than evil in the world, all power to you.</p></blockquote>
<p>If you have doubts ... read on.</p>
<p>First I have to make some confessions. I have not studied computer science. I have not done much Java. I have little trust in theory that I cannot apply to the real world. I do not think modern programming is much of a scientific endeavor. I believe <a href="http://www.codinghorror.com/blog/archives/000878.html">the best code is no code at all</a>. And I think there are lots of reasons to question anything people call fundamentally true.</p>
<p>But more than everything else, I believe the following:</p>
<blockquote><p>We are in the stone age of programming. We are really just talking Fire, Water, Wind and Earth here.</p></blockquote>
<p><img src="http://static.thinkingphp.org/img/private-methods-follow-up-four-elements.png"></p>
<p>It has only been 50 years since <a href="http://en.wikipedia.org/wiki/FORTRAN">modern</a> <a href="http://en.wikipedia.org/wiki/Lisp_programming_language">programming</a> <a href="http://en.wikipedia.org/wiki/COBOL">appeared</a>. Chances are that 100 years from now most of what we consider good ideas and best practices will seem like a joke. But here I go lecturing you people with what in reality isn't more than a bunch of hunches and ideas of some guy without formal education in the field.</p>
<p>But ... I do have some experience with applications heavily using private functions. Once upon a time I worked on a CakePHP application. It was big. 300++ database tables. We're talking about what is probably the biggest CakePHP install out there. The previous programmers seemed to love private methods. They made sure to put 4-5 in at least every controller for good measure. I refactored this code, at least a lot of it. And I noticed a consistent pattern: 9 out of 10 times private methods were used as a rug that shit the programmers didn't want to architect properly was swept under.</p>
<p>Now this is just one example Felix, you might say. You haven't seen my glorious use of this most awesome of all OOP concepts. And you are right. I haven't. But I want my theory to be true. I feel I'm onto something. I saw this pattern to emerge every time I looked at private functions. And I either want you guys to proof me that I'm an idiot (I can live with that, no worries) or see the elegance of avoiding private methods yourself.</p>
<p>So I decided to join Nate Abele's <a href="http://debuggable.com/posts/i-will-insult-your-code!:48ac91d1-ca78-4e95-ad66-1e854834cda3">I will insult your code</a> challenge. Send me some CakePHP code that you cannot imagine to be elegant without private or protected methods / properties. Limit yourself to a class or two tops (like controller + model). <a href="mailto:felix@debuggable.com">Send this code to me</a>. I will either refactor it to my idea of beauty and elegance or admit my mistake : ).</p>
<p>This is not exactly going to be a scientific proof or anything close, but as long as I might be able to convince or get myself convinced somebody is going to learn from it!</p>
<p>-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/4873b289-8f70-4500-a798-76ea4834cda3"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fprivate-methods-follow-up%3A4873b289-8f70-4500-a798-76ea4834cda3 &amp;title=Private+methods+-+Follow+Up';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fprivate-methods-follow-up%3A4873b289-8f70-4500-a798-76ea4834cda3';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fprivate-methods-follow-up%3A4873b289-8f70-4500-a798-76ea4834cda3&amp;title=Private+methods+-+Follow+Up&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fprivate-methods-follow-up%3A4873b289-8f70-4500-a798-76ea4834cda3&amp;title=Private+methods+-+Follow+Up';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/private-methods-follow-up:4873b289-8f70-4500-a798-76ea4834cda3">16 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/private-methods-follow-up:4873b289-8f70-4500-a798-76ea4834cda3#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="paging">
	<a href="/posts/index/page:26" class="prev">&laquo; Previous</a> <span><a href="/posts/index/page:23">23</a></span> | <span><a href="/posts/index/page:24">24</a></span> | <span><a href="/posts/index/page:25">25</a></span> | <span><a href="/posts/index/page:26">26</a></span> | <span class="current">27</span> | <span><a href="/posts/index/page:28">28</a></span> | <span><a href="/posts/index/page:29">29</a></span> | <span><a href="/posts/index/page:30">30</a></span> | <span><a href="/posts/index/page:31">31</a></span> <a href="/posts/index/page:28" class="next">Next &raquo;</a></div>	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@Jörn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class="active"><a href="/blog">Blog</a></li><li class=""><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
