<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Blog &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class="active"><a href="/blog">Blog</a></li><li class=""><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="paging">
	<a href="/posts/index/page:48" class="prev">&laquo; Previous</a> <span><a href="/posts/index/page:45">45</a></span> | <span><a href="/posts/index/page:46">46</a></span> | <span><a href="/posts/index/page:47">47</a></span> | <span><a href="/posts/index/page:48">48</a></span> | <span class="current">49</span> | <span><a href="/posts/index/page:50">50</a></span> | <span><a href="/posts/index/page:51">51</a></span> | <span><a href="/posts/index/page:52">52</a></span> | <span><a href="/posts/index/page:53">53</a></span> <a href="/posts/index/page:50" class="next">Next &raquo;</a></div>
	<div class="post">
	<h2><a href="/posts/what-are-design-patterns:480f4dfd-60e4-42fc-a504-4896cbdd56cb">What are Design Patterns</a></h2>	<div class="posted-on">
		<p>Posted on 27/4/07 by 
		<a href="/tim">Tim Koschützki</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/tim_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<h2>What are Design Patterns?</h2>
<p>In software engineering in general, and PHP web development in particular, design patterns are general repeatable solutions to commonly occurring problems. A design pattern is not a finished design that can be transformed directly into code - it is more like a description or template for how to solve a problem that can be used in many different situations.</p>
<p><!--adsense#singlepost_banner468horiz--></p>
<p>In PHP web development not all design patterns are known play a big role. However, the once that play a role, play a major one and are often discussed on forums. The implementation of design patterns in PHP is sometimes not very easy and there has been a lot of discussion going on in the past about the differences between certain patterns and the differences of patterns in web development and application programming.</p>
<p>By the way, algorithms are not thought of as design patterns, since they solve computational problems rather than design problems.</p>
<p>The design patterns described on PHP-Design-Patterns.com share the same architecture. There are many approaches to writing articles or even book about design patterns and every author has to choose one. I have decided to follow a similar approach to the <a href="http://www.amazon.com/Design-Patterns-Object-Oriented-Addison-Wesley-Professional/dp/0201633612/sr=8-1/qid=1161692409/ref=pd_bbs_sr_1/002-4060714-2495267?ie=UTF8&s=books" title="Gang of Four Book">Gang of Four Book</a>:</p>
<p><!--adsense#singlepost_banner468horiz--></p>
<ul>
<li>The <i>name</i> of the design pattern is important, because it creates a unique terminology for a given problem and the pattern that solves it. Via communicating a design pattern's name to fellow programmers, they all know what kind of problem you are facing and how you intent to solve it.</li>
<li>The kinds of problems to which the pattern should be applied is discussed in the <i>When to apply it</i> section. Of course, a discussion about when <i>not</i> to apply can be foun there too.</li>
<li>The <i>Implementation</i> section of the patterns on PHP-Design-Patterns.com discusses in detail possible pitfalls when implementing the pattern. This rather big section shows you code snippets and any further information that you need to successfully apply the patterns to problems.</li>
<li>In Web Development, a rather limited field for software design, certain patterns appear over and over again in special parts of web application. Those parts are named in the <i>Known Uses</i> section and are discussed there.</li>
<li>As often as in application programming, design patterns go alongside each other in PHP web development, too. Relatonships between patterns and way how patterns can be best used together are discussed in the <i>Related Patterns</i> section.</li>
</ul>
<p>Now people think that by applying a design pattern they get full-fletched tried-and-true-design. That's not really true. Please read on when you want to know how design pattern solve problems.<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/480f4dfd-60e4-42fc-a504-4896cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fwhat-are-design-patterns%3A480f4dfd-60e4-42fc-a504-4896cbdd56cb &amp;title=What+are+Design+Patterns';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fwhat-are-design-patterns%3A480f4dfd-60e4-42fc-a504-4896cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fwhat-are-design-patterns%3A480f4dfd-60e4-42fc-a504-4896cbdd56cb&amp;title=What+are+Design+Patterns&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fwhat-are-design-patterns%3A480f4dfd-60e4-42fc-a504-4896cbdd56cb&amp;title=What+are+Design+Patterns';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/what-are-design-patterns:480f4dfd-60e4-42fc-a504-4896cbdd56cb">1 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/what-are-design-patterns:480f4dfd-60e4-42fc-a504-4896cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/before-you-refactor:480f4dfd-70e8-49da-85cc-4aeecbdd56cb">Before you refactor...</a></h2>	<div class="posted-on">
		<p>Posted on 26/4/07 by 
		<a href="/tim">Tim Koschützki</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/tim_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<h2>Have a solid Testbase</h2>
<p>Whenever you do refactoring you should always ensure you have a solid test base. Not tests written on paper, but <a href="http://php-coding-practices.com/category/test-driven-development/" title="Unit tests with Test-driven Development">Unit Tests</a>. The tests are essential, because even when you follow the refactorings' structures, you are a still a human-being and therefore make mistakes. You need solid tests. Simple.</p>
<p><!--adsense#singlepost_banner468horiz--></p>
<p>It is vital to make your tests self-checking. Meaning that you alter how they print out their results. You could either make them print "OK" or "Something was wrong". Or you could of course tell them <em>what</em> went wrong. If you do not make your tests self-checking you lose much time manually checking numbers against numbers, strings against strings. Consider using a testing framework like <a href="http://simpletest.org" title="Simpletest">Simpletest</a> that prints nice messages like "Test #1 failed: got 'string1' when 'string2' was expected. It helps a lot and saves plenty of time.</p>
<p>It's essential to lean on tests. Writing tests takes up time...of course. But they will give you that *lost* time back when you alter the program later. They give you confidence about your code and prevent you from getting hairloss.</p>
<h2>Compare with your requirements</h2>
<p>You have to know what the code is supposed to do and what it is doing already before you refactor. Refactoring is good for getting from an overly complex solution to a simple one. You should not break anything or even lose functionality. Tripple-check with your requirements list, your specification and - if necessary - with your client, that nothing broke.</p>
<h2>Make sure you have your refactoring hat on</h2>
<p>As a programmer we usually wear two hats - the feature hat and the refactoring hat. It is absolutely critical that you do not add new functionality to your system when you are doing a refactoring. The risk of breaking things is just too high. Even with good tests - good meaning that they cover many state possibilities of your system - you can end up wasting too much time getting to know what is <em>really</em> going on. You will find yourself changing hats quite often. You start by trying to add a new function, and you realize this would be much easier if the code was structured differently. Swap hats and refactor for a while. Once it is better structured, swap hats again and get the new function working. You realize you could use some 3rd party code and you swap hats again. This could only take a couple of minutes. Always be aware of which hat you are wearing, though.</p>
<p>Besides that, keep the refactoring rhytmn in mind. Test, small refactoring, test, small refactoring.</p>
<p>Oh and did I say test?  :)</p>
<p><!--adsense#singlepost_banner468horiz--><br />
<img style="display: none;" src="http://debuggable.com/posts/tick/480f4dfd-70e8-49da-85cc-4aeecbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fbefore-you-refactor%3A480f4dfd-70e8-49da-85cc-4aeecbdd56cb &amp;title=Before+you+refactor...';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fbefore-you-refactor%3A480f4dfd-70e8-49da-85cc-4aeecbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fbefore-you-refactor%3A480f4dfd-70e8-49da-85cc-4aeecbdd56cb&amp;title=Before+you+refactor...&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fbefore-you-refactor%3A480f4dfd-70e8-49da-85cc-4aeecbdd56cb&amp;title=Before+you+refactor...';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/before-you-refactor:480f4dfd-70e8-49da-85cc-4aeecbdd56cb">0 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/before-you-refactor:480f4dfd-70e8-49da-85cc-4aeecbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/introduction-to-test-driven-development-tdd-part-2:480f4dfd-b3e4-4f84-9399-4084cbdd56cb">Introduction to Test-Driven-Development (TDD) - Part 2</a></h2>	<div class="posted-on">
		<p>Posted on 25/4/07 by 
		<a href="/tim">Tim Koschützki</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/tim_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Following up on <a href="http://php-coding-practices.com/test-driven-development/introduction-to-test-driven-development-tdd-part-1/" title="Introduction to Test-Driven-Development (TDD) - Part 1">yesterday's part 1 of this introduction</a> we have to deal with the question why someone like you or me should use Test-driven Development. Why should someone take on very small steps in programming?</p>
<h2>Why should we use Test-driven Development?</h2>
<p><!--adsense#singlepost_banner468horiz--></p>
<p>Test-driven Development is about managing fear in programming. We have all been in a situation where we had to tackle a complex programming problem where we couldn't see the end from the beginning. We are afraid of not getting the system to work - at least not without a long bugtrail. Fear in general, and particularly in programming, has a host of other effects, too:</p>
<ul>
<li>Fear makes you tentative.</li>
<li>Fear makes you want to communicate less.</li>
<li>Fear makes you shy away from feedback.</li>
<li>Fear makes you grumpy.</li>
<li>Fear makes you inferior.</li>
<li>Fear gets you out of control.</li>
</ul>
<p>None of these effects want to be experienced - especially not in programming. When you are tackling one of these very hard programming problems, these effects of fear can be the reason for the project to fail. They can be the reason for you to fail. Test-driven Development is about eliminating fear when programming.</p>
<h2>How should we tackle a difficult programming situation?</h2>
<ul>
<li>Instead of being tentative, begin learning concretely as fast as possible.</li>
<li>Instead of hiding in your pit, get out and communicate more clearly.</li>
<li>Instead of avoiding feedback, go out and ask people for feedback.</li>
<li>Instead of getting inferior and out of control, work on being superior all the time.</li>
<li>Avoid getting grumpy - life's too short to waste your energy. :)</li>
</ul>
<p>Programming is like facing all other sorts of tasks. When you break a big task up into small chunks you cannot only measure your progress, but you can also better organize yourself and get the task done. The tests in Test-driven Development are like subtasks of the one big task - the project. Once we get one test working, we got it working forever. If it fails, we can quickly fix it up. The important thing to note is that we have <em>someone</em> (our tests) notifying us about crashes in our application.</p>
<p>With another test working we are one step closer to getting the overall system to work. When one test fails, we didn't go one step back. We went forward another one, because our code taught us a lesson about itself - about its relation to other code, input, etc.</p>
<h2>Should we always use Test-driven Development?</h2>
<p>I am a firm believer in Test-driven Development. However, some people like Kent Beck - author of <a href="http://astore.amazon.com/timkoschwebde-20/detail/0321146530/002-5317806-9220066">Test-driven development by Example</a>, say that it's also good enough to revert to your ordinary programming practices as long as you reserve TDD for special occasions. However, there are occasions where TDD is still insufficient.</p>
<p>Think of PHP security. Of course you can test whether your security barriers work. However, you cannot test whether your security methods are efficient enough to make hacking the system impossible.</p>
<h2>Getting setup with Test-driven Development</h2>
<p>There are numerous frameworks for using Test-driven Development with PHP. The two most popular ones are <a href="http://sourceforge.net/projects/phpunit/" title="Download PHPUnit">PEAR's PHPUnit</a> and <a href="http://simpletest.org" title="Marcus Baker's SimpleTest">SimpleTest</a>. I very much prefer the latter, because it has an easy-to-use <a href="http://eclipse.org" title="Get the Eclipse IDE">Eclipse</a> plugin, my preffered IDE / Editor. However, SimpleTest is not limited to Eclipse. You can of course use the framework with any IDE or set up, simply by including the appropriate SimpleTest files within your code.</p>
<p>I would like you to <a href="http://simpletest.org/en/download.html" title="Download SimpleTest">download SimpleTest</a> follow the installation instructions in the readme. Then you can play around with it already and tomorrow we will really delve into the topic of Test-Driven Development. :)</p>
<p><!--adsense#singlepost_banner468horiz--></p>
<p><img style="display: none;" src="http://debuggable.com/posts/tick/480f4dfd-b3e4-4f84-9399-4084cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fintroduction-to-test-driven-development-tdd-part-2%3A480f4dfd-b3e4-4f84-9399-4084cbdd56cb &amp;title=Introduction+to+Test-Driven-Development+%28TDD%29+-+Part+2';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fintroduction-to-test-driven-development-tdd-part-2%3A480f4dfd-b3e4-4f84-9399-4084cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fintroduction-to-test-driven-development-tdd-part-2%3A480f4dfd-b3e4-4f84-9399-4084cbdd56cb&amp;title=Introduction+to+Test-Driven-Development+%28TDD%29+-+Part+2&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fintroduction-to-test-driven-development-tdd-part-2%3A480f4dfd-b3e4-4f84-9399-4084cbdd56cb&amp;title=Introduction+to+Test-Driven-Development+%28TDD%29+-+Part+2';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/introduction-to-test-driven-development-tdd-part-2:480f4dfd-b3e4-4f84-9399-4084cbdd56cb">2 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/introduction-to-test-driven-development-tdd-part-2:480f4dfd-b3e4-4f84-9399-4084cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/introduction-to-test-driven-development-tdd-part-1:480f4dfd-e8f4-4a82-923c-4625cbdd56cb">Introduction to Test-Driven-Development (TDD) - Part 1</a></h2>	<div class="posted-on">
		<p>Posted on 24/4/07 by 
		<a href="/tim">Tim Koschützki</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/tim_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hi folks! Since Test-Driven-Development (TDD) is probably <em>t h e</em> way to develop in a world of failing software, I thought I could write an introduction to it today. It will be broken up into a series of parts (planned are three parts), which I will release on a day-to-day basis.</p>
<h2>The goal of Test-Driven-Development</h2>
<p><!--adsense#singlepost_banner468horiz--></p>
<p><em>Clean code that works</em> is the goal of Test-Driven-Development. Clean code that works is a worthwhile goal for a whole bunch of reasons:</p>
<ul>
<li>It gives you a chance to learn the lessons the code has to teach you. If you only hack together the first thing you can think of, you won't have the chance to think of a second, better thing.</li>
<li>It improves the lives of the users of your software. Keep in mind that if you don't test your software, your users will..</li>
<li>It is a predictable way to develop. You know when you are finished without worries about a long bug trail.</li>
<li>It lets your teammates count on you, and you on them.</li>
<li>It just feels good to see the green bar (i.e. all tests passing).</li>
</ul>
<p>However, how do we get to clean code that works, with all the external factors that seem to be preventing us from doing so? We drive development with automated tests - which is ultimately called Test-Driven-Development.</p>
<h2>What do we do in Test-Driven-Development?</h2>
<p>We write code only if an existing automated test has failed. We eliminate duplication (check for <a href="http://php-coding-practices.com/agile-software-development/problems-with-repeatitive-source-code-or-better-dont-repeat-yourself/" title="The DRY principle">The DRY-principle</a>).</p>
<p>These two rules / behaviors introduce complex technical implications. To make them work we have to:</p>
<ul>
<li>..design dynamically, with running and working code providing feedback between decisions.</li>
<li>We must write our own tests, because we cannot wait 20 times a day for a colleague to write our tests.</li>
<li>Our development environment must provide rapid response to small changes.</li>
<li>Our designs must consist of encapsulated components in order to make testing of each of those easy. This is very i mportant and very difficult to achieve in existing environments.</li>
</ul>
<h2>The TDD-mantra</h2>
<p><!--adsense#singlepost_banner468horiz--></p>
<p>Red - Green - Refactor, according to Kent Beck, author of <a href="http://astore.amazon.com/timkoschwebde-20/detail/0321146530/103-4038215-2725420">Test-Driven-Development by Example</a>, is the TDD-mantra. Red means a test failed, green means you make the test work by writing code that satisfies the test and refactor...you use <a href="http://php-coding-practices.com/refactoring/what-is-refactoring/" title="Refactoring">refactoring</a> to make the code as simple and reusable as possible.</p>
<h2>Social benefits of Test-Driven-Development</h2>
<ul>
<li>If you can avoid long bugtrails, then quality assurance (QA) work can be proactive instead of reactive.</li>
<li>If you can avoid long bug trails, managers can actually manage and plan the project and are able to involve your customers in day-to-day development.</li>
<li>If clean code that works can be written really fast, planning of programming teams can be made in day-to-day cycles instead of week-to-week or even month-to-month. making software is going to get a lot more profitable for your company.</li>
<li>If there are no long bug trails, we have shippable software everyday. We can provide our customers with a fresh update everyday with new functionality, making all people involved very happy.</li>
</ul>
<h2>Conclusion</h2>
<p>The concept is rather simple, but why would a highly-qualified systems engineer take on small steps in programming - each step so simple that it is plain crazy? What does test-driven-development look like? We will see in the second part of this introduction, which will contain a code sample, too. :)<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/480f4dfd-e8f4-4a82-923c-4625cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fintroduction-to-test-driven-development-tdd-part-1%3A480f4dfd-e8f4-4a82-923c-4625cbdd56cb &amp;title=Introduction+to+Test-Driven-Development+%28TDD%29+-+Part+1';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fintroduction-to-test-driven-development-tdd-part-1%3A480f4dfd-e8f4-4a82-923c-4625cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fintroduction-to-test-driven-development-tdd-part-1%3A480f4dfd-e8f4-4a82-923c-4625cbdd56cb&amp;title=Introduction+to+Test-Driven-Development+%28TDD%29+-+Part+1&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fintroduction-to-test-driven-development-tdd-part-1%3A480f4dfd-e8f4-4a82-923c-4625cbdd56cb&amp;title=Introduction+to+Test-Driven-Development+%28TDD%29+-+Part+1';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/introduction-to-test-driven-development-tdd-part-1:480f4dfd-e8f4-4a82-923c-4625cbdd56cb">1 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/introduction-to-test-driven-development-tdd-part-1:480f4dfd-e8f4-4a82-923c-4625cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/problems-with-repeatitive-source-code-or-better-dont-repeat-yourself:480f4dfd-ac70-4f1b-907b-4eb4cbdd56cb">Problems with repetitive source code or better: Don't repeat yourself</a></h2>	<div class="posted-on">
		<p>Posted on 23/4/07 by 
		<a href="/tim">Tim Koschützki</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/tim_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<h2>Introduction</h2>
<p>As php programmers, we collect, organize, maintain and use knowledge and information. We document our knowledge in specifications, use it when we test and write the source code of our application. </p>
<p>Alas, our knowledge changes, everyday and quite quickly, too. When a client wants us to add, change or remove a feature, when government sets out a new rule that lets our program's functionality become nonsense, our knowledge changes. When our knowledge changes, we have to reorganize. Most people think, maintaining the project starts when it is released. Actually, maintaining starts with the first word about the project written anywhere. As programmers we are in a constant state of maintaining our codebase. As project managers we are in a constant state of maintaining our documentation, plans, glossars, etc.</p>
<h2>Avoid knowledge duplication</h2>
<p>When the project's requirements change, we have to alter all code that is written on top of that knowledge. We will spend a lot of time finding all that code. We will have to write tests that document that everything we changed behaves in the new way we want it to.</p>
<p>According to the <a href="http://pragmaticprogrammers.com">Pragmatic Programmers</a> the principle to avoid duplication of knowledge is called the DRY-principle ("Don't repeat yourself"). What does that mean? It means you should ensure that every bit of knowledge of your system, be it in the source code, its documentation or any other documentation, should have a single representation.</p>
<p><!--adsense#singlepost_banner468horiz--></p>
<p>The alternative is to write down the same bit of knowledge on multiple places. When something changes, you have to update all places or else your requirements list, project documentation or source code documentation becomes out of date.</p>
<h2>Possible problems with repetitive knowledge</h2>
<p>Most problems caused by knowledge repetition, belong to one or more of the following categories:</p>
<ul>
<li><strong>Enforced repetition</strong> - Programmers think they have no choice. Circumstances seem to enforce the duplication.</li>
<li><strong>Undeliberate repetition</strong></li>
<p> - We programmers don't recognize that we repeat information.</p>
<li><strong>Repetition due to impatience</strong></li>
<p> - We get lazy and put repetitions in because the situation seems to get easier with them.</p>
<li><strong>Repetition due to many developers</strong></li>
<p> - Different developers from the same team (or different teams) repeat information.</p>
<li><strong>Repetition caused by deadlines</strong></li>
<p> - This often happens in php webdevelopment. A client needs the job done today, so we hack away without thinking about repetition.
</ul>
<p>Let's look at them in more detail.</p>
<h2>Enforced repetition</h2>
<p>Sometimes we seem to be enforced to repeat information. Project standards might force us to develop documents about our source code, which of course will contain duplicate information. What can you do to make changes possible and avoid knowledge repetition?</p>
<ul>
<li>Use scripts and generators that generate code and all the documents.</li>
<li>Write abstract explanations <em>why</em> you do something in the source code the way you do it. Don't repeat what the source code is already telling the reader.</li>
<li>Document information to use code in your phpdoc comments and document details that someone doesn't need to know to <em>use</em> your code in the implementation.</li>
</ul>
<h2>Undeliberate repetition</h2>
<p>Everybody has a bad day once. We often struggle with different problems, probably from our family, friends and what not. Don't let them too close to you! </p>
<p>Programming is a highly sophisticated action that requires lots of concentration. Only program when you are really conscious, feel fine and are relaxed. Try to avoid repetition. When you cannot avoid it now, then document that repetition and fix it later.</p>
<h2>Repetition due to impatience</h2>
<p>That's what I find myself doing quite often. I want the project to be done now and don't abide by the DRY-principle. This is the wrong way to go about it. Why? Because you will end up in a repetition mess making it impossible to find all the things you need to change to fix the repetition. Often projects fail due to such repetition messes. This happens when nobody, not even the project leader, knows what's going on and what documents are the once the team should use. Fixing repetitions will make you spend precious time and very much of it! Code without repeating information in the first place and you will be fine. <strong>You may save a couple of minutes today at the potential risk to lose hours later.</strong> Code disciplined!</p>
<h2>Repetition due to many developers</h2>
<p><!--adsense#singlepost_banner468horiz--></p>
<p>This is the most difficult form of repetition to find out and to fix. The only thing, in my opinion, which you can do about it, is to enforce communication among the team and across multiple teams. Ensure everybody is hacking away at a different piece of the system to avoid conflicts. Set up discussion forums, trac and what not to avoid the repetition. Regular meetings help, too. Fix any repetition as you find it.</p>
<h2>Repetition caused by deadlines</h2>
<p>This is also another very difficult one and I must admit I am not really sure yet what the best way is to handle it. On the one hand I agree that when the deadline is close you must make the code <em>work</em>. As long as it performs well, is secure and fulfills all requirements you are fine. If the deadline is still a week away, you should code with repetition in mind, though. Avoid it at all costs, or else it could lose you many hours, which may in turn cost you the deadline.</p>
<h2>Conclusion</h2>
<p>Make reusability easy. Try to build up an environment that lets you reuse and alter information easily. If something is not easy, people will not use it. Think about it.</p>
<p><img style="display: none;" src="http://debuggable.com/posts/tick/480f4dfd-ac70-4f1b-907b-4eb4cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fproblems-with-repeatitive-source-code-or-better-dont-repeat-yourself%3A480f4dfd-ac70-4f1b-907b-4eb4cbdd56cb &amp;title=Problems+with+repetitive+source+code+or+better%3A+Don%27t+repeat+yourself';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fproblems-with-repeatitive-source-code-or-better-dont-repeat-yourself%3A480f4dfd-ac70-4f1b-907b-4eb4cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fproblems-with-repeatitive-source-code-or-better-dont-repeat-yourself%3A480f4dfd-ac70-4f1b-907b-4eb4cbdd56cb&amp;title=Problems+with+repetitive+source+code+or+better%3A+Don%27t+repeat+yourself&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fproblems-with-repeatitive-source-code-or-better-dont-repeat-yourself%3A480f4dfd-ac70-4f1b-907b-4eb4cbdd56cb&amp;title=Problems+with+repetitive+source+code+or+better%3A+Don%27t+repeat+yourself';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/problems-with-repeatitive-source-code-or-better-dont-repeat-yourself:480f4dfd-ac70-4f1b-907b-4eb4cbdd56cb">3 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/problems-with-repeatitive-source-code-or-better-dont-repeat-yourself:480f4dfd-ac70-4f1b-907b-4eb4cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="paging">
	<a href="/posts/index/page:48" class="prev">&laquo; Previous</a> <span><a href="/posts/index/page:45">45</a></span> | <span><a href="/posts/index/page:46">46</a></span> | <span><a href="/posts/index/page:47">47</a></span> | <span><a href="/posts/index/page:48">48</a></span> | <span class="current">49</span> | <span><a href="/posts/index/page:50">50</a></span> | <span><a href="/posts/index/page:51">51</a></span> | <span><a href="/posts/index/page:52">52</a></span> | <span><a href="/posts/index/page:53">53</a></span> <a href="/posts/index/page:50" class="next">Next &raquo;</a></div>	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@Jörn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class="active"><a href="/blog">Blog</a></li><li class=""><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
