<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Blog &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class="active"><a href="/blog">Blog</a></li><li class=""><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="paging">
	<a href="/posts/index/page:40" class="prev">&laquo; Previous</a> <span><a href="/posts/index/page:37">37</a></span> | <span><a href="/posts/index/page:38">38</a></span> | <span><a href="/posts/index/page:39">39</a></span> | <span><a href="/posts/index/page:40">40</a></span> | <span class="current">41</span> | <span><a href="/posts/index/page:42">42</a></span> | <span><a href="/posts/index/page:43">43</a></span> | <span><a href="/posts/index/page:44">44</a></span> | <span><a href="/posts/index/page:45">45</a></span> <a href="/posts/index/page:42" class="next">Next &raquo;</a></div>
	<div class="post">
	<h2><a href="/posts/activedom-talk-slides-from-jquerycamp-07:480f4dd6-f4b4-4798-aa86-4ab3cbdd56cb">ActiveDOM talk slides from jQueryCamp 07</a></h2>	<div class="posted-on">
		<p>Posted on 30/10/07 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>If you're looking for the slides to my ActiveDOM talk, I've just uploaded them to SlideShare:</p>
<p><a href="http://www.slideshare.net/the_undefined/activedom/">ActiveDOM - "jQuery('a.nd > html :tricks').for('web application').data()"</a></p>
<p>If you're looking for some of the other talks, checkout the <a href="http://www.slideshare.net/tag/jquerycamp07">jquerycamp07 tag</a>.</p>
<p><img src="http://static.thinkingphp.org/img/jquerycamp07.jpg" /></p>
<p>-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/480f4dd6-f4b4-4798-aa86-4ab3cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Factivedom-talk-slides-from-jquerycamp-07%3A480f4dd6-f4b4-4798-aa86-4ab3cbdd56cb &amp;title=ActiveDOM+talk+slides+from+jQueryCamp+07';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Factivedom-talk-slides-from-jquerycamp-07%3A480f4dd6-f4b4-4798-aa86-4ab3cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Factivedom-talk-slides-from-jquerycamp-07%3A480f4dd6-f4b4-4798-aa86-4ab3cbdd56cb&amp;title=ActiveDOM+talk+slides+from+jQueryCamp+07&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Factivedom-talk-slides-from-jquerycamp-07%3A480f4dd6-f4b4-4798-aa86-4ab3cbdd56cb&amp;title=ActiveDOM+talk+slides+from+jQueryCamp+07';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/activedom-talk-slides-from-jquerycamp-07:480f4dd6-f4b4-4798-aa86-4ab3cbdd56cb">8 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/activedom-talk-slides-from-jquerycamp-07:480f4dd6-f4b4-4798-aa86-4ab3cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/sorting-challenge:480f4dd6-0e80-48b2-9515-4755cbdd56cb">Sorting challenge</a></h2>	<div class="posted-on">
		<p>Posted on 25/10/07 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Quick challenge,</p>
<p>lets say you have an array like this:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$products</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'Product'</span> =&gt; <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'ordering'</span> =&gt; <span class="nu0">5</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp;, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'Product'</span> =&gt; <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'ordering'</span> =&gt; <span class="nu0">3</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp;, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'Product'</span> =&gt; <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'ordering'</span> =&gt; <span class="nu0">9</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp;, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'Product'</span> =&gt; <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'ordering'</span> =&gt; <span class="nu0">1</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />
<span class="br0">&#41;</span>;</div>
<p>and you want to iterate through your products by Product.ordering ASC. Whats the fastest way to do this? I just came up with this nifty little attempt, but I'd love to see some other solutions. (Rules: Don't use anything eval()'ish, but anything you find in Cake 1.2 can be used).</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$order</span> = <a href="http://www.php.net/array_flip"><span class="kw3">array_flip</span></a><span class="br0">&#40;</span>Set::<a href="http://www.php.net/extract"><span class="kw3">extract</span></a><span class="br0">&#40;</span><span class="re0">$products</span>, <span class="st0">'{n}.Product.ordering'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
<a href="http://www.php.net/ksort"><span class="kw3">ksort</span></a><span class="br0">&#40;</span><span class="re0">$order</span><span class="br0">&#41;</span>;<br />
<span class="kw1">while</span> <span class="br0">&#40;</span><span class="re0">$product</span> = <span class="re0">$products</span><span class="br0">&#91;</span><a href="http://www.php.net/array_shift"><span class="kw3">array_shift</span></a><span class="br0">&#40;</span><span class="re0">$order</span><span class="br0">&#41;</span><span class="br0">&#93;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp;debug<span class="br0">&#40;</span><span class="re0">$product</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span></div>
<p>-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/480f4dd6-0e80-48b2-9515-4755cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fsorting-challenge%3A480f4dd6-0e80-48b2-9515-4755cbdd56cb &amp;title=Sorting+challenge';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fsorting-challenge%3A480f4dd6-0e80-48b2-9515-4755cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fsorting-challenge%3A480f4dd6-0e80-48b2-9515-4755cbdd56cb&amp;title=Sorting+challenge&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fsorting-challenge%3A480f4dd6-0e80-48b2-9515-4755cbdd56cb&amp;title=Sorting+challenge';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/sorting-challenge:480f4dd6-0e80-48b2-9515-4755cbdd56cb">12 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/sorting-challenge:480f4dd6-0e80-48b2-9515-4755cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/assert-the-yummyness-of-your-cake:480f4dd6-7fe0-4113-9776-458acbdd56cb">Assert the yummyness of your cake</a></h2>	<div class="posted-on">
		<p>Posted on 22/10/07 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hey folks,</p>
<p>if you liked my last post on <a href="http://www.thinkingphp.org/2007/10/21/exceptional-cake/">how to use PHP5 Exceptions in CakePHP</a>, then here is a little addition to it:</p>
<p>When reading over my code, I saw that I had a lot of statements like this in there:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$user</span> = <span class="re0">$Session</span>-&gt;<span class="me1">read</span><span class="br0">&#40;</span><span class="st0">'User'</span><span class="br0">&#41;</span>;<br />
<span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/empty"><span class="kw3">empty</span></a><span class="br0">&#40;</span><span class="re0">$user</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp;throw <span class="kw2">new</span> AppException<span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span></div>
<p>Now there is nothing really wrong with that. However, I suddenly remembered what assertions are and how they could make my code more readable, while making it shorter. I took a quick look at <a href="http://us.php.net/assert">PHP's assert function</a>, but decided that I don't like it. For one because it takes a string value as a parameter that is than eval()'d and also because there is no way to "catch" failed assertions. Now don't get me wrong, I don't think you should normally catch either assertion or exceptions, as they are not meant for flow control. However, I hate limiting myself. The ability to quickly *hack* a piece of software without having to modify any of its actual code is something I really enjoy. So what I ended up doing was basically to create a class called Assert, and abuse it as a name-space for a whole bunch of useful assertion functions. If an assertion succeeds, it simply returns true. If it doesn't, it throws an AppException which will render a nice page to the user telling him what a crappy programmer I am : ).</p>
<p>But enough talk, lets look at how the above code could be re-factored using assertions.</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$user</span> = <span class="re0">$Session</span>-&gt;<span class="me1">read</span><span class="br0">&#40;</span><span class="st0">'User'</span><span class="br0">&#41;</span>;<br />
<a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">notEmpty</span><span class="br0">&#40;</span><span class="re0">$user</span><span class="br0">&#41;</span>;</div>
<p>Or another example, this time rendering a 404 error page if the assertion fails.</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$this</span>-&gt;<span class="me1">Task</span>-&gt;<span class="me1">set</span><span class="br0">&#40;</span><span class="st0">'id'</span>, <span class="re0">$id</span><span class="br0">&#41;</span>;<br />
<span class="kw1">if</span> <span class="br0">&#40;</span>!<span class="re0">$this</span>-&gt;<span class="me1">Task</span>-&gt;<span class="me1">exists</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp;throw <span class="kw2">new</span> AppException<span class="br0">&#40;</span><span class="st0">'404'</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span><br />
<br />
<span class="co1">// turns into</span><br />
<span class="re0">$this</span>-&gt;<span class="me1">Task</span>-&gt;<span class="me1">set</span><span class="br0">&#40;</span><span class="st0">'id'</span>, <span class="re0">$id</span><span class="br0">&#41;</span>;<br />
<a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="kw2">true</span><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">Task</span>-&gt;<span class="me1">exists</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, <span class="st0">'404'</span><span class="br0">&#41;</span>;</div>
<p>Ok, ok ... here is the actual code that you'll need to try it out:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="coMULTI">/**<br />
&nbsp;* undocumented class<br />
&nbsp;*<br />
&nbsp;* @package default<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
<span class="kw2">class</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a><span class="br0">&#123;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $a <br />
&nbsp;* @param unknown $b <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @param unknown $strict <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> test<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$expected</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span>, <span class="re0">$strict</span> = <span class="kw2">true</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$success</span> = <span class="br0">&#40;</span><span class="re0">$strict</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;? <span class="re0">$val</span> === <span class="re0">$expected</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: <span class="re0">$val</span> == <span class="re0">$expected</span>;<br />
<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><span class="re0">$success</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw1">return</span> <span class="kw2">true</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
<br />
&nbsp; &nbsp; &nbsp; <span class="re0">$calls</span> = <a href="http://www.php.net/debug_backtrace"><span class="kw3">debug_backtrace</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="re0">$calls</span> <span class="kw1">as</span> <span class="re0">$call</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw1">if</span> <span class="br0">&#40;</span><span class="re0">$call</span><span class="br0">&#91;</span><span class="st0">'file'</span><span class="br0">&#93;</span> !== <span class="kw2">__FILE__</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$assertCall</span> = <span class="re0">$call</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">break</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$triggerCall</span> = <a href="http://www.php.net/current"><span class="kw3">current</span></a><span class="br0">&#40;</span><span class="re0">$calls</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="re0">$type</span> = Inflector::<span class="me2">underscore</span><span class="br0">&#40;</span><span class="re0">$assertCall</span><span class="br0">&#91;</span><span class="st0">'function'</span><span class="br0">&#93;</span><span class="br0">&#41;</span>;<br />
<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/is_string"><span class="kw3">is_string</span></a><span class="br0">&#40;</span><span class="re0">$info</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'type'</span> =&gt; <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
<br />
&nbsp; &nbsp; &nbsp; <span class="re0">$info</span> = am<span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="st0">'file'</span> =&gt; <span class="re0">$assertCall</span><span class="br0">&#91;</span><span class="st0">'file'</span><span class="br0">&#93;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, <span class="st0">'line'</span> =&gt; <span class="re0">$assertCall</span><span class="br0">&#91;</span><span class="st0">'line'</span><span class="br0">&#93;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, <span class="st0">'function'</span> =&gt; <span class="re0">$triggerCall</span><span class="br0">&#91;</span><span class="st0">'class'</span><span class="br0">&#93;</span>.<span class="st0">'::'</span>.<span class="re0">$triggerCall</span><span class="br0">&#91;</span><span class="st0">'function'</span><span class="br0">&#93;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, <span class="st0">'assertType'</span> =&gt; <span class="re0">$type</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, <span class="st0">'val'</span> =&gt; <span class="re0">$val</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, <span class="st0">'expected'</span> =&gt; <span class="re0">$expected</span><br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#41;</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; throw <span class="kw2">new</span> AppException<span class="br0">&#40;</span><span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> <span class="kw2">true</span><span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><span class="re0">$val</span>, <span class="kw2">true</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> <span class="kw2">false</span><span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><span class="re0">$val</span>, <span class="kw2">false</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $a <br />
&nbsp;* @param unknown $b <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> equal<span class="br0">&#40;</span><span class="re0">$a</span>, <span class="re0">$b</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><span class="re0">$a</span>, <span class="re0">$b</span>, <span class="re0">$info</span>, <span class="kw2">false</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $a <br />
&nbsp;* @param unknown $b <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> identical<span class="br0">&#40;</span><span class="re0">$a</span>, <span class="re0">$b</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><span class="re0">$a</span>, <span class="re0">$b</span>, <span class="re0">$info</span>, <span class="kw2">true</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> pattern<span class="br0">&#40;</span><span class="re0">$pattern</span>, <span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/preg_match"><span class="kw3">preg_match</span></a><span class="br0">&#40;</span><span class="re0">$pattern</span>, <span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">true</span>, am<span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'pattern'</span> =&gt; <span class="re0">$pattern</span><span class="br0">&#41;</span>, <span class="re0">$info</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> isEmpty<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/empty"><span class="kw3">empty</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">true</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span> &nbsp; <br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> notEmpty<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/empty"><span class="kw3">empty</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">false</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> isNumeric<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/is_numeric"><span class="kw3">is_numeric</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">true</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> notNumeric<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/is_numeric"><span class="kw3">is_numeric</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">false</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> isInteger<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/is_int"><span class="kw3">is_int</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">true</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> notInteger<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/is_int"><span class="kw3">is_int</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">false</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> isIntegerish<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/is_int"><span class="kw3">is_int</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span> || <a href="http://www.php.net/ctype_digit"><span class="kw3">ctype_digit</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">true</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> notIntegerish<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/is_int"><span class="kw3">is_int</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span> || <a href="http://www.php.net/ctype_digit"><span class="kw3">ctype_digit</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">false</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> isObject<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/is_object"><span class="kw3">is_object</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">true</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> notObject<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/is_object"><span class="kw3">is_object</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">false</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> isBoolean<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/is_bool"><span class="kw3">is_bool</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">true</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> notBoolean<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/is_bool"><span class="kw3">is_bool</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">false</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> isString<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/is_string"><span class="kw3">is_string</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">true</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> notString<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/is_string"><span class="kw3">is_string</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">false</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> isArray<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/is_array"><span class="kw3">is_array</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">true</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param unknown $val <br />
&nbsp;* @param unknown $info <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> notArray<span class="br0">&#40;</span><span class="re0">$val</span>, <span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/assert"><span class="kw3">Assert</span></a>::<span class="me2">test</span><span class="br0">&#40;</span><a href="http://www.php.net/is_array"><span class="kw3">is_array</span></a><span class="br0">&#40;</span><span class="re0">$val</span><span class="br0">&#41;</span>, <span class="kw2">false</span>, <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<br />
<span class="br0">&#125;</span>
</div>
<p>This is probably still missing a couple kinds of assertions, I'll add whatever ones you guys think are needed to this. I'm also interested in what you guys think about this stuff in genera. I mean are there any opinions on whether you think applications should crash hard if something unexpected happens, or would you promote the idea of trying to recover from failures by providing default values and things as much as possible?</p>
<p>-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/480f4dd6-7fe0-4113-9776-458acbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fassert-the-yummyness-of-your-cake%3A480f4dd6-7fe0-4113-9776-458acbdd56cb &amp;title=Assert+the+yummyness+of+your+cake';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fassert-the-yummyness-of-your-cake%3A480f4dd6-7fe0-4113-9776-458acbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fassert-the-yummyness-of-your-cake%3A480f4dd6-7fe0-4113-9776-458acbdd56cb&amp;title=Assert+the+yummyness+of+your+cake&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fassert-the-yummyness-of-your-cake%3A480f4dd6-7fe0-4113-9776-458acbdd56cb&amp;title=Assert+the+yummyness+of+your+cake';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/assert-the-yummyness-of-your-cake:480f4dd6-7fe0-4113-9776-458acbdd56cb">10 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/assert-the-yummyness-of-your-cake:480f4dd6-7fe0-4113-9776-458acbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/exceptional-cake:480f4dd5-1b10-4bc8-931f-49cecbdd56cb">Exceptional Cake</a></h2>	<div class="posted-on">
		<p>Posted on 21/10/07 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hey folks,</p>
<p>sorry for letting you guys wait so long, but here is my promised post on how to use Exceptions in CakePHP. Before you continue reading, be warned that you'll need PHP 5 as well as CakePHP 1.2 for this code to work properly.</p>
<p>First of all. Why did I decide to experiment with exceptions in CakePHP? Well, Object::cakeError() does an ok job at providing me with a way to render some sort of internal error while I'm debug mode. However, I think that is what its really meant for, and its not the way to go for rendering errors to the user directly. Besides you cannot really use it within a static function call, a class that is not a descendant of 'Object', nor do you have any way of "catching" an error thrown this way. All of these things can be addressed by using PHP5s support for custom Exception classes quite elegantly.</p>
<p>But lets look at the code before I explain even further. Put this in /app/error.php:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<br />
uses<span class="br0">&#40;</span><span class="st0">'error'</span><span class="br0">&#41;</span>;<br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented class<br />
&nbsp;*<br />
&nbsp;* @package default<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
<span class="kw2">class</span> AppError <span class="kw2">extends</span> ErrorHandler<span class="br0">&#123;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* New Exception handler, renders an error view, then quits the application.<br />
&nbsp;*<br />
&nbsp;* @param object $Exception AppException object to handle<br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> handleException<span class="br0">&#40;</span><span class="re0">$Exception</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$Exception</span>-&gt;<span class="me1">render</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/exit"><span class="kw3">exit</span></a>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* Throws an AppExcpetion if there is no db connection present<br />
&nbsp;*<br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<span class="kw2">function</span> missingConnection<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; throw <span class="kw2">new</span> AppException<span class="br0">&#40;</span><span class="st0">'db_connect'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="br0">&#125;</span><br />
set_exception_handler<span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'AppError'</span>, <span class="st0">'handleException'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
<br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented class<br />
&nbsp;*<br />
&nbsp;* @package default<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
<span class="kw2">class</span> AppException <span class="kw2">extends</span> Exception <span class="br0">&#123;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* Details about what caused this Exception<br />
&nbsp;*<br />
&nbsp;* @var array<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<span class="kw2">var</span> <span class="re0">$info</span> = <span class="kw2">null</span>;<br />
<span class="coMULTI">/**<br />
&nbsp;* undocumented function<br />
&nbsp;*<br />
&nbsp;* @param mixed $info A string desribing the type of this exception, or an array with information<br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<span class="kw2">function</span> __construct<span class="br0">&#40;</span><span class="re0">$info</span> = <span class="st0">'unknown'</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/is_array"><span class="kw3">is_array</span></a><span class="br0">&#40;</span><span class="re0">$info</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="re0">$info</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'type'</span> =&gt; <span class="re0">$info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">info</span> = <span class="re0">$info</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* Renders a view with information about what caused this Exception. $info['type'] is used to determine what<br />
&nbsp;* view inside of views/exceptions/ is used. The default is 'unknown.ctp'.<br />
&nbsp;*<br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<span class="kw2">function</span> render<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$info</span> = am<span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">where</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, <span class="re0">$this</span>-&gt;<span class="me1">info</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; &nbsp; <span class="re0">$Controller</span> = <span class="kw2">new</span> Controller<span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="re0">$Controller</span>-&gt;<span class="me1">viewPath</span> = <span class="st0">'exceptions'</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="re0">$Controller</span>-&gt;<span class="me1">layout</span> = <span class="st0">'exception'</span>;<br />
&nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; &nbsp; <span class="re0">$Dispatcher</span> = <span class="kw2">new</span> Dispatcher<span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="re0">$Controller</span>-&gt;<span class="me1">base</span> = <span class="re0">$Dispatcher</span>-&gt;<span class="me1">baseUrl</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="re0">$Controller</span>-&gt;<span class="me1">webroot</span> = <span class="re0">$Dispatcher</span>-&gt;<span class="me1">webroot</span>;<br />
&nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; &nbsp; <span class="re0">$Controller</span>-&gt;<span class="me1">set</span><span class="br0">&#40;</span><a href="http://www.php.net/compact"><span class="kw3">compact</span></a><span class="br0">&#40;</span><span class="st0">'info'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="re0">$View</span> = <span class="kw2">new</span> View<span class="br0">&#40;</span><span class="re0">$Controller</span><span class="br0">&#41;</span>;<br />
<br />
&nbsp; &nbsp; &nbsp; <span class="re0">$view</span> = @<span class="re0">$info</span><span class="br0">&#91;</span><span class="st0">'type'</span><span class="br0">&#93;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/file_exists"><span class="kw3">file_exists</span></a><span class="br0">&#40;</span>VIEWS.<span class="st0">'exceptions'</span>.DS.<span class="re0">$view</span>.<span class="st0">'.ctp'</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="re0">$view</span> = <span class="st0">'unknown'</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/header"><span class="kw3">header</span></a><span class="br0">&#40;</span><span class="st0">&quot;HTTP/1.0 500 Internal Server Error&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="re0">$View</span>-&gt;<span class="me1">render</span><span class="br0">&#40;</span><span class="re0">$view</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* Returns an array describing where this Exception occured<br />
&nbsp;*<br />
&nbsp;* @return array<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<span class="kw2">function</span> where<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="st0">'function'</span> =&gt; <span class="re0">$this</span>-&gt;<span class="me1">getClass</span><span class="br0">&#40;</span><span class="br0">&#41;</span>.<span class="st0">'::'</span>.<span class="re0">$this</span>-&gt;<span class="me1">getFunction</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, <span class="st0">'file'</span> =&gt; <span class="re0">$this</span>-&gt;<span class="me1">getFile</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, <span class="st0">'line'</span> =&gt; <span class="re0">$this</span>-&gt;<span class="me1">getLine</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;, <span class="st0">'url'</span> =&gt; <span class="re0">$this</span>-&gt;<span class="me1">getUrl</span><span class="br0">&#40;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* Returns the url where this Exception occured<br />
&nbsp;*<br />
&nbsp;* @return string<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<span class="kw2">function</span> getUrl<span class="br0">&#40;</span><span class="re0">$full</span> = <span class="kw2">true</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> Router::<span class="me2">url</span><span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'full_base'</span> =&gt; <span class="re0">$full</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* Returns the class where this Exception occured<br />
&nbsp;*<br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<span class="kw2">function</span> getClass<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$trace</span> = <span class="re0">$this</span>-&gt;<span class="me1">getTrace</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="re0">$trace</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'class'</span><span class="br0">&#93;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* Returns the function where this Exception occured<br />
&nbsp;*<br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; &nbsp;<span class="kw2">function</span> getFunction<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$trace</span> = <span class="re0">$this</span>-&gt;<span class="me1">getTrace</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="re0">$trace</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'function'</span><span class="br0">&#93;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
<span class="br0">&#125;</span>
</div>
<p>You'll also need this in your /app/config/bootstrap.php file:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw1">require_once</span><span class="br0">&#40;</span>APP.<span class="st0">'error.php'</span><span class="br0">&#41;</span>;</div>
<p>Now you can do cool stuff like this:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">function</span> view<span class="br0">&#40;</span><span class="re0">$id</span> = <span class="kw2">null</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp;<span class="re0">$this</span>-&gt;<span class="me1">Task</span>-&gt;<span class="me1">set</span><span class="br0">&#40;</span><span class="st0">'id'</span>, <span class="re0">$id</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="kw1">if</span> <span class="br0">&#40;</span>!<span class="re0">$this</span>-&gt;<span class="me1">Task</span>-&gt;<span class="me1">exists</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; throw <span class="kw2">new</span> AppException<span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'type'</span> =&gt; <span class="st0">'404'</span>, <span class="st0">'id'</span> =&gt; <span class="re0">$id</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
&nbsp; &nbsp;<span class="co1">// ...</span><br />
<span class="br0">&#125;</span></div>
<p>Or like this:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> svnVersion<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp;<a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="re0">$version</span> = <span class="kw2">null</span>;<br />
&nbsp; &nbsp;<span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/is_null"><span class="kw3">is_null</span></a><span class="br0">&#40;</span><span class="re0">$version</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="re0">$version</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
&nbsp; &nbsp;<br />
&nbsp; &nbsp;<span class="re0">$version</span> = <a href="http://www.php.net/trim"><span class="kw3">trim</span></a><span class="br0">&#40;</span><a href="http://www.php.net/shell_exec"><span class="kw3">shell_exec</span></a><span class="br0">&#40;</span><span class="st0">&quot;svn info &quot;</span>.ROOT.<span class="st0">&quot; | grep 'Changed Rev' | cut -c 19-&quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/empty"><span class="kw3">empty</span></a><span class="br0">&#40;</span><span class="re0">$version</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; throw <span class="kw2">new</span> AppException<span class="br0">&#40;</span><span class="st0">'no_working_copy'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span> <span class="kw1">elseif</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/is_int"><span class="kw3">is_int</span></a><span class="br0">&#40;</span><span class="re0">$version</span><span class="br0">&#41;</span> || !<span class="br0">&#40;</span><span class="re0">$version</span> &gt; <span class="nu0">0</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; throw <span class="kw2">new</span> AppException<span class="br0">&#40;</span><span class="st0">'svn_version'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
&nbsp; &nbsp;<span class="kw1">return</span> <span class="re0">$version</span>;<br />
<span class="br0">&#125;</span></div>
<p>Or just as simple as:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">function</span> utcTime<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp;<span class="re0">$time</span> = <a href="http://www.php.net/strtotime"><span class="kw3">strtotime</span></a><span class="br0">&#40;</span><a href="http://www.php.net/gmdate"><span class="kw3">gmdate</span></a><span class="br0">&#40;</span><span class="st0">'Y-m-d H:i:s'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/is_numeric"><span class="kw3">is_numeric</span></a><span class="br0">&#40;</span><span class="re0">$time</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; throw <span class="kw2">new</span> AppException<span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
&nbsp; &nbsp;<span class="kw1">return</span> <span class="re0">$time</span>;<br />
<span class="br0">&#125;</span></div>
<p>In either case you'll need a new 'exception.ctp' layout. This layout should be very simple, and ideally work even if no Models could have been loaded or other parts of your system have failed. If you have a dynamic navigation, this means either falling back to a default one, or not displaying anything but a back button.</p>
<p>After you created that you also need a default exception view called 'unknown.ctp'. Mine looks simply like this:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
&lt;h1&gt;&lt;?php <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$this</span>-&gt;<span class="me1">pageTitle</span> = <span class="st0">'Oops, an internal error occured'</span>; <span class="kw2">?&gt;</span>&lt;/h1&gt;<br />
&lt;p&gt;Sorry, but something must have gone horribly wrong in the internal workings of this application.&lt;/p&gt;</div>
<p>For exceptions that are associated with a HTTP response status like '404', I recommend a view like this:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
&lt;h1&gt;<span class="kw2">&lt;?php</span> <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$this</span>-&gt;<span class="me1">pageTitle</span> = <span class="st0">'404 - Page not found'</span>; <span class="kw2">?&gt;</span>&lt;/h1&gt;<br />
&lt;p&gt;We are sorry, but we could not locate the page you requested on our server.&lt;/p&gt;</div>
<p>Alright this is nice ... but you can do even more! Having the unified AppError::handleException function allows you to do fun things like logging your exceptions, or even sending out notification emails to the system administrator. Oh and its also very convenient if you want to catch only certain kinds of Exceptions:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
try<span class="br0">&#123;</span><br />
&nbsp; &nbsp;<span class="re0">$version</span> = Common::<span class="me2">svnVersion</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span> catch <span class="br0">&#40;</span>AppException <span class="re0">$Exception</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp;<span class="kw1">if</span> <span class="br0">&#40;</span><span class="re0">$Exception</span>-&gt;<span class="me1">info</span><span class="br0">&#91;</span><span class="st0">'type'</span><span class="br0">&#93;</span> != <span class="st0">'no_working_copy'</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; AppError::<span class="me2">handleException</span><span class="br0">&#40;</span><span class="re0">$Exception</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp;<span class="br0">&#125;</span><br />
&nbsp; &nbsp;<span class="re0">$version</span> = <span class="st0">'HEAD'</span>;<br />
<span class="br0">&#125;</span></div>
<p>One of the things I'm currently trying to do with Exceptions is to build my <a href="http://www.posttask.com/">current application</a> so that it fails fast. By that I mean that I rather have the user see a big fat error message instead of trying to recover from failing functions. Jeff Atwood has an <a href="http://www.codinghorror.com/blog/archives/000924.html">interesting article on this subject</a> which I mostly agree with. However with web applications I feel like we can justify seeing our users see our application crashing hard much more often then with desktop software. That is because its simply much easier to fix the problem for everybody - no software update needed. If you go this path however, please make sure you have rock-solid error reporting form or an e-mail address independent from the server where the app runs on, and mention those in your exception layout.</p>
<p>Anyway, I'm going to periodically make changes to this AppException class and eventually add support to allow people to customize its behavior (like add logging) without having to change the code itself. For now however this should give you some inspiration on how you could leverage some of that yummy PHP5 goodies that a lot of us cake folks sometimes forget about (just b/c cake is PHP4 compatible it doesn't mean our apps have to be!).</p>
<p>Hope some of you find this useful,<br />
-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/480f4dd5-1b10-4bc8-931f-49cecbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fexceptional-cake%3A480f4dd5-1b10-4bc8-931f-49cecbdd56cb &amp;title=Exceptional+Cake';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fexceptional-cake%3A480f4dd5-1b10-4bc8-931f-49cecbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fexceptional-cake%3A480f4dd5-1b10-4bc8-931f-49cecbdd56cb&amp;title=Exceptional+Cake&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fexceptional-cake%3A480f4dd5-1b10-4bc8-931f-49cecbdd56cb&amp;title=Exceptional+Cake';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/exceptional-cake:480f4dd5-1b10-4bc8-931f-49cecbdd56cb">17 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/exceptional-cake:480f4dd5-1b10-4bc8-931f-49cecbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/uhhhwat-introduction-to-the-jquery-community:480f4dd6-c598-474e-a57a-44e7cbdd56cb">"uhhh.......WAT?" - Introduction to the jQuery community</a></h2>	<div class="posted-on">
		<p>Posted on 28/9/07 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hey folks,</p>
<p>the idea for this post came to me when I read a post called <a href="http://groups.google.com/group/jquery-en/browse_thread/thread/a4cf0718727b93a2">uhhh.......WAT</a>? on the <a href="http://groups.google.com/group/jquery-en">jQuery mailing list</a> today. For me its a perfect illustration of one of the things that makes me like <a href="http://jquery.com/">jQuery</a> the most - the community around it. Don't get me wrong, I also love the CakePHP community - its a great and helpful crowd. But boy, when I see how friendly the people are over at jQuery I sometimes can't believe it. Take a couple of minutes and and think about how you would have re-acted to <a href="http://groups.google.com/group/jquery-en/browse_thread/thread/a4cf0718727b93a2">this post</a>. Its obviously written by somebody who has either not invested more then half an hour to pick up a new technology or has been watching the latest youtube BS while doing so. He is obviously offending the jQuery project / community and provides little to no insight into what his actual problem is. Personally I've reached the point were I trained myself to simply hold on to the urge to start yelling at those people. Sometimes I find myself typing a somewhat sarcastic comment on some blog or mailing list but I can almost always keep myself from hitting submit at the end.</p>
<p>Of course I know a lot of open source communities are known for pretty aggressive behavior in their mailing lists (php / linux kernel come to my mind) and I'm also not saying that I wouldn't miss a refreshing grumpy post from <a href="http://www.littlehart.net/atthekeyboard/">Chris</a> every once in a while. But again, looking over to what those folks working on and with jQuery have achieved with their community is nothing short of amazing.</p>
<p>So if I look at the speed the development the jQuery community <a href="http://ejohn.org/blog/non-stop-jquery/">is showing</a> then I'm tempted to say a lot of this goes back to situations like this. I'm not sure if the guy who started this rant is going to contribute much to the jQuery project, he might. But the fact that the creator of the library (john) and some of the best folks in the community / dev team (karl, glen, etc.) jump into discussions like this with a positive attitude sends out a signal throughout the community. The message I hear is "this is more then just a piece of software, this is something we take pride in and an opportunity for friendship and collaboration for everybody involved". And this is a good message.</p>
<p>So let me round up this little rant by saying that I love jQuery and CakePHP both (see <a href="http://hs.facebook.com/profile.php?id=1114020732">my religious views on Facebook</a> ^^), but that I hope I will become as positive as the people running this neat JavaScript library and that others may follow me.</p>
<p>What do you think? How would your perfect OS look like and interact with each other?</p>
<p>-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/480f4dd6-c598-474e-a57a-44e7cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fuhhhwat-introduction-to-the-jquery-community%3A480f4dd6-c598-474e-a57a-44e7cbdd56cb &amp;title=%22uhhh.......WAT%3F%22+-+Introduction+to+the+jQuery+community';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fuhhhwat-introduction-to-the-jquery-community%3A480f4dd6-c598-474e-a57a-44e7cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fuhhhwat-introduction-to-the-jquery-community%3A480f4dd6-c598-474e-a57a-44e7cbdd56cb&amp;title=%22uhhh.......WAT%3F%22+-+Introduction+to+the+jQuery+community&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fuhhhwat-introduction-to-the-jquery-community%3A480f4dd6-c598-474e-a57a-44e7cbdd56cb&amp;title=%22uhhh.......WAT%3F%22+-+Introduction+to+the+jQuery+community';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/uhhhwat-introduction-to-the-jquery-community:480f4dd6-c598-474e-a57a-44e7cbdd56cb">4 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/uhhhwat-introduction-to-the-jquery-community:480f4dd6-c598-474e-a57a-44e7cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="paging">
	<a href="/posts/index/page:40" class="prev">&laquo; Previous</a> <span><a href="/posts/index/page:37">37</a></span> | <span><a href="/posts/index/page:38">38</a></span> | <span><a href="/posts/index/page:39">39</a></span> | <span><a href="/posts/index/page:40">40</a></span> | <span class="current">41</span> | <span><a href="/posts/index/page:42">42</a></span> | <span><a href="/posts/index/page:43">43</a></span> | <span><a href="/posts/index/page:44">44</a></span> | <span><a href="/posts/index/page:45">45</a></span> <a href="/posts/index/page:42" class="next">Next &raquo;</a></div>	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@Jörn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class="active"><a href="/blog">Blog</a></li><li class=""><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
