<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Blog &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class="active"><a href="/blog">Blog</a></li><li class=""><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="paging">
	<a href="/posts/index/page:9" class="prev">&laquo; Previous</a> <span><a href="/posts/index/page:6">6</a></span> | <span><a href="/posts/index/page:7">7</a></span> | <span><a href="/posts/index/page:8">8</a></span> | <span><a href="/posts/index/page:9">9</a></span> | <span class="current">10</span> | <span><a href="/posts/index/page:11">11</a></span> | <span><a href="/posts/index/page:12">12</a></span> | <span><a href="/posts/index/page:13">13</a></span> | <span><a href="/posts/index/page:14">14</a></span> <a href="/posts/index/page:11" class="next">Next &raquo;</a></div>
	<div class="post">
	<h2><a href="/posts/Going_to_JSConf_eu:4ac4d946-8204-43ae-b912-440ecbdd56cb">Going to JSConf.eu</a></h2>	<div class="posted-on">
		<p>Posted on 1/10/09 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Tim and I just got our tickets for the upcoming <a href="http://jsconf.eu/2009/">JSConf.eu</a> in Berlin. It's almost sold out now, but in case you already have a ticket  let us know so we can hang out.</p>
<p>I'm very thrilled about the speaker lineup (Amy Hoy, Thomas Fuchs, John Resig, Dion Almaer & Ben Galbraith, Douglas Crockford, Ryan Dahl, Kevin Dangoor, Kyle Simpson, Steve Souders). It's especially exciting to see that Ryan Dahl has been selected as a speaker to <a href="http://jsconf.eu/2009/speakers_selected.html">talk about node.js</a>, my new favourite OS project!</p>
<p>I will try my best to cover his as well as some of the other talks for the blog!</p>
<p>-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/4ac4d946-8204-43ae-b912-440ecbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2FGoing_to_JSConf_eu%3A4ac4d946-8204-43ae-b912-440ecbdd56cb &amp;title=Going+to+JSConf.eu';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2FGoing_to_JSConf_eu%3A4ac4d946-8204-43ae-b912-440ecbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2FGoing_to_JSConf_eu%3A4ac4d946-8204-43ae-b912-440ecbdd56cb&amp;title=Going+to+JSConf.eu&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2FGoing_to_JSConf_eu%3A4ac4d946-8204-43ae-b912-440ecbdd56cb&amp;title=Going+to+JSConf.eu';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/Going_to_JSConf_eu:4ac4d946-8204-43ae-b912-440ecbdd56cb">2 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/Going_to_JSConf_eu:4ac4d946-8204-43ae-b912-440ecbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/streaming-file-uploads-with-node-js:4ac094b2-b6c8-4a7f-bd07-28accbdd56cb">Streaming file uploads with node.js</a></h2>	<div class="posted-on">
		<p>Posted on 28/9/09 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p><strong>Update:</strong> I just updated the code so it works with node v0.1.18.</p>
<p>Not excited by <a href="http://debuggable.com/posts/node_js:4ab4d9d7-b788-41d4-85c0-1b51cbdd56cb">hello world</a> in node.js? No problem. </p>
<p>Let's say you are a <a href="http://transload.it/">startup focusing on upload technology</a> and you want the maximum level of control for your file uploads. In our case that means having the ability to directly interact with the multipart data stream as it comes in (so we can abort the upload if something isn't right, - beats the hell out of letting the user wait an hour to tell him after the upload has finished).</p>
<p>Here is a complete example on how to accomplish this in node.js (you'll need the bleeding edge git version):</p>
<div class="clear"></div>
<div class="code debuggable_sh_js" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">var</span> http = require<span class="br0">&#40;</span><span class="st0">'http'</span><span class="br0">&#41;</span>;<br />
<span class="kw2">var</span> multipart = require<span class="br0">&#40;</span><span class="st0">'multipart'</span><span class="br0">&#41;</span>;<br />
<span class="kw2">var</span> sys = require<span class="br0">&#40;</span><span class="st0">'sys'</span><span class="br0">&#41;</span>;<br />
<br />
<span class="kw2">var</span> server = http.<span class="me1">createServer</span><span class="br0">&#40;</span><span class="kw2">function</span><span class="br0">&#40;</span>req, res<span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="kw1">switch</span> <span class="br0">&#40;</span>req.<span class="me1">uri</span>.<span class="me1">path</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">case</span> <span class="st0">'/'</span>:<br />
&nbsp; &nbsp; &nbsp; display_form<span class="br0">&#40;</span>req, res<span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">break</span>;<br />
&nbsp; &nbsp; <span class="kw1">case</span> <span class="st0">'/upload'</span>:<br />
&nbsp; &nbsp; &nbsp; upload_file<span class="br0">&#40;</span>req, res<span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">break</span>;<br />
&nbsp; &nbsp; <span class="kw2">default</span>:<br />
&nbsp; &nbsp; &nbsp; show_404<span class="br0">&#40;</span>req, res<span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">break</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span><span class="br0">&#41;</span>;<br />
server.<span class="me1">listen</span><span class="br0">&#40;</span><span class="nu0">8000</span><span class="br0">&#41;</span>;<br />
<br />
<span class="kw2">function</span> display_form<span class="br0">&#40;</span>req, res<span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; res.<span class="me1">sendHeader</span><span class="br0">&#40;</span><span class="nu0">200</span>, <span class="br0">&#123;</span><span class="st0">'Content-Type'</span>: <span class="st0">'text/html'</span><span class="br0">&#125;</span><span class="br0">&#41;</span>;<br />
&nbsp; res.<span class="me1">sendBody</span><span class="br0">&#40;</span><br />
&nbsp; &nbsp; <span class="st0">'&lt;form action=&quot;/upload&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;'</span>+<br />
&nbsp; &nbsp; <span class="st0">'&lt;input type=&quot;file&quot; name=&quot;upload-file&quot;&gt;'</span>+<br />
&nbsp; &nbsp; <span class="st0">'&lt;input type=&quot;submit&quot; value=&quot;Upload&quot;&gt;'</span>+<br />
&nbsp; &nbsp; <span class="st0">'&lt;/form&gt;'</span><br />
&nbsp; <span class="br0">&#41;</span>;<br />
&nbsp; res.<span class="me1">finish</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span><br />
<br />
<span class="kw2">function</span> upload_file<span class="br0">&#40;</span>req, res<span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; req.<span class="me1">setBodyEncoding</span><span class="br0">&#40;</span><span class="st0">'binary'</span><span class="br0">&#41;</span>;<br />
<br />
&nbsp; <span class="kw2">var</span> stream = <span class="kw2">new</span> multipart.<span class="me1">Stream</span><span class="br0">&#40;</span>req<span class="br0">&#41;</span>;<br />
&nbsp; stream.<span class="me1">addListener</span><span class="br0">&#40;</span><span class="st0">'part'</span>, <span class="kw2">function</span><span class="br0">&#40;</span>part<span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; part.<span class="me1">addListener</span><span class="br0">&#40;</span><span class="st0">'body'</span>, <span class="kw2">function</span><span class="br0">&#40;</span>chunk<span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw2">var</span> progress = <span class="br0">&#40;</span>stream.<span class="me1">bytesReceived</span> / stream.<span class="me1">bytesTotal</span> * <span class="nu0">100</span><span class="br0">&#41;</span>.<span class="me1">toFixed</span><span class="br0">&#40;</span><span class="nu0">2</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw2">var</span> mb = <span class="br0">&#40;</span>stream.<span class="me1">bytesTotal</span> <span class="re0">/ <span class="nu0">1024</span> /</span> <span class="nu0">1024</span><span class="br0">&#41;</span>.<span class="me1">toFixed</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span>;<br />
<br />
&nbsp; &nbsp; &nbsp; sys.<span class="kw3">print</span><span class="br0">&#40;</span><span class="st0">&quot;Uploading &quot;</span>+mb+<span class="st0">&quot;mb (&quot;</span>+progress+<span class="st0">&quot;%)<span class="es0">\0</span>15&quot;</span><span class="br0">&#41;</span>;<br />
<br />
&nbsp; &nbsp; &nbsp; <span class="co1">// chunk could be appended to a file if the uploaded file needs to be saved</span><br />
&nbsp; &nbsp; <span class="br0">&#125;</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span><span class="br0">&#41;</span>;<br />
&nbsp; stream.<span class="me1">addListener</span><span class="br0">&#40;</span><span class="st0">'complete'</span>, <span class="kw2">function</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; res.<span class="me1">sendHeader</span><span class="br0">&#40;</span><span class="nu0">200</span>, <span class="br0">&#123;</span><span class="st0">'Content-Type'</span>: <span class="st0">'text/plain'</span><span class="br0">&#125;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; res.<span class="me1">sendBody</span><span class="br0">&#40;</span><span class="st0">'Thanks for playing!'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; res.<span class="me1">finish</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; sys.<span class="me1">puts</span><span class="br0">&#40;</span><span class="st0">&quot;<span class="es0">\n</span>=&gt; Done&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span><br />
<br />
<span class="kw2">function</span> show_404<span class="br0">&#40;</span>req, res<span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; res.<span class="me1">sendHeader</span><span class="br0">&#40;</span><span class="nu0">404</span>, <span class="br0">&#123;</span><span class="st0">'Content-Type'</span>: <span class="st0">'text/plain'</span><span class="br0">&#125;</span><span class="br0">&#41;</span>;<br />
&nbsp; res.<span class="me1">sendBody</span><span class="br0">&#40;</span><span class="st0">'You r doing it rong!'</span><span class="br0">&#41;</span>;<br />
&nbsp; res.<span class="me1">finish</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span></div>
<p>The code is rather straight forward. First of all we include the multipart.js parser which is a library that has just been added to node.js.</p>
<p>Next we create a server listening on port 8000 that dispatches incoming requests to one of our 3 functions: display_form, upload_file or show_404. Again, very straight forward.</p>
<p><strong>display_form</strong> serves a very short (and invalid) piece of HTML that will render a file upload form with a submit button. You can get to it by running the example (via: node uploader.js) and pointing your browser to http://localhost:8000/.</p>
<p><strong>upload_file</strong> kicks in as soon as you select a file and hit the submit button. It tells the request object to expect binary data and then passes the work on to the multipart Stream parser. The result is a new stream object that emits two kinds of events: 'part' and 'complete'. 'part' is called whenever a new element is found within the multipart stream, you can find all the information about it by looking at  the first argument's headers property. In order to get the actual contents of this part we attach a 'body' listener to it, which gets called for each chunk of bytes getting uploaded. In our example we just use this event to render a progress indicator in our command line, but we could also append this chunk to a file which would eventually become the entire file as uploaded from the browser. Finally the 'complete' event sends a response to the browser indicating the file has been uploaded.</p>
<p><strong>show_404</strong> is handling all unknown urls by returning an error response.</p>
<p>As you can see, the entire process is pretty simple, yet gives you a ton of control. You can also easily use this technique to show an AJAX progress bar for the upload to your users. The multipart parser also works with non-HTTP requests, just pass it the {boundary: '...'} option into the constructor and use steam.write() to pass it some data to parse. Check out the <a href="http://github.com/ry/node/blob/master/lib/multipart.js">source of the parser</a> if you're curious how it works internally.</p>
<p>-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/4ac094b2-b6c8-4a7f-bd07-28accbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fstreaming-file-uploads-with-node-js%3A4ac094b2-b6c8-4a7f-bd07-28accbdd56cb &amp;title=Streaming+file+uploads+with+node.js';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fstreaming-file-uploads-with-node-js%3A4ac094b2-b6c8-4a7f-bd07-28accbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fstreaming-file-uploads-with-node-js%3A4ac094b2-b6c8-4a7f-bd07-28accbdd56cb&amp;title=Streaming+file+uploads+with+node.js&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fstreaming-file-uploads-with-node-js%3A4ac094b2-b6c8-4a7f-bd07-28accbdd56cb&amp;title=Streaming+file+uploads+with+node.js';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/streaming-file-uploads-with-node-js:4ac094b2-b6c8-4a7f-bd07-28accbdd56cb">27 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/streaming-file-uploads-with-node-js:4ac094b2-b6c8-4a7f-bd07-28accbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/node_js:4ab4d9d7-b788-41d4-85c0-1b51cbdd56cb">node.js</a></h2>	<div class="posted-on">
		<p>Posted on 24/9/09 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>What happens if you take an <a href="http://code.google.com/p/v8/">insanely fast JavaScript engine</a> and build an asynchronous I/O library around it? You get <a href="http://tinyclouds.org/node/">node.js</a>, an up and coming project that brings you bloat-free server-side JavaScript.</p>
<p>This enables you to write any kind of "backend" service with just a few lines of JavaScript. But don't take my word for it, here is how a "Hello World" example looks in node.js:</p>
<div class="clear"></div>
<div class="code debuggable_sh_js" style="white-space: wrap;white-space: nowrap;">
node.<span class="me1">http</span>.<span class="me1">createServer</span><span class="br0">&#40;</span><span class="kw2">function</span> <span class="br0">&#40;</span>req, res<span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; setTimeout<span class="br0">&#40;</span><span class="kw2">function</span> <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; res.<span class="me1">sendHeader</span><span class="br0">&#40;</span><span class="nu0">200</span>, <span class="br0">&#123;</span><span class="st0">&quot;Content-Type&quot;</span>: <span class="st0">&quot;text/plain&quot;</span><span class="br0">&#125;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; res.<span class="me1">sendBody</span><span class="br0">&#40;</span><span class="st0">&quot;Hello World&quot;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; res.<span class="me1">finish</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span>, <span class="nu0">2000</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span><span class="br0">&#41;</span>.<span class="me1">listen</span><span class="br0">&#40;</span><span class="nu0">8000</span><span class="br0">&#41;</span>;<br />
puts<span class="br0">&#40;</span><span class="st0">&quot;Server running at http://127.0.0.1:8000/&quot;</span><span class="br0">&#41;</span>;</div>
<p>This code creates a new http server and tells it to listen on port 8000. Whenever a request comes in, the closure function passed to createServer is fired. In this example we are waiting 2 seconds before sending a "Hello World" response back to the client.</p>
<p>However, during those 2 seconds the server will continue to accept new connections. That gives you a very scalable hello world server. Talking about performance: Ryan (the awesome guy behind node.js) has done some <a href="http://s3.amazonaws.com/four.livejournal/20090911/benchmark.html">initial benchmarks</a> which show how fast of a beast we are talking about here. To me the most notable aspect is the extremely low response times you can achieve with node.js (pretty much 0-1ms).</p>
<p>Here is another chart from a req/sec benchmark among various server-side JS libs:</p>
<p><img src="http://static.debuggable.com.s3.amazonaws.com/img/node.js/node-bench.png"></p>
<p>Now you may think this is all very nice and stuff, but what do you actually need it for? Well, it depends. There are a few people writing web frameworks for node.js, but at this point it would be rather adventurous to build a full blown web application on top of node. However, node has incredible potential if you want to develop chat applications, check <a href="http://chat.tinyclouds.org/">out this one for example</a>. We are using node.js to run the backend for <a href="http://transload.it/">transload.it</a> which we'll share more details about in the future. One could also easily write his own key-value store in node.js - let's say you'd like to have something like Memcached but with a REST interface.</p>
<p>Trying out node.js requires you to have a Linux/Unix machine but it's pretty much as simple as downloading the code and running:</p>
<pre class="terminal">
./configure
make
make install
</pre>
<p>The <a href="http://tinyclouds.org/node/api.html">documentation</a> is pretty excellent and there are lots of friendly people on the <a href="http://groups.google.com/group/nodejs">mailing list</a> to help if you have any problems.</p>
<p>To me the most exciting thing about node.js is its incredible potential to reunite. You can have long debates about using Python, Ruby, PHP, Java, ASP or Perl for a web project, but nobody will debate that JavaScript is *the* language of the web. Now imagine the smartest people from all those communities creating code in a single language that works on your browser as well as your server ...</p>
<p>I'd love to hear your thoughts on node.js and any questions you might have. Just leave comment!</p>
<p>-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/4ab4d9d7-b788-41d4-85c0-1b51cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fnode_js%3A4ab4d9d7-b788-41d4-85c0-1b51cbdd56cb &amp;title=node.js';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fnode_js%3A4ab4d9d7-b788-41d4-85c0-1b51cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fnode_js%3A4ab4d9d7-b788-41d4-85c0-1b51cbdd56cb&amp;title=node.js&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fnode_js%3A4ab4d9d7-b788-41d4-85c0-1b51cbdd56cb&amp;title=node.js';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/node_js:4ab4d9d7-b788-41d4-85c0-1b51cbdd56cb">4 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/node_js:4ab4d9d7-b788-41d4-85c0-1b51cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/Fixing_a_bad_commit_in_git:4aafbda3-ac2c-49b8-b041-1bc9cbdd56cb">Fixing non-atomic commits in git</a></h2>	<div class="posted-on">
		<p>Posted on 15/9/09 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Let's say somebody else made a commit that mixes a bug fix and a new feature together.  This sucks if you only want to take the bugfix to merge it into your stable branch (using git cherry-pick).</p>
<p>If you were using SVN you'd be screwed now. However, if you are using git you can actually clean this mess in an elegant and transparent fashion:</p>
<pre class="terminal">
git revert --no-edit <BADSHA1>
git revert --no-edit HEAD
git reset HEAD^
git add -p # or other commands to partially stage stuff from the current tree
git commit -m "Commit A"
git add -p
git commit -m "Commit B"
</pre>
<p>Let's look at this step by step:</p>
<pre class="terminal">
git revert --no-edit <BADSHA1>
</pre>
<p>This command creates a new commit that reverts the bad commit.</p>
<pre class="terminal">
git revert --no-edit HEAD
</pre>
<p>The second 'revert' creates a new commit that basically redoes the bad commit. Why? Because now you have a "clone" of the bad commit sitting cleanly on top of your HEAD, waiting for you to be messed with. This is much better than using git reset to go back to it, because you are not deleting history (which is very likely to give you merge conflicts).</p>
<pre class="terminal">
git reset HEAD^
</pre>
<p>By using git revert you can now go back to the moment before the "clone" commit was created, but still have all of its changes in your tree (=local file system). This essentially takes you back in time to the moment before your evil teammate hit the commit button and gives you the ability to yell "Nooooooo! Let me tell you about atomic commits buddy". </p>
<p>Now you can use 'git add' or 'git add -p' to stage all your changes for the first atomic change and commit it. Repeat the process until you've split the bad commit into nice atomic pieces.</p>
<p>All that is left to do now is to explain to your teammate that next time he accidentally makes a bad commit, he should use 'git reset HEAD^' right away. This way the problem can be fixed before git push distributes the bad commit to your team.</p>
<p>Let me know if this makes sense or if you have any question. I also accept "Git Challenges". That is if you have a problem you'd like to know how it could be solved in Git, just let me know in the comments and I'll blog about it : ).</p>
<p>-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/4aafbda3-ac2c-49b8-b041-1bc9cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2FFixing_a_bad_commit_in_git%3A4aafbda3-ac2c-49b8-b041-1bc9cbdd56cb &amp;title=Fixing+non-atomic+commits+in+git';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2FFixing_a_bad_commit_in_git%3A4aafbda3-ac2c-49b8-b041-1bc9cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2FFixing_a_bad_commit_in_git%3A4aafbda3-ac2c-49b8-b041-1bc9cbdd56cb&amp;title=Fixing+non-atomic+commits+in+git&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2FFixing_a_bad_commit_in_git%3A4aafbda3-ac2c-49b8-b041-1bc9cbdd56cb&amp;title=Fixing+non-atomic+commits+in+git';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/Fixing_a_bad_commit_in_git:4aafbda3-ac2c-49b8-b041-1bc9cbdd56cb">9 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/Fixing_a_bad_commit_in_git:4aafbda3-ac2c-49b8-b041-1bc9cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/The_open_source_business_model:4aab63c1-bf9c-42e8-be7e-5607cbdd56cb">The open source business model</a></h2>	<div class="posted-on">
		<p>Posted on 12/9/09 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Seth Godin <a href="http://sethgodin.typepad.com/seths_blog/2009/09/flipping-abundance-and-scarity.html">explains it perfectly</a> this morning:</p>
<p><em>You need to make something else abundant in order to gain attention. Then, and only then, will you be able to sell something that's naturally scarce.</em></p>
<p>Tim and I stumbled across this model by accident when we started our blogs a few years ago. Since then our business has been a 99% byproduct of the "free" stuff we are doing.</p>
<p>-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/4aab63c1-bf9c-42e8-be7e-5607cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2FThe_open_source_business_model%3A4aab63c1-bf9c-42e8-be7e-5607cbdd56cb &amp;title=The+open+source+business+model';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2FThe_open_source_business_model%3A4aab63c1-bf9c-42e8-be7e-5607cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2FThe_open_source_business_model%3A4aab63c1-bf9c-42e8-be7e-5607cbdd56cb&amp;title=The+open+source+business+model&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2FThe_open_source_business_model%3A4aab63c1-bf9c-42e8-be7e-5607cbdd56cb&amp;title=The+open+source+business+model';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/The_open_source_business_model:4aab63c1-bf9c-42e8-be7e-5607cbdd56cb">1 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/The_open_source_business_model:4aab63c1-bf9c-42e8-be7e-5607cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="paging">
	<a href="/posts/index/page:9" class="prev">&laquo; Previous</a> <span><a href="/posts/index/page:6">6</a></span> | <span><a href="/posts/index/page:7">7</a></span> | <span><a href="/posts/index/page:8">8</a></span> | <span><a href="/posts/index/page:9">9</a></span> | <span class="current">10</span> | <span><a href="/posts/index/page:11">11</a></span> | <span><a href="/posts/index/page:12">12</a></span> | <span><a href="/posts/index/page:13">13</a></span> | <span><a href="/posts/index/page:14">14</a></span> <a href="/posts/index/page:11" class="next">Next &raquo;</a></div>	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@Jörn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class="active"><a href="/blog">Blog</a></li><li class=""><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
