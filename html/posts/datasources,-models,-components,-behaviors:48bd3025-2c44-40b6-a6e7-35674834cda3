<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Datasources, Models, Components, Behaviors &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="post">
	<h2><a href="/posts/datasources,-models,-components,-behaviors:48bd3025-2c44-40b6-a6e7-35674834cda3">Datasources, Models, Components, Behaviors</a></h2>	<div class="posted-on">
		<p>Posted on 2/9/08 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hey folks,</p>
<p>this is post #14 of my <a href="http://debuggable.com/posts/time-to-grow-again-or-loose-money:48ab3665-2054-4e55-b13f-0c104834cda3">30 day challenge</a>. </p>
<p>In my previous post people were wondering why I had chosen a datasource for my <a href="http://debuggable.com/posts/akismet-datasource:48bbe6f0-b7c0-47e5-8337-15624834cda3">implementation of the Akismet API</a>. Some people felt Models, Components or even Behaviors could be more appropriate.</p>
<p>Indeed, about 2 years ago I did a previous <a href="http://debuggable.com/posts/remember-the-days-before-spam-a-cakephp-model-for-akismet:480f4dd5-d358-4f51-ac83-45f1cbdd56cb">Akismet implementation using a Model</a>. But that always felt wrong. In CakePHP Models are meant to abstract a relational database table. To map its associations, to define its validation rules and provide easy CRUD functionality.</p>
<blockquote><p>Unless the web service you're dealing with is a REST interface for CRUD operations, using a Model for its abstraction is way overkill.</p></blockquote>
<p>So what about Behaviors? Behaviors are meant to abstract re-usable CRUD, validation and association tasks. A behavior might interact with a web service, but should not be the primary means of abstracting it.</p>
<p>Components are tempting. They indeed seem like a good choice for certain tasks. But their strength lays elsewhere. Components are good for abstracting functionality shared among multiple controllers. Often times they aren't even necessary because the logic one is trying to abstract has its place inside the model. Also:</p>
<blockquote><p>Components are not globally accessible nor do they have a built-in mechanism for configuration like datasources do.</p></blockquote>
<p>So I am fairly convinced that <strong>most web services</strong> are best abstracted using datasources. They make it easy to store the API key in your database.php file (which is not semantically perfect but lets be a little forgiving here). They can be accessed from a Component, Controller, Model, Behavior or any other part of your application and that makes a ton of sense. Because some services may allow you to upload data, resize pictures, transform text, detect spam, aggregate information, validate identities - all things that are best done in different places of your application.</p>
<p>There are some imperfections to the whole thing and some web servies might require the combination of a datasource (for the protocol) and a model (for the CRUD abstraction), but if you are in doubt - start with a datasource.</p>
<p>If you are interested in learning, check out some of the <a href="http://github.com/felixge/debuggable-scraps/tree/master/cakephp/datasources">datasources we have published</a> so far:</p>
<ul>
<li><a href="http://debuggable.com/posts/akismet-datasource:48bbe6f0-b7c0-47e5-8337-15624834cda3">Akismet SPAM detection</a></li>
<li><a href="http://debuggable.com/posts/amazon-associates-api-data-source-for-cakephp:4891ecd6-0330-47c7-b338-0dd34834cda3">Amazon Associate Web Services</a></li>
<li><a href="http://debuggable.com/posts/new-google-analytics-api:480f4dd6-c59c-445f-8ce0-4202cbdd56cb">Google Analytics</a></li>
</ul>
<p>-- Felix Geisendörfer<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/48bd3025-2c44-40b6-a6e7-35674834cda3"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fdatasources%2C-models%2C-components%2C-behaviors%3A48bd3025-2c44-40b6-a6e7-35674834cda3 &amp;title=Datasources%2C+Models%2C+Components%2C+Behaviors';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fdatasources%2C-models%2C-components%2C-behaviors%3A48bd3025-2c44-40b6-a6e7-35674834cda3';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fdatasources%2C-models%2C-components%2C-behaviors%3A48bd3025-2c44-40b6-a6e7-35674834cda3&amp;title=Datasources%2C+Models%2C+Components%2C+Behaviors&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fdatasources%2C-models%2C-components%2C-behaviors%3A48bd3025-2c44-40b6-a6e7-35674834cda3&amp;title=Datasources%2C+Models%2C+Components%2C+Behaviors';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>
	<div class="related-posts">
		<h3>(Theoretically) Related Posts</h3>
				<ul class="first">
							<li><a href="/posts/toogleing-associations-in-cakephp-models:480f4dd5-58b0-4ecf-bf4d-4637cbdd56cb">Toggling Associations in CakePHP Models</a></li>
							<li><a href="/posts/using-rest-api%e2%80%99s-as-models-in-cakephp-a-google-calendar-example:480f4dd5-02c0-464e-941c-4774cbdd56cb">Using REST Api’s as Models in CakePHP / A Google Calendar example</a></li>
							<li><a href="/posts/testing-models-in-cakephp-now-lets-get-rid-of-the-unnecessary-modeltest-classes:4890ed55-be28-4d4a-ba4c-7fd64834cda3">Testing Models in CakePHP - Now let&#039;s get rid of the unnecessary ModelTest classes !</a></li>
							<li><a href="/posts/dessert-10-default-models-components-helpers:480f4dd5-b24c-4df9-ad49-4530cbdd56cb">Dessert #10 - Default Models, Components &amp; Helpers</a></li>
					</ul>
		<ul>
					</ul>
	</div>
	<div class="clear">&nsbp;</div>

			<p>You can <a href="#comment_form">skip to the end</a> and add a comment.</p>
	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/datasources,-models,-components,-behaviors:48bd3025-2c44-40b6-a6e7-35674834cda3">20 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/datasources,-models,-components,-behaviors:48bd3025-2c44-40b6-a6e7-35674834cda3#CommentAddForm">Add Comment</a>	</div>
	<div class="post_comments">
	<div class="clear"></div>
									<div id="comment-48bd42c8-34d0-4099-97f0-25be4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=aed4764c437801c47c596131f070e44e&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://marcgrabanski.com" rel="nofollow">Marc Grabanski</a>						</strong>
						<strong>said 
						on Sep 02, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I have a Felix datasource. </p>
<p>$result = $this->Felix->findByQuestion('Why use datasources?');<br />
$result['Felix']['answer']; // prints "<a rel="nofollow" href="http://debuggable.com/posts/datasources,-models,-components,-behaviors:48bd3025-2c44-40b6-a6e7-35674834cda3"">http://debuggable.com/posts/datasources,-models,-components,-behaviors:48bd3025-2c44-40b6-a6e7-35674834cda3"</a></br></p>
<p>if ($result['Felix']['answer'] == false) {<br />
   $this->initConversation('GTalk');</br><br />
}</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48bd5376-d1ec-4e30-87ee-1e2c4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=f4112f3023c643bf2f7b32c9c5dcfcba&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://cakebaker.42dh.com" rel="nofollow">Daniel Hofstetter</a>						</strong>
						<strong>said 
						on Sep 02, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I think accessing data sources from everywhere is not that cool. Data sources are the "back end" of models which deals with the details of the respective data sources, hence data sources should only be accessed via model.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48bd6d98-3e3c-4c75-aaaf-3eab4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=91a8d0b677ee52f887fdb4cac2fd5e8e&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.raymondjavaxx.com" rel="nofollow">Ramon</a>						</strong>
						<strong>said 
						on Sep 02, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Why not just writing a regular class and dropping it into the vendors folder?</p>
<p>class Comment extends AppModel {<br />
	//...</br><br />
	public function notSpam() {</br><br />
		App::import('Vendor', 'Service/Akismet');</br><br />
		$Akismet = new Service_Akismet(Configure::read('akismet'));</br><br />
		$Akismet->isSpam($this->getData(), Post::url($this->getPostId()));</br><br />
	}</br><br />
}</br></p>
<p>Like Daniel said I think Datasources are the "backend of models". If you see the DataSource class, it has methods like DataSource::describe(), DataSource::getColumnType(), DataSource::[CRUD]() etc. Extending the DataSource for something like the Akismet service is unnecessary inheritance.</p>
<p>-Ramon</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48be1ced-f3fc-40a8-b900-776b4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=f0b8fa14cbee5edfdeeac6b8f9ad062d&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://sanisoft.com/blog/" rel="nofollow">Tarique Sani</a>						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Akismet is in fact validating your Comment model hence an ideal candidate for a Behavior.</p>
<p>I find your view of looking at every web service as a datasource conceptually disturbing, the function of the webservice should determine what you should abstract it as.</p>
<p>Also I do agree with Daniel datasources should ideally be wrapped in models, by being forgiving/sloppy we can agree to wrap it in components but instantiating it in controller... No! :)</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48be35aa-a9c0-4e0f-82c3-666c4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=212ca5e58231b5dd1719d22eb4cf69c9&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.gigapromoters.com/blog" rel="nofollow">Abhimanyu Grover</a>						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Agreed with Daniel, is accessing datasources from all over is a good choice? Why not use a vendor instead?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48be707e-f9b0-48b1-ba33-3fae4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=aea6465ffa96d3e7ac868e562a6e71d9&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							William Lepinski&nbsp;						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Ramon: Vendors can use internal classes like Set, HttpSocket or you have to implement it in your own way?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48be77a7-af60-49cf-a746-7e554834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=6e333c5051ee580b75d9a20db899098d&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://rafaelbandeira3.wordpress.com" rel="nofollow">rafaelbandeira3</a>						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Isn't the name already saying for what datasources are meant to?<br />
I think datasources are supposed to be "sources of data". As you are not retrieving data, it's probably not the most "semantic approach".</br></p>
<p>Anyway, I think you just shown that you have a wide knowledge about application parts and their role, but I don't just disagree with the Component role as I think that...</p>
<p>A component isn't just supposed to encapsulate controller's reusable logic, it's the application interface with actions and logic outside the application's domain. i.e: If your application should notify users about the release of a new feature, it's your application's domain to fetch all users to notify, deal with the data to send and then "press" send, but the dealing with SMTP sockets and all the road about protocols and stuff are not within it's domain - EmailComponent, someone? With a blog it's the same thing, it should only store comments that are not considered spam by the Askimet Service, dealing with the service is not something all the application should be aware of.</p>
<p>Second, your approach is totally "wet" - non-DRY. with a component you would've achieved a much more DRY reusability:</p>
<p>if($this->Askimet->check($this->data, 'Comment') && $this->Comment->save($this->data))</p>
<p>Then you could even define other mapping types.</p>
<p>And last but not least you are letting your Comment's model dependent of something that it shouldn't, I mean, it will only work in a specific context wich is something very straight forward in a "just build it damnit" policy, but not so smart.</p>
<p>Acts as "Unspammable"? bleh...</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48be784e-6868-468a-b8c5-1cba4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=6e333c5051ee580b75d9a20db899098d&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://rafaelbandeira3.wordpress.com" rel="nofollow">rafaelbandeira3</a>						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Willian Lepinski: Vendor classes still are classes... and as such, they can instantiate all classes that are loaded in the application, use their static methods and stuff. But Vendors are supposed to be Vendors so they shouldn't be dependent of the application that is using it.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48be8da9-2588-4922-aa8c-4f3d4834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/felix" rel="nofollow">Felix Geisendörfer</a>						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>rafaelbandeira3, Tarique Sani: Nate Abele and I actually had quite a few discussions about this. We both came to the conclusion that DataSource is most likely going tot change for 2.0 to satisfy our all needs for semantics.  While nate and I still argue a bit about the involvement of Models when it comes to accessing web services, both of us do not think that vendors, components or behaviors are the appropriate means of dealing with this stuff.</p>
<p>rafaelbandeira3: Your "dry" approach is not comparable in functionality to my implementation - I don't get it. And what do you mean with "And last but not least you are letting your Comment's model dependent of something that it shouldn't,"? My Comment model and this Akismet source are pretty close friends and I told them its totally ok to depend on each other - what's wrong?</p>
<p>Abhimanyu Grover: Why would you not want to access web services from anywhere you need them?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48be9138-dd6c-44cb-a239-0f534834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=aea6465ffa96d3e7ac868e562a6e71d9&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							William Lepinski&nbsp;						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>In the example cited by Felix, He still needs your database for the application works ... then I agree pass the responsibility for a component ... But Imagine the following situation, you have an application that will only work as an interface for communication with a webservice and will not have any database coupled. </p>
<p>You will not have the need to use a model to abstract the database and all CRUD operations will be performed by a webservice. Make sense maintain the responsibility of DataSource as provider of such information?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48bea11e-d1dc-49a3-995d-45ef4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=6e333c5051ee580b75d9a20db899098d&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://rafaelbandeira3.wordpress.com" rel="nofollow">rafaelbandeira3</a>						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Felix Geisendörfer: Actually it's not that it's *wrong*... it's just not too smart having class dependencies in stuffs not related to app's domain, and I don't mean just external sources - and datasources, I mean a comment per se is not tided to anything else than it's model relations...</p>
<p>"... are pretty close friends and I told them its totally ok to depend on each other  ..."<br />
lol... that was really fun!</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48bea297-4688-4d79-b6e2-0e974834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=f0b8fa14cbee5edfdeeac6b8f9ad062d&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://sanisoft.com/blog/" rel="nofollow">Tarique Sani</a>						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>@Felix - since you claim to see the future any argument is moot but right now I am worried about how 1.2 will shape up.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48beea44-ec08-4126-ab28-14c54834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=ac93f8dadcdd1c057947257e47c0150f&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							nukem&nbsp;						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Datasource === source of data<br />
Akismet === data validator</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48beecaf-cfbc-456d-a703-5e874834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/felix" rel="nofollow">Felix Geisendörfer</a>						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>nukem: Consistency over context.</p>
<p>rafaelbandeira3: Sure, use a vendor class, it certainly is less overhead. Just don't complain when CakePHP starts to offer new features that you won't be able to leverage ; ).</p>
<p>Tarique Sani: I don't see the future. I have a small amount of influence on it and I'm letting you know how I intend to use it. About 1.2 - we're doing our best, any help is welcome so.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48bf099d-e294-4564-b026-6db34834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=6e333c5051ee580b75d9a20db899098d&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://rafaelbandeira3.wordpress.com" rel="nofollow">rafaelbandeira3</a>						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Felix Geisendörfer: are you nuts my fellow? Nah, I'm kidding...<br />
Sorry but you misunderstood me I haven't said to use a Vendor - Not even mentioned it...</br><br />
I'm "totally" against to depend on "fourth" party code. I'm using cake so cakish shall my code speaks!</br></p>
<p>Heh... you're really funny<br />
"... I have a small amount of influence on it and I'm letting you know how I intend to use it ..."</br></p>
<p>I'm not mocking, I really think you have a comic style of putting things together and I'm congratulating you for this!</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48bf1f28-07d0-4e8d-afbf-3f384834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=4471a0311f54800bfb38ea0cddffe090&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.raymondjavaxx.com" rel="nofollow">Ramon</a>						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>If you put a class in /app/vendors/service/akismet you are not creating 3rd or 4th party dependency since the class will be shipped together with the application.</p>
<p>If the Akismet class is not a DataSource, Component, Helper or Behavior, then what is it? It's a CakePHP-friendly-reusable-library-class just like HttpSocket, Flay, String, Set, Cache and others. Since we can't/shouldn't put the file in /cake/libs/service why not just drop it into /app/vendors?</p>
<p>@Felix: is keeping the configuration of something that is not DB related inside /app/config/database.php consistent?</p>
<p>-Ramon</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48bf34be-a5c8-49c8-b58c-4cb24834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/felix" rel="nofollow">Felix Geisendörfer</a>						</strong>
						<strong>said 
						on Sep 04, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>rafaelbandeira3: Sorry, I just scanned the comments and misinterpreted your reply to William Lepinsk as agreeing to the vendor idea. Oh and btw. believe me, I laugh about myself quite a bit so feel free to join me - but I was actually trying to be serious ; ).</p>
<p>Ramon: That's a simple one. You put it in the existing datasources folder because you don't need a framework if you are going to put stuff wherever you want to put it. And no, having a web service configured inside database.php is *not* consistent. But then again, so is taking my comment out of context ; ). For the time being, the solution I suggest is the best and most consistent approach you can achieve without rolling your own solution. You might be able to achieve an inherently and semantically better solution if you do things your way - I won't even argue that. You just won't be able to play with all the nice code I am publishing here for free - or anybody else's who sticks to what the framework wants them to do.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48bfd36d-c804-4de2-94f0-258d4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=aea6465ffa96d3e7ac868e562a6e71d9&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							William Lepinski&nbsp;						</strong>
						<strong>said 
						on Sep 04, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Felix Geisendörfer: in any moment i agree on the idea of vendor.. i asked a question about an application that's not using a database... I am sorry if the comment was out the context of this post.. i have doubts, therefore better ask than be non sense...</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48c65499-b0e8-4fcd-a740-6f954834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=34d57f8b69c811da62b91ee792e8fcaa&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://dsi.vozibrale.com/" rel="nofollow">dr. Hannibal Lecter</a>						</strong>
						<strong>said 
						on Sep 09, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Well, as Herr Snook pointed out in the related post, this should definitely be a behavior. I mean, it is a _validation_ of a sort, right? If you want to keep thick models then you probably want to keep that validation in a model.</p>
<p>Data source however, seems conceptually wrong. You can't query Akismet, you can't insert or update.. So, why would I want to "access Akismet from anywhere"?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4980302c-b648-4cc7-bb37-7ecb4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=a2098570406dd46cd6c65e4200e69a6d&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.tutorialcakephp.wordpress.com" rel="nofollow">Jordi</a>						</strong>
						<strong>said 
						on Jan 28, 2009:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Good morning everybody from Barcelona, </p>
<p>I'm pretty new to CakePHP and I'm using the YouTube and OAuth REST APIs  because I want to authenticate a user. Datasources, Models, Components, Behaviors... where could I write the code to do that?! </p>
<p>It's the first time I work with web services. According to what you say, "So I am fairly convinced that most web services are best abstracted using datasources", I should code this logic in a Datasource. However, I think I must write the calls to the REST APIs in a controller's actions, with the help of the PHP OAuth Consumer library, for example. Could anyone give me a clue to solve this? Thanks a lot in advance for you reply.</p>
				</div>
				<div class="clear"></div>
							</div>
	  	
				<div class="divider"></div>
		<a name="comment_form"></a>
		<p>This post is too old. We do not allow comments here anymore in order to fight spam. If you have real feedback or questions for the post, please <a href="/contact">contact us</a>.</p>
	</div></div>
	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@Jörn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
