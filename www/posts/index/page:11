<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Blog &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class="active"><a href="/blog">Blog</a></li><li class=""><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="paging">
	<a href="/posts/index/page:10" class="prev">&laquo; Previous</a> <span><a href="/posts/index/page:7">7</a></span> | <span><a href="/posts/index/page:8">8</a></span> | <span><a href="/posts/index/page:9">9</a></span> | <span><a href="/posts/index/page:10">10</a></span> | <span class="current">11</span> | <span><a href="/posts/index/page:12">12</a></span> | <span><a href="/posts/index/page:13">13</a></span> | <span><a href="/posts/index/page:14">14</a></span> | <span><a href="/posts/index/page:15">15</a></span> <a href="/posts/index/page:12" class="next">Next &raquo;</a></div>
	<div class="post">
	<h2><a href="/posts/Google_Chrome_for_Mac:4aaa8f79-859c-4792-aa13-4c6ccbdd56cb">Google Chrome for Mac</a></h2>	<div class="posted-on">
		<p>Posted on 11/9/09 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>When <a href="http://twitter.com/predominant/status/3899762280">@predominant</a> linked to a OSX release for google chrome the other day I couldn't resist.</p>
<p>My initial feeling: Awesome. Feels much snappier than Safari 4. My only two issues: a) No support for Safari-style keyboard shortcuts for the bookmark bar items. b) Even so chrome integrates with Keychain, it doesn't seem to use my Safari logins.</p>
<p>Lucky for me, Google also just released their <a href="http://code.google.com/chrome/extensions/getstarted.html">Extension API</a>. Two hours down the sink, I created my first extension: <a href="http://github.com/felixge/chrome-bookmark-bar-shortcuts/tree/master">Bookmark Bar Shortcuts</a>.</p>
<p>I switched from Firefox to Safari as my main browser a long time ago because I just could not deal with its slowness on OSX. I still have a few issues with Chrome, but I think they are due to the experimental Mac release. Once Chrome goes beta I'm pretty sure Safari won't be running on my computer anymore. Nor will Firefox once somebody ports Firebug to Google Chrome.</p>
<p>-- Felix Geisendörfer aka the_undefined</p>
<p><strong>Update:</strong> <a href="http://twitter.com/reconbot/status/3915571309">@reconbot</a> says Ctrl + <1-9> already works on Windows. Can somebody confirm?<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/4aaa8f79-859c-4792-aa13-4c6ccbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2FGoogle_Chrome_for_Mac%3A4aaa8f79-859c-4792-aa13-4c6ccbdd56cb &amp;title=Google+Chrome+for+Mac';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2FGoogle_Chrome_for_Mac%3A4aaa8f79-859c-4792-aa13-4c6ccbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2FGoogle_Chrome_for_Mac%3A4aaa8f79-859c-4792-aa13-4c6ccbdd56cb&amp;title=Google+Chrome+for+Mac&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2FGoogle_Chrome_for_Mac%3A4aaa8f79-859c-4792-aa13-4c6ccbdd56cb&amp;title=Google+Chrome+for+Mac';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/Google_Chrome_for_Mac:4aaa8f79-859c-4792-aa13-4c6ccbdd56cb">10 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/Google_Chrome_for_Mac:4aaa8f79-859c-4792-aa13-4c6ccbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/How_to_Fetch_the_ENUM_Options_of_a_Field_The_CakePHP_Enumerable_Behavior:4a977c9b-1bdc-44b4-b027-1a54cbdd56cb">How to Fetch the ENUM Options of a Field - The CakePHP Enumerable Behavior</a></h2>	<div class="posted-on">
		<p>Posted on 8/9/09 by 
		<a href="/tim">Tim Koschützki</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/tim_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hey folks,</p>
<p>for a current client project of ours we had to build an extensive ACL-like permission system. It had to support roles permissions and specific user permissions, possibly overriding the roles permissions. So, to create a user, you had to first define his "role" or "level" as I called it in a dropdown box in a form.</p>
<p>However, the field users.level is an enum type and can have the values 'guest', 'user', 'admin', 'superadmin' and 'root'. The problem is that it could be possible that new levels were added in the future. There was no need though to have a seperate user_levels table and a UserLevel model there, since the system should simply not be as generic to allow that and adding a new level in the future would require a complete other version of the software. So I went the easy way.<br />
Besides, as we use uuids, the users.level field would contain them and after all we want our database to be readable in our favorite db management system.</p>
<p>So what I came up with is a very simple behavior that can extract the options for any ENUM field. It uses simple caching in order for the query to not be run all the time, so make sure to clear your cache as you update your enum field options in the db.</p>
<p>Here is the behavior:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;"><span class="kw2">&lt;?php</span><br />
<span class="coMULTI">/**<br />
&nbsp;* Behavior with useful functionality around models containing an enum type field<br />
&nbsp;*<br />
&nbsp;* Copyright (c) Debuggable, http://debuggable.com<br />
&nbsp;*<br />
&nbsp;* @package default<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
<span class="kw2">class</span> EnumerableBehavior <span class="kw2">extends</span> ModelBehavior <span class="br0">&#123;</span><br />
<span class="coMULTI">/**<br />
&nbsp;* Fetches the enum type options for a specific field<br />
&nbsp;*<br />
&nbsp;* @param string $field <br />
&nbsp;* @return void<br />
&nbsp;* @access public<br />
&nbsp;*/</span><br />
&nbsp; <span class="kw2">function</span> enumOptions<span class="br0">&#40;</span><span class="re0">$model</span>, <span class="re0">$field</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$cacheKey</span> = <span class="re0">$model</span>-&gt;<span class="me1">alias</span> . <span class="st0">'_'</span> . <span class="re0">$field</span> . <span class="st0">'_enum_options'</span>;<br />
&nbsp; &nbsp; <span class="re0">$options</span> = Cache::<span class="me2">read</span><span class="br0">&#40;</span><span class="re0">$cacheKey</span><span class="br0">&#41;</span>;<br />
<br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!<span class="re0">$options</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$sql</span> = <span class="st0">&quot;SHOW COLUMNS FROM `{$model-&gt;useTable}` LIKE '{$field}'&quot;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="re0">$enumData</span> = <span class="re0">$model</span>-&gt;<span class="me1">query</span><span class="br0">&#40;</span><span class="re0">$sql</span><span class="br0">&#41;</span>;<br />
<br />
&nbsp; &nbsp; &nbsp; <span class="re0">$options</span> = <span class="kw2">false</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/empty"><span class="kw3">empty</span></a><span class="br0">&#40;</span><span class="re0">$enumData</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$patterns</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'enum('</span>, <span class="st0">')'</span>, <span class="st0">'<span class="es0">\'</span>'</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$enumData</span> = r<span class="br0">&#40;</span><span class="re0">$patterns</span>, <span class="st0">''</span>, <span class="re0">$enumData</span><span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'COLUMNS'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'Type'</span><span class="br0">&#93;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$options</span> = <a href="http://www.php.net/explode"><span class="kw3">explode</span></a><span class="br0">&#40;</span><span class="st0">','</span>, <span class="re0">$enumData</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; Cache::<span class="me2">write</span><span class="br0">&#40;</span><span class="re0">$cacheKey</span>, <span class="re0">$options</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="kw1">return</span> <span class="re0">$options</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span><br />
<span class="kw2">?&gt;</span></div>
<p>To put that into the form I did in the controller:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$enumOptions</span> = ClassRegistry::<span class="me2">init</span><span class="br0">&#40;</span><span class="st0">'User'</span><span class="br0">&#41;</span>-&gt;<span class="me1">enumOptions</span><span class="br0">&#40;</span><span class="st0">'level'</span><span class="br0">&#41;</span>;<br />
<span class="re0">$this</span>-&gt;<span class="me1">set</span><span class="br0">&#40;</span><a href="http://www.php.net/compact"><span class="kw3">compact</span></a><span class="br0">&#40;</span><span class="st0">'enumOptions'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;</div>
<p>and then in the form:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$form</span>-&gt;<span class="me1">input</span><span class="br0">&#40;</span><span class="st0">'level'</span>, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'options'</span> =&gt; <span class="re0">$enumOptions</span>, <span class="st0">'label'</span> =&gt; <span class="st0">'Level:'</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;</div>
<p>Enjoy and please give feedback.</p>
<p>-- Tim Koschuetzki aka DarkAngelBGE<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/4a977c9b-1bdc-44b4-b027-1a54cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2FHow_to_Fetch_the_ENUM_Options_of_a_Field_The_CakePHP_Enumerable_Behavior%3A4a977c9b-1bdc-44b4-b027-1a54cbdd56cb &amp;title=How+to+Fetch+the+ENUM+Options+of+a+Field+-+The+CakePHP+Enumerable+Behavior';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2FHow_to_Fetch_the_ENUM_Options_of_a_Field_The_CakePHP_Enumerable_Behavior%3A4a977c9b-1bdc-44b4-b027-1a54cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2FHow_to_Fetch_the_ENUM_Options_of_a_Field_The_CakePHP_Enumerable_Behavior%3A4a977c9b-1bdc-44b4-b027-1a54cbdd56cb&amp;title=How+to+Fetch+the+ENUM+Options+of+a+Field+-+The+CakePHP+Enumerable+Behavior&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2FHow_to_Fetch_the_ENUM_Options_of_a_Field_The_CakePHP_Enumerable_Behavior%3A4a977c9b-1bdc-44b4-b027-1a54cbdd56cb&amp;title=How+to+Fetch+the+ENUM+Options+of+a+Field+-+The+CakePHP+Enumerable+Behavior';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/How_to_Fetch_the_ENUM_Options_of_a_Field_The_CakePHP_Enumerable_Behavior:4a977c9b-1bdc-44b4-b027-1a54cbdd56cb">10 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/How_to_Fetch_the_ENUM_Options_of_a_Field_The_CakePHP_Enumerable_Behavior:4a977c9b-1bdc-44b4-b027-1a54cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/CakePHP_Workshop_in_Muenchen_15_16_Oktober:4a9b0368-dcfc-4ab2-b8ed-0bc1cbdd56cb">CakePHP Workshop in München (15-16. Oktober)</a></h2>	<div class="posted-on">
		<p>Posted on 30/8/09 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Nach einem sehr erfolgreichen <a href="http://cakefest.org/">Debüt in Berlin</a>, freuen wir uns sehr den ersten exklusiv deutschsprachigen Workshop in München bekannt zu geben.</p>
<p>Unter der Organisation der CakeExperts bietet Debuggable Ltd. erstmalig am 15. und 16. Oktober 2009 im Telekom Center München einen Workshop an, bei dem erfahrene PHP-Entwickler in die Welt von CakePHP eingeführt werden. </p>
<p>Der Workshop findet an zwei aufeinander aufbauenden Tagen statt, in denen den Teilnehmern anhand der Entwicklung einer spezifischen Anwendung in CakePHP die grundlegenden Prinzipien des Frameworks vermittelt werden. Die Kosten für einen Tag betragen 400 Euro, für beide Tage 650 Euro – jeweils zzgl. MwSt.. Während sich der erste Tag stärker um die Grundlagen dreht, dreht sich der zweite um komplexere Problemstellungen und deren Lösung. Parallel dazu können in one-on-one Sessions spezifische Fragen mit den beiden CakePHP erfahrenen Dozenten Robert Scherer und Felix Geisendörfer diskutiert werden.</p>
<p>Robert Scherer, Leiter der CakeExperts in München, ist Spezialist in der Entwicklung PHP-basierter Webanwendungen und Autor des Buchs Webentwicklung mit CakePHP (Erschienen 9/2008 bei O’Reilly Deutschland). Felix Geisendörfer, einer der Köpfe von Debuggable Ltd., ist Mitglied im CakePHP-Core-Entwicklungs-Team und setzt sein tiefgreifendes Wissen über CakePHP seit Jahren in erfolgreichen Kundenprojekten ein.</p>
<p>Das Buchungsformular sowie detaillierte Informationen zur Agenda sind unter <a href="http://www.cake-experts.de/workshops">www.cake-experts.de/workshops</a> abrufbar. Weitere Workshops finden statt am:<br />
21. / 22.01.2010<br />
15. / 16.04.2010<br />
15. / 16.07.2010.</p>
<p>Die CakeExperts, eine Business Unit der M-Invent GmbH mit Sitz in München, sind zusammen mit der Debuggable Ltd. die deutsche Fachpräsenz des kostenlosen Open Source Frameworks CakePHP. Hinter den CakeExperts stehen die beiden Geschäftsführer Roland Bühler und Jürgen Jacob sowie hoch qualifizierte Mitarbeiter unter der Leitung von Robert Scherer. </p>
<p>Debuggable Ltd. wurde 2008 von Felix Geisendörfer und Tim Koschützki in Berlin gegründet. Die beiden CakePHP core Entwickler schlossen sich zusammen, um gemeinsam kommerzielle CakePHP Dienstleistungen anzubieten sowie an eigenen Projekten zu arbeiten.</p>
<p>M-Invent GmbH<br />
Business Unit CakeExperts<br />
Thierschstrasse 15<br />
80538 München<br />
Deutschland</p>
<p>Tel.: +49 (0)89 385 327 55<br />
Fax: +49 (0)89 385 327 57<br />
<a href="http://www.cake-experts.de ">www.cake-experts.de </a></p>
<p>Pressekontakt:<br />
Xpert-Marketing<br />
Eine Business Unit der M-New GmbH<br />
Thierschstr. 15<br />
80538 München </p>
<p>mailto: <a href="mailto:nicole.thiel@xpert-marketing.com">nicole.thiel@xpert-marketing.com</a><br />
tel.: +49 (0) 89 - 3585-4470<br />
fax: +49 (0) 89 – 3585-4471<br />
mobile: +49 (0) 179 – 74 96 263<br />
<a href="www.xpert-marketing.com">www.xpert-marketing.com</a></p>
<p>-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/4a9b0368-dcfc-4ab2-b8ed-0bc1cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2FCakePHP_Workshop_in_Muenchen_15_16_Oktober%3A4a9b0368-dcfc-4ab2-b8ed-0bc1cbdd56cb &amp;title=CakePHP+Workshop+in+M%C3%BCnchen+%2815-16.+Oktober%29';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2FCakePHP_Workshop_in_Muenchen_15_16_Oktober%3A4a9b0368-dcfc-4ab2-b8ed-0bc1cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2FCakePHP_Workshop_in_Muenchen_15_16_Oktober%3A4a9b0368-dcfc-4ab2-b8ed-0bc1cbdd56cb&amp;title=CakePHP+Workshop+in+M%C3%BCnchen+%2815-16.+Oktober%29&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2FCakePHP_Workshop_in_Muenchen_15_16_Oktober%3A4a9b0368-dcfc-4ab2-b8ed-0bc1cbdd56cb&amp;title=CakePHP+Workshop+in+M%C3%BCnchen+%2815-16.+Oktober%29';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/CakePHP_Workshop_in_Muenchen_15_16_Oktober:4a9b0368-dcfc-4ab2-b8ed-0bc1cbdd56cb">0 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/CakePHP_Workshop_in_Muenchen_15_16_Oktober:4a9b0368-dcfc-4ab2-b8ed-0bc1cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/transload-it-css-as-a-cloud-service:4a970aa5-da04-4822-bf67-1155cbdd56cb">Transload.it - XSS as a Cloud Service</a></h2>	<div class="posted-on">
		<p>Posted on 27/8/09 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Today we are very happy to announce our new startup <a href="http://transload.it/">transload.it</a>.</p>
<p>Transload.it is a video uploading & encoding service that is designed to make developers happy.</p>
<p>You might have had a client before that said something like: "Oh, and it would be cool if you could upload videos in the application.".  And he is right, it would be cool - regardless whether it is a client project or something you were working on yourself.</p>
<p>However - implementing a feature like this means work. Hard, tedious, frustrating trial & error kind of work to be exact. I'll spare you the details, but just trust me when I say your average client could not repay you for the suffering.</p>
<p>Meet transload.it - the cure for all video upload suffering out there. Our idea is simple: <a href="http://transload.it/signup">Create an account</a> --> <a href="http://docs.transload.it/api.html#quick_start">Include our jQuery plugin</a> --> Done.</p>
<p>But jQuery can't encode videos you might say. This is where the XSS part comes in. Whenever somebody uploads a file on a transload.it-enabled form, the plugin actually takes this file and sends it to our cloud service. Even better, it also shows your users a nice upload progress bar - no flash involved! <a href="http://transload.it/examples">Try it out</a>.</p>
<p>The uploaded files are encoded in FLV, iPhone, iPod or PSP format (you can configure that) and finally stored in Amazon S3. We will add an option for you to use your own S3 buckets as well as your own FTP, SFTP or CDN servers as the final storage targets.</p>
<p>Anyway, enough good stuff. Let's talk about a few sad things. This is an alpha version. We have only a single server online right now, so as people will simultaneously upload their adult video collections (not you of course) things might really fall apart. </p>
<p>We will bring more boxes online over the next week, promised. However to be able to diagnose & debug issues as fast as possible, we opted for a single-box launch.</p>
<p>Now it is your turn to go out there & break things, mention competitors who already launched a product like this 2 years ago or contact us about <a href="mailto:investment@transload.it">investment opportunities</a>.</p>
<p>-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/4a970aa5-da04-4822-bf67-1155cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Ftransload-it-css-as-a-cloud-service%3A4a970aa5-da04-4822-bf67-1155cbdd56cb &amp;title=Transload.it+-+XSS+as+a+Cloud+Service';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Ftransload-it-css-as-a-cloud-service%3A4a970aa5-da04-4822-bf67-1155cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Ftransload-it-css-as-a-cloud-service%3A4a970aa5-da04-4822-bf67-1155cbdd56cb&amp;title=Transload.it+-+XSS+as+a+Cloud+Service&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Ftransload-it-css-as-a-cloud-service%3A4a970aa5-da04-4822-bf67-1155cbdd56cb&amp;title=Transload.it+-+XSS+as+a+Cloud+Service';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/transload-it-css-as-a-cloud-service:4a970aa5-da04-4822-bf67-1155cbdd56cb">17 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/transload-it-css-as-a-cloud-service:4a970aa5-da04-4822-bf67-1155cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="post">
	<h2><a href="/posts/Cake_3_interview_with_Nate_Abele:4a665a5e-5bfc-4e42-96ee-6d284834cda3">Cake 3 interview with Nate Abele</a></h2>	<div class="posted-on">
		<p>Posted on 22/7/09 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hey folks,</p>
<p>since there is still little public information about CakePHP 2.0 and especially the all-new 3.0, I decided to do a little interview with Nate Abele, lead developer of Cake 3.</p>
<dl>
<dt>Hi Nate. CakeFest is over, and now everybody is slowly catching up on the announcement of CakePHP 2.0 and Cake 3. Can you give me a high-level idea of what those two new version are all about?</dt>
<dd>Well, CakePHP 2.0 is basically an update of the existing 1.x codebase for PHP5 strict mode compliance.  What this means is that, beyond the benefits of shedding some extra code and structure needed for PHP4 compatibility, upgrading to 2.0 will give your applications, on average, a 25% speed bump right out of the gate.</dd>
<dd>Cake 3.0, on the other hand, is pretty different from the existing core code in a few notable ways.  Mainly, it's been re-written from the ground up for PHP 5.3.</dd>
<dt>Is CakePHP 2.0 going to be compatible with 1.x? We saw a big upgrade from 1.1 to 1.2, is the upgrade to 2.0 going to be an even bigger one?</dt>
<dd>Actually no, CakePHP 2.0 will be almost 100% API-compatible with the forthcoming CakePHP 1.3, and 1.3 is still API-compatible with 1.2, except for a few deprecated (but still working) methods.</dd>
<dd>Also, when migrating from 1.2 to 1.3/2.0, we have a small migration guide which will alert developers to the few changes as they update their code.</dd>
<dt>Awesome, so it's going to be pretty much a free performance boost for all current 1.2 apps?</dt>
<dd>Yes, exactly.</dd>
<dt>Ok, back to 3.0. Can you talk a little about the fundamental changes in both PHP as language as well as its impact on the new CakePHP core?</dt>
<dd>Well, for CakePHP, going from PHP4 compatibility straight to a 5.3-only version is a very big jump, not only because of 5.3's new features, but also because of the features that have been available in PHP5 that we're now able to take advantage of.</dd>
<dd>One of the biggest new features in PHP 5.3, that has really informed Cake's new architecture is namespaces.  The new core is organized into "packages", each of which builds off of other packages.</dd>
<dd>This not only makes the core itself very modular (i.e. packages can be used in non-Cake applications), but it also makes the plugin architecture extremely simple and powerful.  Plugins can now include just as much functionality as any class in an application, or in the core, and can even dynamically replace core class dependencies.</dd>
<dd>Another of 5.3's new features is closures.  Closures are anonymous functions (i.e. functions assigned to a property or variable) that can inherit the context of the scope in which they're defined.  This allows us to inject custom functionality directly into classes and methods, and with 3.0, we've leveraged this in an interesting way with the filters system.</dd>
<dd>In the new core, many object methods implement this filters system, and this allows you to attach custom behavior directly to method calls: modify parameters on the way in, and return values on the way out.</dd>
<dd>This is extremely powerful, because it makes functionality like caching or logging a snap, as these can be applied in a completely unobtrusive way, without the class in question needing to know anything about how to do those things.</dd>
<dd>One thing we often struggle with as developers is figuring out which class a piece of logic belongs in, or coupling classes too tightly because each "needs" to know something about how the other works.</dd>
<dd>With this system, we can keep classes cleanly separated, but still make them talk to each other even though each one doesn't know anything about the other.</dd>
<dd>Another great feature of the system is that the interface is standard, and all filters can be applied the same way, so if you know how to write filters for one core class, you know how to write filters for all of them.</dd>
<dt>Do you have a simple example to illustrate this?</dt>
<dd>As an example, let's say I wanted to see a log of all the queries executed against the database.  In Cake 1.2, we have logic built into the database classes to keep a record of queries that get executed, and output them on demand.</dd>
<dd>However, the database classes are for interacting with databases; they shouldn't have to know anything about logging.</dd>
<dd>In Cake 3, I can simply do the following:</dd>
<dd>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
Connections::<span class="me2">get</span><span class="br0">&#40;</span><span class="st0">'default'</span><span class="br0">&#41;</span>-&gt;<span class="me1">applyFilter</span><span class="br0">&#40;</span><span class="st0">'_execute'</span>, <span class="kw2">function</span><span class="br0">&#40;</span><span class="re0">$self</span>, <span class="re0">$params</span>, <span class="re0">$chain</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="re0">$out</span> = <a href="http://www.php.net/fopen"><span class="kw3">fopen</span></a><span class="br0">&#40;</span><span class="st0">'php://stderr'</span><span class="br0">&#41;</span>;<br />
&nbsp; <a href="http://www.php.net/fwrite"><span class="kw3">fwrite</span></a><span class="br0">&#40;</span><span class="re0">$out</span>, <span class="re0">$params</span><span class="br0">&#91;</span><span class="st0">'sql'</span><span class="br0">&#93;</span><span class="br0">&#41;</span>;<br />
&nbsp; <a href="http://www.php.net/fclose"><span class="kw3">fclose</span></a><span class="br0">&#40;</span><span class="re0">$out</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="kw1">return</span> <span class="re0">$chain</span>-&gt;<span class="me1">next</span><span class="br0">&#40;</span><span class="re0">$self</span>, <span class="re0">$params</span>, <span class="re0">$chain</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span><span class="br0">&#41;</span>;</div>
</dd>
<dd>In this example, I'm getting an instance of the database object from the Connections class (this is equivalent to calling <code>ConnectionManager::getDataSource()</code> in 1.2), and attaching a filter that intercepts the <code>_execute()</code> method.</dd>
<dd>Now, I could send the output to a proper logging class, but for now I just want to see the queries sent to the error log, just so I can quickly see what's going on.</dd>
<dd>This code will now be executed every time a query gets run against that database, and all queries will be logged as I expect.</dd>
<dt>So filters are always instance specific and do not apply to a class in general?</dt>
<dd>The example is just a small taste of the power of the filters system.</dd>
<dd>For instantiated classes, yes, you typically apply them on a case-by-case basis.  However, as the framework is still in progress, we have anticipated the need to apply configuration to all classes of a certain type, so in the future this will likely be possible as well.</dd>
<dd>Additionally, one new utility class available in 3.0 core is the <code>Collection</code> class.  This class acts similarly to an array, but has some extra goodies, like allowing you to call a method on all the object instances it contains, just by calling that method on the <code>Collection</code> instance itself.</dd>
<dd>So in that way, it would be possible to apply the same filter to many classes at once using that technique as well.</dd>
<dt>Since you are mentioning the Collection class, I heard the Model layer is actually going to see the biggest changes in 3.0. Can you elaborate a bit on your plans for that?</dt>
<dd>Yes, in many ways the Model will change; in many ways it won't.  For example, records are still queried by making calls like <code>$posts = Post::find("all");</code></dd>
<dd>This, and much of the rest of the basic Model-interaction syntax, should be immediately familiar to anyone working with Cake currently.</dd>
<dd>Under the hood, however, the Model layer is completely new.  Models now interact with the underlying DataSource architecture through a constrained set of methods using query objects.  Query objects are extremely useful, as they allow us to encapsulate much of the query-generation work that was previously spread throughout several different classes.  In addition, since the query object works with the data layer to generate queries, and since the core query object can be replaced with custom, user-defined objects, users can easily modify and extend the SQL syntax that Cake supports.</dd>
<dd>Building off of the <code>Collection</code> class mentioned previously, model return results have also been improved with the introduction of objects, not only for returned records themselves, but also for record sets.  The <code>RecordSet</code> object, which extends <code>Collection</code>, acts like an array in that you can iterate over it with foreach and friends, but it has some other notable advantages, like being able to lazy-fetch records as you ask for them.</dd>
<dd>This reflects a design decision that plays out in many areas of the framework, which is only possible with the new, more object-oriented architecture, which is being lazy.</dd>
<dd>Any loading or processing that needs to take place, doesn't take place until it actually has to.  Referenced classes aren't loaded until they're used, routes aren't compiled until they're queried, database results aren't fetched until you're ready to do something with them.</dd>
<dd>Aside from the many other architectural improvements, this makes the new core exceedingly efficient.</dd>
<dt>With all returned records being objects, does this mean CakePHP is moving towards a full ActiveRecord implementation?</dt>
<dd>Practically speaking, yes, that's where we're at.  With PHP 5.3's new Late Static Binding features, we can now properly reference static classes as mentioned above.</dd>
<dt>Ok. A personal goal of mine is to stop using relational databases for unstructured data in 2009. Is Cake 3 going to be #nosql friendly?</dt>
<dd>Definitely.  With the simplified DataSource interface and looser schema requirements, modeling non-relational data becomes almost as easy.  The new model system is also more flexible in how it allows you to define the relationships between models; and with custom query objects, you can implement custom flags and expressions that are specific to whatever data store you're working with.</dd>
<dt>Fantastic! When can we expect to get our hands on those new goodies? Do you have a general timeline for cake 3?</dt>
<dd>While the code is immediately available at <a href="http://code.cakephp.org/">code.cakephp.org</a>, it's still hard to say when we'll see an official release; but expect to see lots of movement on it in the coming months.</dd>
<dt>With Cake 3 advancing in both features as well as server-side requirements, how does it compete with frameworks such as Ruby on Rails, Django, etc.?</dt>
<dd>Well, conveniently, migrating from PHP 5.2 to 5.3 is pretty quick and painless, as very little has changed in the way of existing features.  As ever, PHP itself is the easiest to use and easiest to deploy to platform on the web, and provided a host that supports 5.3, it's a simple matter of dropping the files in the web root, just like always.  Additionally, with the falling cost of virtualized computing and readily available server configurations with PHP ready to go out-of-the-box, deploying Cake applications, or any PHP application, has never been simpler.</dd>
<dd>Maintenance for PHP applications has always been equally simple, and in terms of performance, PHP is always at or near the top.  With its shared-nothing architecture, you never have to worry about memory management, dead-locked threads, or infrastructure issues when scaling across multiple web servers.</dd>
<dt>Ok, thank you very much for the interesting interview Nate. If our readers have any questions, will you be available to answer them in the comments?</dt>
<dd>Sure thing, thanks for having me.</dd>
</dl>
<p>If you are still looking for more CakeFest information, Matt published his <a href="http://www.pseudocoder.com/archives/2009/07/21/cakephp-digest-18-the-cakefest-edition/">CakePHP Digest #18 - The CakeFest Edition post</a> and the first videos are starting to show up at <a href="http://live.cakephp.org/">live.cakephp.org</a>.</p>
<p>-- Felix Geisendörfer aka the_undefined</p>
<p><strong>Update:</strong> The Cake 3 codebase is still labeled as experimental by the cake project. Play around with it at your own risk, the roadmap is still subject to change.<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/4a665a5e-5bfc-4e42-96ee-6d284834cda3"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2FCake_3_interview_with_Nate_Abele%3A4a665a5e-5bfc-4e42-96ee-6d284834cda3 &amp;title=Cake+3+interview+with+Nate+Abele';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2FCake_3_interview_with_Nate_Abele%3A4a665a5e-5bfc-4e42-96ee-6d284834cda3';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2FCake_3_interview_with_Nate_Abele%3A4a665a5e-5bfc-4e42-96ee-6d284834cda3&amp;title=Cake+3+interview+with+Nate+Abele&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2FCake_3_interview_with_Nate_Abele%3A4a665a5e-5bfc-4e42-96ee-6d284834cda3&amp;title=Cake+3+interview+with+Nate+Abele';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>

	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/Cake_3_interview_with_Nate_Abele:4a665a5e-5bfc-4e42-96ee-6d284834cda3">14 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/Cake_3_interview_with_Nate_Abele:4a665a5e-5bfc-4e42-96ee-6d284834cda3#CommentAddForm">Add Comment</a>	</div>
	</div>
<div class="paging">
	<a href="/posts/index/page:10" class="prev">&laquo; Previous</a> <span><a href="/posts/index/page:7">7</a></span> | <span><a href="/posts/index/page:8">8</a></span> | <span><a href="/posts/index/page:9">9</a></span> | <span><a href="/posts/index/page:10">10</a></span> | <span class="current">11</span> | <span><a href="/posts/index/page:12">12</a></span> | <span><a href="/posts/index/page:13">13</a></span> | <span><a href="/posts/index/page:14">14</a></span> | <span><a href="/posts/index/page:15">15</a></span> <a href="/posts/index/page:12" class="next">Next &raquo;</a></div>	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@Jörn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class="active"><a href="/blog">Blog</a></li><li class=""><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
