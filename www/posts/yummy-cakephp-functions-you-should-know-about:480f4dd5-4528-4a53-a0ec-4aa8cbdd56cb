<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Yummy CakePHP functions you should know about! &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="post">
	<h2><a href="/posts/yummy-cakephp-functions-you-should-know-about:480f4dd5-4528-4a53-a0ec-4aa8cbdd56cb">Yummy CakePHP functions you should know about!</a></h2>	<div class="posted-on">
		<p>Posted on 4/6/06 by 
		<a href="/felix">Felix Geisend√∂rfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
		<div class="deprecated-post">
	<h3>Deprecated post</h3>
	<p>
		The authors of this post have marked it as deprecated. This means the information displayed is most likely
		<strong>outdated, inaccurate, boring</strong> or a combination of all three.
	</p>
	<p><strong>Policy:</strong> We never delete deprecated posts, but they are not listed in our categories or show up in the search anymore.</p>
	<p>
		<strong>Comments:</strong> You can continue to leave comments on this post, but please consult
		<a href="http://www.google.com">Google</a> or <a href="/posts/search/conditions:posts">our search</a>		first if you want to get an answer ; ).
	</p>
</div>		<p>One of the fun things when working with CakePHP has always been browsing through the core code. It truly is a masterpiece of PHP programming art, and you'll almost always find something interesting to use in your current projects. So this post will give you a little insight into some of those seldom used CakePHP features I've come across.</p>
<h3>CakePHP's build in data cache</h3>
<p><strong>Function:</strong> cache($path, $data = null, $expires = '+1 day', $target = 'cache')<br />
<strong>Purpose:</strong> Allow people to store temporary data in the app/tmp/cache folder. (And inside app/webroot as well)</p>
<p>The cache function is an easy way to store the results of server-heavy requests for an hour or two so the performance won't suffer. I found it very useful when working with Web Services. So here is a simple way to use this function (out of my Google Analytics Model):</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="co1">// $cachePath is something like 'analytics/a13g1hg58gh94jh213hj1k.profiles'</span><br />
<br />
<span class="re0">$profilesData</span> = cache<span class="br0">&#40;</span><span class="re0">$cachePath</span>, <span class="kw2">null</span>, <span class="st0">'+2 hours'</span><span class="br0">&#41;</span>; &nbsp; &nbsp; &nbsp; &nbsp;<br />
<br />
<span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/empty"><span class="kw3">empty</span></a><span class="br0">&#40;</span><span class="re0">$profilesData</span><span class="br0">&#41;</span><span class="br0">&#41;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="re0">$profilesData</span> = cache<span class="br0">&#40;</span><span class="re0">$cachePath</span>, <span class="re0">$this</span>-&gt;<span class="me1">httpGet</span><span class="br0">&#40;</span><span class="re0">$url</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;</div>
<p>If you need to cache objects, you can use the serialize / unserialize function of php. If you need to cache resized images you can set $target to 'public' and things will get stored to the webroot. All in all a very neat function ; ). One thing I created myself when working with it, was a function that would generate a unique $path based on the paramaters of the function. That way you can make sure the data you cache is only cached for one specific set of params:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">function</span> __createCachePath<span class="br0">&#40;</span><span class="re0">$ext</span> = <span class="st0">'.txt'</span><span class="br0">&#41;</span><br />
<span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$args</span> = <a href="http://www.php.net/func_get_args"><span class="kw3">func_get_args</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span>; &nbsp; &nbsp; &nbsp; &nbsp;<br />
&nbsp; &nbsp; <a href="http://www.php.net/array_shift"><span class="kw3">array_shift</span></a><span class="br0">&#40;</span><span class="re0">$args</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="re0">$hashSource</span> = <span class="kw2">null</span>;<br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="re0">$args</span> <span class="kw1">as</span> <span class="re0">$arg</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$hashSource</span> = <span class="re0">$hashSource</span> . <a href="http://www.php.net/serialize"><span class="kw3">serialize</span></a><span class="br0">&#40;</span><span class="re0">$arg</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <br />
&nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/md5"><span class="kw3">md5</span></a><span class="br0">&#40;</span><span class="re0">$hashSource</span><span class="br0">&#41;</span>.<span class="re0">$ext</span>;<br />
<span class="br0">&#125;</span></div>
<p>Now you can pass all parameters you want to the function and it will return a unique cache path based on the md5 fingerprint of the parameters. It'll work with Strings, Numbers, Arrays, objects and everything else that can be serialized.</p>
<h3>Working with Trees in CakePHP</h3>
<p><strong>Function:</strong> Model::findAllThreaded($conditions = null, $fields = null, $sort = null)<br />
<strong>Purpose:</strong> Return an array of nested Model Items based on their parent_id field.</p>
<p>If you know how to work with Model:findAll() you also know how to use this function. The only difference is, that this function expects your model (table) to have a field called parent_id where relations betweens items are stored. Based on that a nested array is returned.</p>
<h3>CakePHP's build in debug() function</h3>
<p><strong>Function:</strong> debug($var = false, $showHtml = false)<br />
<strong>Purpose:</strong> Output the data of any object or variable as long as DEBUG > 0.</p>
<p>If you have to use debug statements in your app in order to check results here and there, this function is the way to go. It basically does a print_r() on your data and puts it inside &lt;pre&gt; tags. Now when your application becomes stable you simply set DEBUG to 0 inside of app/config/core.php and all your debug() statements become deactivated.</p>
<h3>Read & Write files</h3>
<p><strong>Read Function:</strong> file_get_contents($fileName, $useIncludePath = false)<br />
<strong>Write Function:</strong> file_put_contents($fileName, $data)<br />
<strong>Purpose:</strong> Simple access to read & write for files.</p>
<p>I think those two functions are php5 functions that cakephp creates for you if they are not available when you use php4. The functions themselfs are pretty self-explanatory since all they do is to read and write data from / to files.</p>
<h3>Recursive chmod</h3>
<p><strong>Function:</strong> chmodr($path, $mode = 0755)<br />
<strong>Purpose:</strong> Allows you to recursivly chmod an entire directory.</p>
<p>This function expects you to provide a $path and and chmod $mode, then it recursivley sets this $mode to all files, inside this directory recursivley. Useful when you do a lot with files in your app.</p>
<h3>Take the best out of scaffolding</h3>
<p><strong>Function:</strong> Controller::generateFieldNames($data = null, $doCreateOptions = true)<br />
<strong>Purpose:</strong> Generates an array that can be used to create a scaffolded interface based on your key model in the controller.</p>
<p>This is one of the *most* RAD functions in CakePHP I think. You usally use it like this in order to create a scaffold-like interface (only that you have full control over it):</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$post</span>= <span class="re0">$this</span>-&gt;<span class="me1">generateFieldNames</span><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">params</span>-&gt;<span class="me1">data</span><span class="br0">&#41;</span>;<br />
<span class="re0">$this</span>-&gt;<span class="me1">set</span><span class="br0">&#40;</span><span class="st0">'post'</span>, <span class="re0">$post</span><span class="br0">&#41;</span>;</div>
<p>And inside your view you do somethings like this:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">&lt;?php</span> <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$form</span>-&gt;<span class="me1">generateFields</span><span class="br0">&#40;</span><span class="re0">$post</span><span class="br0">&#41;</span>; <span class="kw2">?&gt;</span> <br />
<span class="kw2">&lt;?php</span> <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="re0">$form</span>-&gt;<span class="me1">generateSubmitDiv</span><span class="br0">&#40;</span><span class="st0">'Create Post'</span><span class="br0">&#41;</span>; <span class="kw2">?&gt;</span> <br />
&lt;/form&gt;</div>
<p>This will build you an interface based on the fields in your table that's a lot like the scaffolding one. If you need to customize it (which is why you do this instead of scaffolding), just take a look at the $post array created by generateFieldNames. Changing things around in there can help, as well as to unset() certain fields of it.</p>
<h3>And there are more ...</h3>
<p>Those are just a couple functions I've used before or found inside the CakePHP core. I know that there are tons of others, and that's why I would encourage everybody to go out for some adventures inside the code of the framework you work with - it'll be an educational experience.</p>
<p>I hope some of those functions will be helpful for you in future ; ).</p>
<p>--Felix aka the_undefined</p>
<p><img style="display: none;" src="http://debuggable.com/posts/tick/480f4dd5-4528-4a53-a0ec-4aa8cbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fyummy-cakephp-functions-you-should-know-about%3A480f4dd5-4528-4a53-a0ec-4aa8cbdd56cb &amp;title=Yummy+CakePHP+functions+you+should+know+about%21';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fyummy-cakephp-functions-you-should-know-about%3A480f4dd5-4528-4a53-a0ec-4aa8cbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fyummy-cakephp-functions-you-should-know-about%3A480f4dd5-4528-4a53-a0ec-4aa8cbdd56cb&amp;title=Yummy+CakePHP+functions+you+should+know+about%21&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fyummy-cakephp-functions-you-should-know-about%3A480f4dd5-4528-4a53-a0ec-4aa8cbdd56cb&amp;title=Yummy+CakePHP+functions+you+should+know+about%21';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>
	<div class="related-posts">
		<h3>(Theoretically) Related Posts</h3>
				<ul class="first">
							<li><a href="/posts/cakephp-and-acl-why-is-it-so-difficult:480f4dd5-ae90-4ac6-a29a-4caccbdd56cb">CakePHP and Acl - Why is it so difficult?</a></li>
							<li><a href="/posts/the-ultimate-cakephp-bootstrap-technique:480f4dd5-2bcc-40cb-b45f-4b1dcbdd56cb">The ultimate CakePHP bootstrap technique</a></li>
							<li><a href="/posts/how-to-save-half-a-second-on-every-request-of-your-cakephp-app:49a69610-8648-4d65-815d-754c4834cda3">How To Save Half A Second On Every CakePHP Request</a></li>
							<li><a href="/posts/camkephp-meetup-this-friday-in-berlin:4981c25d-3ee8-478a-8498-36164834cda3">CakePHP Meetup this Friday in Berlin</a></li>
							<li><a href="/posts/berlin-cakephp-meetup-next-friday-jan-30:497859a4-7460-4177-ba2e-46fd4834cda3">Berlin CakePHP Meetup, Next Friday (Jan 30)</a></li>
					</ul>
		<ul>
							<li><a href="/posts/cakephp-removecache-shell---remove-your-cache-files-easily:4a277938-977c-43bc-bd83-645c4834cda3">CakePHP RemoveCache Shell - Remove Your Cache Files Easily</a></li>
							<li><a href="/posts/extra-hot-cakephp-1.2-stable-is-finally-released!:4954151c-f87c-434b-abbd-4e404834cda3">Extra Hot: CakePHP 1.2 Stable is finally released!</a></li>
							<li><a href="/posts/how-to-have-multiple-paginated-widgets-on-the-same-page-with-cakephp:48ad241e-b018-4532-a748-0ec74834cda3">How to have multiple paginated widgets on the same page with CakePHP</a></li>
							<li><a href="/posts/screencast-using-vendor-branching-and-cakephp:480f4dd6-6cac-44cb-b685-4d6bcbdd56cb">Screencast #1: Using vendor branching and CakePHP</a></li>
							<li><a href="/posts/cakephp-conference-in-chile:49482d41-58a8-46b6-a35b-6f614834cda3">CakePHP conference in Chile</a></li>
					</ul>
	</div>
	<div class="clear">&nsbp;</div>

			<p>You can <a href="#comment_form">skip to the end</a> and add a comment.</p>
	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/yummy-cakephp-functions-you-should-know-about:480f4dd5-4528-4a53-a0ec-4aa8cbdd56cb">11 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/yummy-cakephp-functions-you-should-know-about:480f4dd5-4528-4a53-a0ec-4aa8cbdd56cb#CommentAddForm">Add Comment</a>	</div>
	<div class="post_comments">
	<div class="clear"></div>
									<div id="comment-480f4dd8-90c8-4968-a28e-4abecbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://richardathome.wordpress.com/2006/06/06/links-for-2006-06-06/" rel="nofollow">Richard@Home &raquo; Blog Archive &raquo; links for 2006-06-06</a>						</strong>
						<strong>said 
						on Jun 06, 2006:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>[...] ThinkingPHP ¬ª Yummy CakePHP functions you should know about! Some useful, tucked out of sight functions in the core CakePHP API (tags: cakephp) [...]</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dd8-e698-4070-ac51-4512cbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=f87fb444b7e6bb43ad30ecd9cc7343d3&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://blog.perfectspace.com" rel="nofollow">nate</a>						</strong>
						<strong>said 
						on Jun 06, 2006:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Well, this looks great!  I am trying to use the generateFieldNames stuff you mentioned.  One thing I'm not so sure of is how exactly you can customize it.  I guess you can customize all around the form, but not the form itself, right?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dd8-cabc-4c63-a1eb-4d97cbdd56cb" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.debuggable.com/felix" rel="nofollow">Felix Geisend√∂rfer</a>						</strong>
						<strong>said 
						on Jun 06, 2006:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hi nate, I assume your not the cakephp-devloper nate, right?</p>
<p>Anyway, you can use unset() to remove certain fields from beeing turned into an interface. You can manipulate the array items to change their types (text->dropdown, etc.). Now if you have to insert stuff in between or change the html generated you'll need buffer the output of the FormHelper::generateFields() function and use some regex on it to change/insert stuff. You might also be able to do that by adding a dummy value to the array and to replace the outputs for it (haven't tried that yet).</p>
<p>Normally I found CSS together with unset() good enough for customizing the interface to fit all my needs. If you really don't get output buffering and regex working for you I suggest you just copy the output of the generateFields() function directly into your view and custimize it there. Because you should only use generateFields for simple interfaces that go with the cakephp scaffolding kind of way. Otherwise you should implement your own forms.</p>
<p>Hope that helps, --Felix</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dd8-e180-42fc-9a01-49fbcbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.jonbaer.com/articles/2006/06/10/yummy-cakephp-functions-you-should-know-about" rel="nofollow">Yummy CakePHP functions you should know about!</a>						</strong>
						<strong>said 
						on Jun 11, 2006:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>[...] Yummy CakePHP functions you should know about!: "One of the fun things when working with CakePHP has always been browsing through the core code. It truly is a masterpiece of PHP programming art, and you'll almost always find something interesting to use in your current projects. So this post will give you a little insight into some of those seldom used CakePHP features I've come across. [...]</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4de7-5c98-44ed-90a3-4b95cbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=84335361403f1dc3ad3e66d6942fb498&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.emahatva.com" rel="nofollow">sruthi krishna</a>						</strong>
						<strong>said 
						on Mar 10, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>hi,</p>
<p>    I am new to cake php, so i need help to how to write the code and implement cake php in projects.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4df4-14e0-4a5c-8911-494bcbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://blogdotphp.ru/cakephp-best-article" rel="nofollow">Blog.Php about cakePHP &raquo; –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –ø–æ cakePHP</a>						</strong>
						<strong>said 
						on Jan 26, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>[...] –ü–æ–ª–µ–∑–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ [...]</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4df8-2178-4a6d-820f-4039cbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=08105fb05cfdf99dabf5a30c3c2375bb&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Jono&nbsp;						</strong>
						<strong>said 
						on Mar 31, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hi</p>
<p>Could you explain how:</p>
<p>$this-&gt;httpGet($url)</p>
<p>works. Do you need to included something extra?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4df8-9dd0-46a4-8de3-42decbdd56cb" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.debuggable.com/felix" rel="nofollow">Felix Geisend√∂rfer</a>						</strong>
						<strong>said 
						on Mar 31, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Jono: I think it was something custom I did. Checkout the HttpSocket class in CakePHP 1.2 for stuff like this.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4df8-7374-44f2-be32-457acbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=08105fb05cfdf99dabf5a30c3c2375bb&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Jono&nbsp;						</strong>
						<strong>said 
						on Mar 31, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Thanks Felix. Great blog by the way, really enjoying CAKE PHP and your Blog definitely helps with the documentation still not being finished.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-491c66fd-76e4-411c-8a81-35664834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=6237bc6ba2760cdd211179686844d182&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.itamer.com" rel="nofollow">Sarah</a>						</strong>
						<strong>said 
						on Nov 13, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Still relevant - some of us have no plans to upgrade and still have tweaks we could make. Thanks for keeping this online :)</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4ab09d81-4904-47cf-9c46-4fa1cbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=59f10cae052fe6af9dc6d55effb436d6&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://mattkaufman.org" rel="nofollow">Matt Kaufman</a>						</strong>
						<strong>said 
						on Sep 16, 2009:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Wow, thank you SO MUCH for the generateFieldNames() and $form-> generateFields(generateFieldNames()) functions....!!!</p>
<p>This is excellent, thanks.  Didn't think it was possible for me to find anything I *didn't know already* on Cake!!  Thanks Felix, your site/posts are great.</p>
<p>Regards,<br />
Matt Kaufman</br><br />
917-512-6281</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  	
				<div class="divider"></div>
		<a name="comment_form"></a>
		<p>This post is too old. We do not allow comments here anymore in order to fight spam. If you have real feedback or questions for the post, please <a href="/contact">contact us</a>.</p>
	</div></div>
	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@J√∂rn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
