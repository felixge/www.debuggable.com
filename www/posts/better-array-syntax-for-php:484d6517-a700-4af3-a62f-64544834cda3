<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Better array syntax for PHP: Here's your chance to weigh in &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="post">
	<h2><a href="/posts/better-array-syntax-for-php:484d6517-a700-4af3-a62f-64544834cda3">Better array syntax for PHP: Here's your chance to weigh in</a></h2>	<div class="posted-on">
		<p>Posted on 9/6/08 by 
		<a href="/nate">Nate Abele</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/nate_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hi folks.</p>
<p>Recently there's been some discussion on the PHP internals mailing list about providing an alternate array declaration syntax for PHP.</p>
<p>Instead of:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$fields</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'id'</span>, <span class="st0">'name'</span>, <span class="st0">'created'</span><span class="br0">&#41;</span>;</div>
<p>it would be possible to do</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$fields</span> = <span class="br0">&#91;</span><span class="st0">'id'</span>, <span class="st0">'name'</span>, <span class="st0">'created'</span><span class="br0">&#93;</span>;</div>
<p>Simpler, cleaner and very familiar to anyone who has done development in almost any other modern web language, especially JavaScript.</p>
<p>Well, there's a patch available, but 2/3 of the active PHP committers (who participated in the vote) voted against its inclusion.  However, of the end-users participating in the discussion, 17 out of 20 voted in favor.  Shortly before the voting was concluded, there was a call for some user-land input, so I decided to <a href="http://news.php.net/php.internals/38120">humbly submit my two pennies</a>.</p>
<blockquote><p>
This fact has been pointed out previously, but it bears repeating: the<br />
divide between users and committers on this issue is stark: only 1/3<br />
of committers are in favor, but almost all users who have voiced<br />
opinions on the issue are in favor.  The people actually using the<br />
language want something new, because in this case something new is<br />
better.  Come on guys, arrays are our bread and butter.  PHP has more<br />
support for working with arrays than it does for doing pretty much<br />
anything else.
</p></blockquote>
<p>I can't imagine I'll be taken very seriously.  I also find it hard to believe that many actual users of PHP would be against this, a fact which is all the more tragic given the rhetoric of the core committers who are against it (a full summary of the discussion can be seen at <a href="http://markmail.org/message/rsi4welftwou24p3">http://markmail.org/message/rsi4welftwou24p3</a>, please note that this is not updated in real-time).</p>
<p>Fortunately PHP, like Cake, is an Open Source project, and even I've been known to implement and support features which I personally don't like or have no use for, if the community support behind the idea is strong enough.  The same goes for PHP, so here's your chance to make your voice heard.  Blog, leave comments, post to the internals list, lobby your local PHP core committer (remember to <em>be nice</em>).</p>
<p>Obviously a feature like this, even though we wouldn't be able to directly take advantage of it anytime soon, would be a great help in pushing all PHP projects, especially ours, forward to the future.<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/484d6517-a700-4af3-a62f-64544834cda3"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fbetter-array-syntax-for-php%3A484d6517-a700-4af3-a62f-64544834cda3 &amp;title=Better+array+syntax+for+PHP%3A+Here%27s+your+chance+to+weigh+in';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fbetter-array-syntax-for-php%3A484d6517-a700-4af3-a62f-64544834cda3';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fbetter-array-syntax-for-php%3A484d6517-a700-4af3-a62f-64544834cda3&amp;title=Better+array+syntax+for+PHP%3A+Here%27s+your+chance+to+weigh+in&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fbetter-array-syntax-for-php%3A484d6517-a700-4af3-a62f-64544834cda3&amp;title=Better+array+syntax+for+PHP%3A+Here%27s+your+chance+to+weigh+in';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>
	<div class="related-posts">
		<h3>(Theoretically) Related Posts</h3>
				<ul class="first">
							<li><a href="/posts/i-suck-and-you-get-a-chance-to-punish-me:48401fef-8494-4238-b978-4d6b4834cda3">I suck and you get a chance to punish me ...</a></li>
							<li><a href="/posts/turning-javascript-s-arguments-object-into-an-array:4ac50ef8-3bd0-4a2d-8c2e-535ccbdd56cb">Turning JavaScript&#039;s arguments object into an array </a></li>
							<li><a href="/posts/new-fix-for-array-junkies-setmerge-assembles-yummy-arrays:480f4dd6-0c04-46be-a87f-443ecbdd56cb">New fix for array junkies: Set::merge assembles yummy arrays</a></li>
							<li><a href="/posts/modelsave-now-returns-an-array:480f4dd6-0a7c-4026-ad5a-49c8cbdd56cb">Model::save() now returns an array!</a></li>
					</ul>
		<ul>
					</ul>
	</div>
	<div class="clear">&nsbp;</div>

			<p>You can <a href="#comment_form">skip to the end</a> and add a comment.</p>
	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/better-array-syntax-for-php:484d6517-a700-4af3-a62f-64544834cda3">31 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/better-array-syntax-for-php:484d6517-a700-4af3-a62f-64544834cda3#CommentAddForm">Add Comment</a>	</div>
	<div class="post_comments">
	<div class="clear"></div>
									<div id="comment-484d70c1-d0fc-47e5-8e2b-1f5e4834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/felix" rel="nofollow">Felix Geisendörfer</a>						</strong>
						<strong>said 
						on Jun 09, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I would actually kill for having this. I mean seriously, this is about the greatest low-hanging fruit kind of update I could see PHP implement ever!</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484d740e-bb80-4f09-b87b-24c64834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=9c31d1102d95104fb994ae67cd1989b6&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/tim" rel="nofollow">Tim Koschützki</a>						</strong>
						<strong>said 
						on Jun 09, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Agreed. Can't imagine a reason for not doing this.</p>
<p>Remains to be seen who is in favor of JS and who is not... :P</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484d83b4-af50-478d-be1a-4da44834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=6c591c26f88a60019faa84b4e616c639&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://benrasmusen.com" rel="nofollow">Ben Rasmusen</a>						</strong>
						<strong>said 
						on Jun 09, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I would love to see this implemented, it seems so redundant to have to explicitly define it as an array.  This syntax is elegant and functional.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484d8a4e-f238-4cbc-a6a1-0c874834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=84a2b3e78a86861175a38c2ea36a6e40&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://nik.chankov.net" rel="nofollow">Nik Chankov</a>						</strong>
						<strong>said 
						on Jun 09, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Well, I also like this syntax and I would love to see it in PHP :)</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484dae41-f648-4259-914b-558f4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=f3bbd9c40bc7a7c49d4b6012dc2b1b0a&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://daniel.streefkerkonline.com" rel="nofollow">Daniel</a>						</strong>
						<strong>said 
						on Jun 09, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I agree that this should be implemented. As Nate mentioned, there's so much array manipulation going on. Why not make it simpler?</p>
<p>It's just a logical follow-on from being able to do:<br />
$array[] = 'Text';</br></p>
<p>and<br />
$array['key'] = 'Other Text';</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484dc689-71ec-4498-b12e-3e944834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=3640b4e8ee954238c8e45fd4c87bd805&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Ben&nbsp;						</strong>
						<strong>said 
						on Jun 10, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I don't quite understand the point of this. It's not like any new functionality would be achieved by this. I'm solely an end-user of PHP and I don't feel that saving a few characters or looking 'prettier' is really worth the cost of implementing and the potential for even very simple scripts to have compatibility issues with older versions of PHP.</p>
<p>PHP is already overloaded with syntax variations as it is. Adding another surely doesn't make things any simpler?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484dcf1e-16c4-49bd-bec5-6d344834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=5695d132647061781c8f95becd2ddb0f&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Grant Cox&nbsp;						</strong>
						<strong>said 
						on Jun 10, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I agree with Ben.  It's true that square bracket creation is more common, and more consistent with other access syntax.  However, PHP is already bloated with inconsistent language and this won't help this - the existing syntax would still be supported.  And it's not like typing array() is difficult or counter intuitive.</p>
<p>So while I don't see this proposal as a bad idea, I don't see it is worth championing.  Dropping "->" for object accessors would get my vote - I can easily type the word "array()" much faster than "->", particularly when quotes are involved.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484de7ac-5198-48a8-af85-65834834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=669144d1ab0a861af5d54175371bc586&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://mark-story.com" rel="nofollow">Mark Story</a>						</strong>
						<strong>said 
						on Jun 10, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I too would love to see this.  Everytime I have to type out array() a piece of me dies, and I wish for more elegant syntax found in other languages. Not only does javascript use this syntax but so do ruby and python.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484e445e-42f0-43b8-a3fc-4d0c4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=f89047a466ce2ab454925f9449c016b8&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.nemata.com" rel="nofollow">Christoph Tavan</a>						</strong>
						<strong>said 
						on Jun 10, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>So named arrays would look like:</p>
<p>$data = [<br />
    'id' => 1,</br><br />
    'name' => 'New',</br><br />
    'created' => '2008-06-10'</br><br />
]; ??</br></p>
<p>Looks really nice, I think!</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484e7a22-6080-4ff3-bd5f-6c104834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=dc51f58249aa6abec7e79abff23d294e&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							GreyCells&nbsp;						</strong>
						<strong>said 
						on Jun 10, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Love the email to php.internals Nate - Mental Note: "Must try that sort of approach next time I'm in trouble with the Cake team" :)</p>
<p>"Think of the children" is going to be my personal mantra...</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484eb905-80d4-4b71-886f-2c834834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=350d9ede0c3f9339b71b3422713c9b82&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.magichatdevelopment.com" rel="nofollow">David Dashifen Kees</a>						</strong>
						<strong>said 
						on Jun 10, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I, for one, would love not only this syntax but a full-on JSON interpreter built in so that we could make associative arrays using curly-braces just like I can using JavaScript.  Thus something like this...</p>
<p>     $foo = array("bar"=>"baz");</p>
<p>... would become ...</p>
<p>     $foo = { "bar": "baz" }</p>
<p>... or if the PHP => operator would be necessary ...</p>
<p>     $foo = { "bar" => "baz" }</p>
<p>Personally, the idea of a language being bloated is a negative, and potentially destructive attitude.  The ability to use a variety of syntax to reach an equivalent result creates a flexible language that can adapt to the needs of the users and, in some ways, the experience of the users.  For someone coming from JavaScript, a JSON-like method by which to create arrays would be very familiar and reduce the barrier to programming PHP.  How could this not be a good thing?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484eb9c6-9990-4f8d-a046-3e244834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=212514266627991afed96f8305207bad&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Fred&nbsp;						</strong>
						<strong>said 
						on Jun 10, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Useless! We already have too many ways to declare an array. Let's keep this synthax for a future use (see C#).</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484eba02-9fcc-4eab-92b6-4f374834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=03337a05121a6df3dc16d65a41be85fd&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://weierophinney.net/matthew/" rel="nofollow">Matthew Weier O'Phinney</a>						</strong>
						<strong>said 
						on Jun 10, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I completely agree with your statement -- just because somebody is not a committer does not automatically make his/her ideas invalid. Why a project would not listen to its users makes no sense to me.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484ec8c7-6424-47fe-801c-4eb04834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d4f6d60aba06aa0249674c23ba2aefe8&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://blog.phpdoc.info/" rel="nofollow">Sean Coates</a>						</strong>
						<strong>said 
						on Jun 10, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>@David Dashifen Kees:<br />
$foo = json_decode('{ "bar": "baz" }');</br></p>
<p>S</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484ec952-e8b4-4120-bcd9-4ea94834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d4f6d60aba06aa0249674c23ba2aefe8&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://blog.phpdoc.info/" rel="nofollow">Sean Coates</a>						</strong>
						<strong>said 
						on Jun 10, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>As for the array argument: I'm pretty neutral. I don't mind typing a few extra characters.</p>
<p>S</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484ef292-7280-45fa-b3eb-764d4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8965aee8f2b19c0c77ddc679f86a3568&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Mathias&nbsp;						</strong>
						<strong>said 
						on Jun 10, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>@Fred:<br />
How would reserving "$arr = ['', '']" for future use be relevant? I don't see any way this syntax could be used in other than array creation.</br></p>
<p>Personally I'm all for this! I've always felt typing in array() is redundant as () implies a function. PHP is full of bad naming conventions, this would at least be a step in the right direction.</p>
<p>I have my doubts about replacing '=>' with ':' though. This would be a complete over-haul and not that consistent.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484f0561-8b4c-4a42-8c87-4c354834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=9e15d450570f19449ca6ca417caf65eb&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.bubblefoundry.com" rel="nofollow">Peter Robinett</a>						</strong>
						<strong>said 
						on Jun 10, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I would like to use that syntax but even nicer would be things like $arr.append(). I guess PHP would have to go the full object-oriented route for that to happen but for now I'll just admire Python's list methods: <a rel="nofollow" href="http://docs.python.org/tut/node7.html#SECTION007100000000000000000">http://docs.python.org/tut/node7.html#SECTION007100000000000000000</a></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484f5a50-069c-4932-beb3-16304834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=03477fbbb38017c0493030b233d3534f&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Krudant&nbsp;						</strong>
						<strong>said 
						on Jun 11, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>IMHO, this syntax does not add too much value to PHP or the PHP programming community. Syntax in every language is always going to be different; to those who want it so that it's simpler to learn - I have to say this is not really going to help. For those looking to make things simpler, I agree that this will be an attractive addition but creating one more alternative usage and adding it to the core language does not seem like the best approach.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484f610d-9288-4b83-9e46-16304834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=4b9f00c391e570a149f54da4593dc183&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://releod.com" rel="nofollow">releod</a>						</strong>
						<strong>said 
						on Jun 11, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I think it would be great to have this syntax enabled. I for one find myself more often then not pasting arrays between JS and PHP, and using similar syntax, would be nice!</p>
<p>While we are add it, I would love for PHP to include 1..10 style syntax as well.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484f6628-a624-4d88-8612-25374834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=9c31d1102d95104fb994ae67cd1989b6&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/tim" rel="nofollow">Tim Koschützki</a>						</strong>
						<strong>said 
						on Jun 11, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Krudant: What would you suggest instead? Simply not including it?</p>
<p>Peter Robinett: Hrm soundsi nteresting, though PHP could easily become Python then, no? :]</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484f7f00-706c-4c67-9cb9-0d054834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e4968d6d1ecdccc7ea6ddde2cd53634c&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Joost Pluijmers&nbsp;						</strong>
						<strong>said 
						on Jun 11, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>It looks cool and all but how long will it be backwards compatible? My clients won't like to pay for expensive code grinding to upgrade their code because we don't like the aestetics of the array code.</p>
<p>This is a verry fundemental change in the way most php code is formulated and will have to be backwards compatible for a long, long verry long time. Change is good, unless your active in the corporate world and your company depends on a php driven application.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484fd2b2-e66c-4a6e-b6a4-2e734834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23e1c8a0a0fd96a5d59911cfac6e9cb7&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://zarski.com" rel="nofollow">Christian</a>						</strong>
						<strong>said 
						on Jun 11, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>This addition would be huge.</p>
<p>Should also include the ability to handle associative arrays as mentioned above.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484fe2c0-8ae0-4832-a5e0-6edf4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=3d35dad83d73505d9b1f8f3b2acc8c72&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.designvsdevelop.com" rel="nofollow">Joseph LeBlanc</a>						</strong>
						<strong>said 
						on Jun 11, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I like the idea of the square bracket arrays. However, I don't write core code for PHP, so I don't know what the maintenance would take.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-485017d9-e3c4-420f-b15c-5e644834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=6d55927266b306c8c2a50503803c7727&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://robert.scaledmethod.com" rel="nofollow">Robert</a>						</strong>
						<strong>said 
						on Jun 11, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I don't really see how changing from array('red','blue','green') to ['red','green','blue'] is anything to get excited about. in fact, i'd say that it's much easier at a glance to tell that the first is an array, because its stamped across its forehead</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4850516c-81b8-4030-b347-7c6f4834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=cb57e13b63e8130e9efc693bc0d1c4ca&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/nate" rel="nofollow">Nate Abele</a>						</strong>
						<strong>said 
						on Jun 11, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>@Sean Coates & @Matthew Weier O'Phinney: Hi guys!</p>
<p>@Matthew Weier O'Phinney: Some seem to think that if we can get enough major PHP projects together in support of this idea, that we might be able to get it accepted into the core after all.  Thoughts?  One of the developers of Drupal has also come out in favor: <a rel="nofollow" href="http://drupal4hu.com/node/152.">http://drupal4hu.com/node/152.</a></p>
<p>To clarify about associative arrays, I don't think anybody is talking seriously about replacing => with : or using curly braces instead, so associative array contents would still look the same, i.e. ["foo" => "bar"].</p>
<p>@All The Sayers of Nay: No one would be forcing you to use this syntax, nor is there any discussion of removing or deprecating "array()", so please don't confuse the issue.  For those who think this is redundant, that argument is also bogus: should we throw out a better solution just because we already have a worse one that works fine?  That is the most regressive and destructive attitude you can possibly have, and it does nothing to further the growth and development of the language.</p>
<p>And need I remind you, there is precedent in JavaScript, which suffers from exactly zero of the same major issues as PHP (i.e. being horribly devoid of consistency), yet they also have two different ways of declaring arrays.</p>
<p>Also, I think the psychology surrounding this issue is interesting: very few people are vehemently against it.  Most people who are against it simply think it's not that great an idea, but they're not going out and campaigning about it.  The people who are for it, on the other hand, are really <em>really</em> for it, as you can see.  I wonder if there's a correlation between the type of programmer you are, and your preference for better-looking, more concise code and syntax constructs.  My hunch is that there's a correlation between that and how much you enjoy programming. ;-)  But that's a topic for another post, I think.</p>
<p>One final note to the people who are against this issue: either way it is decided, <b>you can't possibly lose</b>.  If this decision gets shot down again, the status quo is maintained.  If by some miracle it actually gets accepted, the old syntax will still be there.  It will not be removed or deprecated.  No one will hunt you down and hold a gun to your head, demanding that you upgrade existing code to use this syntax, or write new code with it.  In short, the status quo is maintained.</p>
<p>As far as backward-compatibility, this is no different from taking advantage of any new language feature in any new release of PHP.  You choose your lower-bound version number, and take advantage of any features from there up.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-485075a7-fd80-49cc-9b31-66c94834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=c5355acc14f265e35d2ab96a1cbdf5ea&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.fenix-solutions.com" rel="nofollow">James</a>						</strong>
						<strong>said 
						on Jun 12, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I'm fairly indifferent on this issue. Like Grant, I'd much rather see "->" kick the bucket long before I campaign for square bracket array definitions.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48515607-a250-406e-9067-74c64834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8ec2e02b0a9fac6331e94fa0fcbee305&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Spacemonkey&nbsp;						</strong>
						<strong>said 
						on Jun 12, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>An important consideration is how this will affect the future evolution of PHP as it moves further into objects, away from its initial procedural implementation. This approach that you propose was the same taken for Ruby, another language I enjoy playing (ahem!) I mean coding in. I always liked that, and wonder what arrays would look like in future PHP versions if this approach was not taken...</p>
<p>I like the proposed change, and don't think it should be such a big dealio.</p>
<p>While we're at it, can we PLEASE, PLEASE have an unless control structure? Man, that would seriously cut down on the horrid "if (not) this is not equal to that, do nothing, else do this" nonsense littering the internet.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-485190f2-7ebc-4476-8176-06474834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=548344c65b5e122d05c1865ce8a88ed4&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.SimpleWebPortal.net" rel="nofollow">Pablo Pazos Gutierrez</a>						</strong>
						<strong>said 
						on Jun 12, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I'm waiting this feature for a long time. I think it's something PHP need (among other things) to get the language to the next level. When I begin developing something from the ground with PHP it feels a lot likeI'm coding on C, now C IMHO is a low level language and I think PHP can't continue being a low level lang.</p>
<p>Development speed is not only based on the typing speed of the programmers, you code your app one time, but how many times do you (or others) read your code? that's where, I think, this is a great feature, the code is simpler to read and to understand, so you can understand what's going on in less time. I think if the code is simpler to read we can have a lower dev time, conding faster, testing faster, modifying faster, etc.</p>
<p>I think everyone can see this at a glance and now whats going on:</p>
<p>$a = [name:"Robert", lastname:"Paulson", age:42];</p>
<p>(This is the way Groovy declares it's associative arrays or mappings. BTW, Groovy is a dynamic language based on Java).</p>
<p>Cheers,<br />
Pablo Pazos Gutierrez</br><br />
www.SimpleWebPortal.net</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-485b7bbc-8c3c-4bd1-88a0-7ead4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=4da9db6c467569d181e4499a9c74384a&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.posicionamientovalencia.com" rel="nofollow">Seo Valencia</a>						</strong>
						<strong>said 
						on Jun 20, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>It is a better sintax but only that.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4865247b-ff00-45ec-b4ce-46264834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=00d595d4340c4ac04edd294f8128aed8&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://ioreader.com" rel="nofollow">Peter Goodman</a>						</strong>
						<strong>said 
						on Jun 27, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I love this syntax; however, there are some more important things I would like to see in PHP first, for example:</p>
<p>array(...)[0]<br />
(new stdClass)->...</br></p>
<p>In fact, a real change I want to see is first-class functions and classes. Unfortunately I don't think those will ever come.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48bc6ab6-02f8-4827-9c1e-3c254834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=75d7ff85af754b11664062e116e4b511&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							vlad&nbsp;						</strong>
						<strong>said 
						on Sep 01, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I would also like to have this syntax in PHP.<br />
after 18 years of C++ I am entering the world of PHP/Javascript</br><br />
and I absolutely love the dynamic nature of it.  I have been</br><br />
interested in Functional Languages and Single/Slots before</br><br />
and have been employing Boost C++ library for many of</br><br />
those features.</br></p>
<p>I think the array Syntax and JSON should be unified.<br />
Furthermore, I think that</br></p>
<p>Class syntax and Array Syntax and JSON should be unified.</p>
<p>What I find very useful and powefull to be able to manipulate<br />
Data as Data and then Data as Class Structures (including methods).</br></p>
<p>Assigning a function to an array element is extremely usefull<br />
construct.</br></p>
<p>I do not think PHP is uncapable of supporting it.  As a dynamic<br />
system PHP is well suited for it, it already can assign</br><br />
functions to variables.</br></p>
<p>So I would vote for Class+JSON+Array construct to be in PHP as soon<br />
as possible.</br></p>
<p>If there is another vote coming up or a place to express my humble<br />
opinion -- please let me know where.</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  	
				<div class="divider"></div>
		<a name="comment_form"></a>
		<p>This post is too old. We do not allow comments here anymore in order to fight spam. If you have real feedback or questions for the post, please <a href="/contact">contact us</a>.</p>
	</div></div>
	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@Jörn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
