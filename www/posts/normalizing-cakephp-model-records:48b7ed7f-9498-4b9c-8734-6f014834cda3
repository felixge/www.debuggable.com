<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Normalizing CakePHP model records &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="post">
	<h2><a href="/posts/normalizing-cakephp-model-records:48b7ed7f-9498-4b9c-8734-6f014834cda3">Normalizing CakePHP model records</a></h2>	<div class="posted-on">
		<p>Posted on 29/8/08 by 
		<a href="/felix">Felix Geisend√∂rfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Hey folks,</p>
<p>here we go with post #10 of my <a href="http://debuggable.com/posts/time-to-grow-again-or-loose-money:48ab3665-2054-4e55-b13f-0c104834cda3">30 day challenge</a> from sunny Atlanta.</p>
<p>one problem I often face when writing model functions is that I got to handle different ways of passing a model record. Imagine a simple Post hasMany Comment association that you are looping through and calling a function on.</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$out</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
<span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="re0">$posts</span> <span class="kw1">as</span> <span class="re0">$post</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="re0">$out</span><span class="br0">&#91;</span><span class="br0">&#93;</span> = <a href="http://www.php.net/sprintf"><span class="kw3">sprintf</span></a><span class="br0">&#40;</span><span class="st0">'&lt;h1&gt;%s&lt;/h1&gt;'</span>, <span class="re0">$post</span><span class="br0">&#91;</span><span class="st0">'Post'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'title'</span><span class="br0">&#93;</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="kw1">foreach</span> <span class="br0">&#40;</span><span class="re0">$post</span><span class="br0">&#91;</span><span class="st0">'Comment'</span><span class="br0">&#93;</span> <span class="kw1">as</span> <span class="re0">$comment</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$out</span><span class="br0">&#91;</span><span class="br0">&#93;</span> = <a href="http://www.php.net/sprintf"><span class="kw3">sprintf</span></a><span class="br0">&#40;</span><span class="st0">'&lt;img src=&quot;%s&quot;&gt;'</span>, Comment::<span class="me2">gravatarUrl</span><span class="br0">&#40;</span><span class="re0">$comment</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span><br />
<a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <a href="http://www.php.net/join"><span class="kw3">join</span></a><span class="br0">&#40;</span><span class="st0">&quot;<span class="es0">\n</span>&quot;</span>, <span class="re0">$out</span><span class="br0">&#41;</span>;</div>
<p>If you were now to code the Comment::gravatarUrl function and you wanted it to be fairly flexible as to what the $comment parameter is (an array, either with or without the 'Comment' key included or the $id of the record), you'd have to always code something like this:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">class</span> Comment <span class="kw2">extends</span> AppModel<span class="br0">&#123;</span><br />
&nbsp; <a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> gravatarUrl<span class="br0">&#40;</span><span class="re0">$comment</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/is_array"><span class="kw3">is_array</span></a><span class="br0">&#40;</span><span class="re0">$comment</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$comment</span> = ClassRegistry::<span class="me2">init</span><span class="br0">&#40;</span><span class="st0">'Comment'</span><span class="br0">&#41;</span>-&gt;<span class="me1">findById</span><span class="br0">&#40;</span><span class="re0">$comment</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/empty"><span class="kw3">empty</span></a><span class="br0">&#40;</span><span class="re0">$comment</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="kw2">false</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$comment</span><span class="br0">&#91;</span><span class="st0">'Comment'</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$comment</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'Comment'</span> =&gt; <span class="re0">$comment</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/sprintf"><span class="kw3">sprintf</span></a><span class="br0">&#40;</span><span class="st0">'http://www.gravatar.com/avatar/%s.jpg'</span>, <a href="http://www.php.net/md5"><span class="kw3">md5</span></a><span class="br0">&#40;</span><span class="re0">$comment</span><span class="br0">&#91;</span><span class="st0">'Comment'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'author_email'</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span></div>
<p>So in order to avoid duplicating this kind of logic throughout my apps, I decided to abstract it into a generic AppModel::normalize function that looks like this:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">class</span> AppModel <span class="kw2">extends</span> Model<span class="br0">&#123;</span><br />
&nbsp; <a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> normalize<span class="br0">&#40;</span><span class="re0">$model</span>, <span class="re0">$id</span>, <span class="re0">$query</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/empty"><span class="kw3">empty</span></a><span class="br0">&#40;</span><span class="re0">$id</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="kw2">false</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/is_array"><span class="kw3">is_array</span></a><span class="br0">&#40;</span><span class="re0">$id</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$record</span> = <span class="re0">$id</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$record</span><span class="br0">&#91;</span><span class="re0">$model</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$record</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="re0">$model</span> =&gt; <span class="re0">$record</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>!<a href="http://www.php.net/isset"><span class="kw3">isset</span></a><span class="br0">&#40;</span><span class="re0">$record</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$Model</span> = ClassRegistry::<span class="me2">init</span><span class="br0">&#40;</span><span class="re0">$model</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="re0">$record</span> = <span class="re0">$Model</span>-&gt;<span class="me1">find</span><span class="br0">&#40;</span><span class="st0">'first'</span>, am<span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="st0">'conditions'</span> =&gt; <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="re0">$model</span>.<span class="st0">'.'</span>.<span class="re0">$model</span>-&gt;<span class="me1">primaryKey</span> =&gt; <span class="re0">$id</span><span class="br0">&#41;</span>,<br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="st0">'contain'</span> =&gt; <span class="kw2">false</span>,<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#41;</span>, <span class="re0">$query</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><a href="http://www.php.net/empty"><span class="kw3">empty</span></a><span class="br0">&#40;</span><span class="re0">$record</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">return</span> <span class="kw2">false</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="kw1">return</span> <span class="re0">$record</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span></div>
<p>Usage is fairly simple. Applying the function to the behavior above will make the function look like this:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">class</span> Comment <span class="kw2">extends</span> AppModel<span class="br0">&#123;</span><br />
&nbsp; <a href="http://www.php.net/static"><span class="kw3">static</span></a> <span class="kw2">function</span> gravatarUrl<span class="br0">&#40;</span><span class="re0">$comment</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$comment</span> = AppModel::<span class="me2">normalize</span><span class="br0">&#40;</span><span class="st0">'Comment'</span>, <span class="re0">$comment</span><span class="br0">&#41;</span>;<br />
&nbsp; &nbsp; <span class="kw1">return</span> <span class="br0">&#40;</span><span class="re0">$comment</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp;&nbsp;? <a href="http://www.php.net/sprintf"><span class="kw3">sprintf</span></a><span class="br0">&#40;</span><span class="st0">'http://www.gravatar.com/avatar/%s.jpg'</span>, <a href="http://www.php.net/md5"><span class="kw3">md5</span></a><span class="br0">&#40;</span><span class="re0">$comment</span><span class="br0">&#91;</span><span class="st0">'Comment'</span><span class="br0">&#93;</span><span class="br0">&#91;</span><span class="st0">'author_email'</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; : <span class="kw2">false</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span></div>
<p>And as you can see there is also a 3rd parameter called $query that you can use to create more complex normalization rules if an $id is passed in instead of an array. Now of course this isn't perfect yet. It doesn't verify complex association structures and I spend a lot of thought on how to possibly do that. But at some point I kind of concluded that the performance implications probably wouldn't be worth it. Another thing I'd really love is if I was able to detect the name of the class the static function was called upon inside the normalize function, but so far I think PHP simply can't do it. What I mean is that I'd like to use Comment::normalize / Post::normalize etc. without having to re-define the function in each model, so if anybody has an idea I'd love to hear it!</p>
<p>Feedback as always is very welcome! Please comment!</p>
<p>HTH,<br />
-- Felix Geisend√∂rfer<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/48b7ed7f-9498-4b9c-8734-6f014834cda3"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fnormalizing-cakephp-model-records%3A48b7ed7f-9498-4b9c-8734-6f014834cda3 &amp;title=Normalizing+CakePHP+model+records';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fnormalizing-cakephp-model-records%3A48b7ed7f-9498-4b9c-8734-6f014834cda3';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fnormalizing-cakephp-model-records%3A48b7ed7f-9498-4b9c-8734-6f014834cda3&amp;title=Normalizing+CakePHP+model+records&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fnormalizing-cakephp-model-records%3A48b7ed7f-9498-4b9c-8734-6f014834cda3&amp;title=Normalizing+CakePHP+model+records';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>
	<div class="related-posts">
		<h3>(Theoretically) Related Posts</h3>
				<ul class="first">
							<li><a href="/posts/unit-testing-in-cakephp-part-1---introduction-to-unit-testing:48102610-c5d0-4398-a010-76974834cda3">Unit Testing in CakePHP Part 1 - Introduction to Unit Testing</a></li>
							<li><a href="/posts/cakephp-conference-in-chile:49482d41-58a8-46b6-a35b-6f614834cda3">CakePHP conference in Chile</a></li>
							<li><a href="/posts/cakephp-authsome-debuggable-s-xmas-gift:4b34b4e6-9ca4-4673-bea6-4776cbdd56cb">CakePHP Authsome - Debuggable&#039;s Xmas Gift</a></li>
							<li><a href="/posts/macgyver-menu-for-cakephp-whats-the-active-menu-item:480f4dd6-c044-436e-bbde-4ed8cbdd56cb">MacGyver menu for CakePHP - What&#039;s the active menu item?</a></li>
							<li><a href="/posts/new-cakephp-beta:480f4dfe-4710-431f-bf4e-4324cbdd56cb">New CakePHP Beta</a></li>
					</ul>
		<ul>
							<li><a href="/posts/learning-from-the-cakephp-source-code-part-i:480f4dd6-28d0-445e-a1dc-4ceacbdd56cb">Learning from the CakePHP source code - Part I</a></li>
							<li><a href="/posts/CakePHP_Workshop_in_Muenchen_15_16_Oktober:4a9b0368-dcfc-4ab2-b8ed-0bc1cbdd56cb">CakePHP Workshop in M√ºnchen (15-16. Oktober)</a></li>
							<li><a href="/posts/how-to-have-multiple-paginated-widgets-on-the-same-page-with-cakephp:48ad241e-b018-4532-a748-0ec74834cda3">How to have multiple paginated widgets on the same page with CakePHP</a></li>
							<li><a href="/posts/agile-web-development-with-cakephp:480f4dd5-c234-445a-b907-4876cbdd56cb">Agile web development (with CakePHP)</a></li>
							<li><a href="/posts/screencast-using-vendor-branching-and-cakephp:480f4dd6-6cac-44cb-b685-4d6bcbdd56cb">Screencast #1: Using vendor branching and CakePHP</a></li>
					</ul>
	</div>
	<div class="clear">&nsbp;</div>

			<p>You can <a href="#comment_form">skip to the end</a> and add a comment.</p>
	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/normalizing-cakephp-model-records:48b7ed7f-9498-4b9c-8734-6f014834cda3">13 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/normalizing-cakephp-model-records:48b7ed7f-9498-4b9c-8734-6f014834cda3#CommentAddForm">Add Comment</a>	</div>
	<div class="post_comments">
	<div class="clear"></div>
									<div id="comment-48b7ff38-23a0-4534-938c-3d664834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8185c9ddb4f67c42a558bfe5557b9eea&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.pseudocoder.com" rel="nofollow">Matt Curry</a>						</strong>
						<strong>said 
						on Aug 29, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hey Felix,<br />
I was wondering why you made this a static method?  Since Comment extends AppModel couldn't you just do $this->normalize and not have to pass in the model name?</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48b8077d-f460-40b5-bc7c-4fa14834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=9c31d1102d95104fb994ae67cd1989b6&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/tim" rel="nofollow">Tim Kosch√ºtzki</a>						</strong>
						<strong>said 
						on Aug 29, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Matt Curry: You are very right. However, by making it static you can also use it in views - when you want to create normalized versions of your data.</p>
<p>Imagine simple creation of links, with $comment['Comment']['id'] and $comment['id'].</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48b81115-4978-4442-a6a4-667d4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=59066e62dbeff30f4af60fb899730b96&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Dardo Sordi&nbsp;						</strong>
						<strong>said 
						on Aug 29, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>> What I mean is that I'd like to use Comment::normalize / Post::normalize etc.<br />
> without having to re-define the function in each model, so if anybody has an idea</br><br />
> I'd love to hear it!</br></p>
<p>As of PHP 5.3.0 you can use late static binding: <a rel="nofollow" href="http://us.php.net/oop5.late-static-bindings">http://us.php.net/oop5.late-static-bindings</a></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48b81274-d87c-4b45-9593-4d254834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=669144d1ab0a861af5d54175371bc586&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://mark-story.com" rel="nofollow">Mark Story</a>						</strong>
						<strong>said 
						on Aug 29, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Felix, I think in PHP 5.3 you can use Late Static Binding to get the name of the class you are in with __CLASS__.  So something like </p>
<p>static function getClass() {<br />
   return __CLASS__</br><br />
}</br></p>
<p>static::getClass();  would get your class name.  But have to wait for PHP 5.3 or PHP 6 for cool new toys.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48b812d3-b780-470e-ab27-27da4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=669144d1ab0a861af5d54175371bc586&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://mark-story.com" rel="nofollow">Mark Story</a>						</strong>
						<strong>said 
						on Aug 29, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Dardo Sordi: beat me to it, your comment hadn't been posted when I first read the article :)</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48b81f71-6f9c-4b79-8001-1c744834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/felix" rel="nofollow">Felix Geisend√∂rfer</a>						</strong>
						<strong>said 
						on Aug 29, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Dardo Sordi / Mark Story: Yes, I had looked at that before - but I want PHP 5.2 to work for now : ). I'm really excited about 5.3 so, looks like its going to be an amazing release.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48b82464-0618-4c5b-a104-3d984834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=6e333c5051ee580b75d9a20db899098d&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://rafaelbandeira3.wordpress.com" rel="nofollow">rafaelbandeira3</a>						</strong>
						<strong>said 
						on Aug 29, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>It's a nice approach.</p>
<p>Just a update:<br />
'conditions' => array($model.'.id' => $id)</br><br />
Should be</br><br />
'conditions' => array($model.'.' .$Model->primaryKey => $id)</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48b82e13-bd2c-4491-bd55-25eb4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e7b27313f932222f22beaa3686746bd3&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Piccolo Principe&nbsp;						</strong>
						<strong>said 
						on Aug 29, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>But you are using $this in a static method:<br />
>  static function gravatarUrl($comment) {</br><br />
>    if (!is_array($comment))) {</br><br />
>      $comment = $this->findById($comment);</br><br />
>    }</br><br />
Isn't that a violation of [strict] standards?</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48b8f31e-d420-402d-83c9-0f3a4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=c3c5907d2d49cbe8f230115d022332a0&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Thomas&nbsp;						</strong>
						<strong>said 
						on Aug 30, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>fascinating, that you are realy using objects from the model-level in templates. and again, against its purpose by defintion.<br />
it's a realy interessesting way of work. and a violation of the mvc-pattern of course. but maybe you can't go to abstract on php and had to work like this.</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48b934be-3d00-4e98-bc70-446c4834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.debuggable.com/felix" rel="nofollow">Felix Geisend√∂rfer</a>						</strong>
						<strong>said 
						on Aug 30, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Matt Curry / Thomas: normalize is static because the methods build on top of it are static and used inside views. Normalize itself *is not* meant to be used inside of views.</p>
<p>Piccolo Principe: Thanks for catching that. Was an oversight when coming up with the example.</p>
<p>rafaelbandeira3: Good idea, put it in.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48b978a5-7230-40a6-b9ea-26224834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=6e333c5051ee580b75d9a20db899098d&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://rafaelbandeira3.wordpress.com" rel="nofollow">rafaelbandeira3</a>						</strong>
						<strong>said 
						on Aug 30, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Thomas: Show me the law please...<br />
I'm dieing to see this...</br></p>
<p>Where, and in what specification did you that it wasn't *"ALLOWED"*?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48be4781-32d0-4840-9018-6cbf4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=722c9aaba60e4a528647af3895f2ac84&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Jaik&nbsp;						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Is it me or do you have a superfluous 'return' on line 5 in the last block of code?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48be8ec0-1f74-4e94-90be-05ef4834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/felix" rel="nofollow">Felix Geisend√∂rfer</a>						</strong>
						<strong>said 
						on Sep 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Jaik: Nice catch, fixed.</p>
				</div>
				<div class="clear"></div>
							</div>
	  	
				<div class="divider"></div>
		<a name="comment_form"></a>
		<p>This post is too old. We do not allow comments here anymore in order to fight spam. If you have real feedback or questions for the post, please <a href="/contact">contact us</a>.</p>
	</div></div>
	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@J√∂rn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
