<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Composing Methods: Introduce Explaining Variable &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="post">
	<h2><a href="/posts/composing-methods-introduce-explaining-variable:480f4dfe-23f4-4fa4-b586-413fcbdd56cb">Composing Methods: Introduce Explaining Variable</a></h2>	<div class="posted-on">
		<p>Posted on 2/7/07 by 
		<a href="/tim">Tim Kosch√ºtzki</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/tim_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p><i>Introduce Explaining Variable</i></p>
<p> <strong>When you have a complicated expression that clutters up your code, introduce temporary variables for parts of the expression so the expression itself is readable again.</strong></p>
<h1>Motivation</h1>
<p> Expressions can become very complex and hard to read. In such a circumstance temporary variables can be very helpful to maintain the readability of your code.</p>
<p> <i>Introduce Explaining Variable</i> is particularly useful with long if-statements. You can take each condition, introduce an explaining variable and the conditional logic will read very well.<br />
 Another occasion is a long algorithmn where each step in the calculation can be explained with a well-named temporary variable.</p>
<p> If you ask me you should prefer <a href="http://php-coding-practices.com/refactoring/composing-methods/how-to-compose-methods-the-extract-method-refactoring/">Extract Method</a> if you can, because more smaller methods are usually more readable and (re-)usable. However, there are times when Extract method doesn't work, because you the code is too cluttered up. In such a case you should use <i>Introduce Explaining Variable</i><br />
 to see what's going in the code. Then you can decide whether Extract Method is the way to go.</p>
<h1>Mechanics</h1>
<p> The mechanics of <i>Introduce Explaining Variable</i> are very simple:</p>
<ol>
<li>Declare a temporary variable and set it to the result of a part of the complex expression.</li>
<li>Replace the result part of the expression with your new temp.</li>
<li>Repeat for other parts of the expression.</li>
</ol>
<h1>Example Code</h1>
<p> Okay we start with a calculation for a fictive price of an item. It could look something along the lines of the following:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">function</span> price<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp;&nbsp;<span class="co1">// price is base price - quantity discount + extra fee</span><br />
&nbsp;&nbsp;<span class="kw1">return</span> <span class="re0">$this</span>-&gt;<span class="me1">quantity</span> * <span class="re0">$this</span>-&gt;<span class="me1">item_price</span> -<br />
&nbsp;&nbsp;&nbsp; <a href="http://www.php.net/max"><span class="kw3">max</span></a><span class="br0">&#40;</span><span class="nu0">0</span>, <span class="re0">$this</span>-&gt;<span class="me1">quantity</span> - <span class="nu0">200</span><span class="br0">&#41;</span> * <span class="re0">$this</span>-&gt;<span class="me1">item_price</span> * <span class="nu0">0.08</span> +<br />
&nbsp;&nbsp;&nbsp; <a href="http://www.php.net/min"><span class="kw3">min</span></a><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">quantity</span> * <span class="re0">$this</span>-&gt;<span class="me1">item_price</span> * <span class="nu0">0.1</span>, <span class="nu0">100.0</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span></div>
<p>You probably agree it's very hard to read. We are in dare need of a comment to maintain readability. Without the comment, not only<br />
your colleagues would get lost in the code, but so would you. :) We deicde we can introduce a temp for the base price to start things off:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">function</span> price<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="co1">// price is base price - quantity discount + extra fee</span><br />
&nbsp; <span class="re0">$basePrice</span> = <span class="re0">$this</span>-&gt;<span class="me1">quantity</span> * <span class="re0">$this</span>-&gt;<span class="me1">item_price</span>;<br />
&nbsp; <span class="kw1">return</span> &nbsp;<span class="re0">$basePrice</span> -<br />
&nbsp; &nbsp; <a href="http://www.php.net/max"><span class="kw3">max</span></a><span class="br0">&#40;</span><span class="nu0">0</span>, <span class="re0">$this</span>-&gt;<span class="me1">quantity</span> - <span class="nu0">200</span><span class="br0">&#41;</span> * <span class="re0">$this</span>-&gt;<span class="me1">item_price</span> * <span class="nu0">0.08</span> +<br />
&nbsp; &nbsp; <a href="http://www.php.net/min"><span class="kw3">min</span></a><span class="br0">&#40;</span><span class="re0">$basePrice</span> * <span class="nu0">0.1</span>, <span class="nu0">100.0</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span></div>
<p>Cool, a bit better so far. Now let's go for the quantity discount:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">function</span> price<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="co1">// price is base price - quantity discount + extra fee</span><br />
&nbsp; <span class="re0">$basePrice</span> = <span class="re0">$this</span>-&gt;<span class="me1">quantity</span> * <span class="re0">$this</span>-&gt;<span class="me1">item_price</span>;<br />
&nbsp; <span class="re0">$quantityDiscount</span> = <a href="http://www.php.net/max"><span class="kw3">max</span></a><span class="br0">&#40;</span><span class="nu0">0</span>, <span class="re0">$this</span>-&gt;<span class="me1">quantity</span> - <span class="nu0">200</span><span class="br0">&#41;</span> * <span class="re0">$this</span>-&gt;<span class="me1">item_price</span> * <span class="nu0">0.08</span>;<br />
&nbsp; <span class="kw1">return</span> &nbsp;<span class="re0">$basePrice</span> - <span class="re0">$quantityDiscount</span> + <a href="http://www.php.net/min"><span class="kw3">min</span></a><span class="br0">&#40;</span><span class="re0">$basePrice</span> * <span class="nu0">0.1</span>, <span class="nu0">100.0</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span></div>
<p>Finally, the extra fee (whatever it is, it is evil:p):</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">function</span> price<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="re0">$basePrice</span> = <span class="re0">$this</span>-&gt;<span class="me1">quantity</span> * <span class="re0">$this</span>-&gt;<span class="me1">item_price</span>;<br />
&nbsp; <span class="re0">$quantityDiscount</span> = <a href="http://www.php.net/max"><span class="kw3">max</span></a><span class="br0">&#40;</span><span class="nu0">0</span>, <span class="re0">$this</span>-&gt;<span class="me1">quantity</span> - <span class="nu0">200</span><span class="br0">&#41;</span> * <span class="re0">$this</span>-&gt;<span class="me1">item_price</span> * <span class="nu0">0.08</span>;<br />
&nbsp; <span class="re0">$extraFee</span> = <a href="http://www.php.net/min"><span class="kw3">min</span></a><span class="br0">&#40;</span><span class="re0">$basePrice</span> * <span class="nu0">0.1</span>, <span class="nu0">100.0</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="kw1">return</span> &nbsp;<span class="re0">$basePrice</span> - <span class="re0">$quantityDiscount</span> + <span class="re0">$extraFee</span>;<br />
<span class="br0">&#125;</span></div>
<p>Notice that with our last refactoring the code speaks for itself and we should remove the comment altogether, as otherwise it would be<br />
<a href="http://php-coding-practices.com/agile-software-development/problems-with-repeatitive-source-code-or-better-dont-repeat-yourself/">Duplicate knowledge</a>.</p>
<p>We could have gone for <a href="http://php-coding-practices.com/refactoring/composing-methods/how-to-compose-methods-the-extract-method-refactoring/">Extract Method</a> as well,<br />
because small methods for all parts of the price expression would be very neat in an object environment. Why? Because they would be visible to all other methods of the class and can be used there. Initially, they would be private,<br />
but you can always relax that later to make them visible to other objects as well.</p>
<p>Here is what this computation would look like with <a href="http://php-coding-practices.com/refactoring/composing-methods/how-to-compose-methods-the-extract-method-refactoring/">Extract Method</a>:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">function</span> price<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="kw1">return</span> &nbsp;<span class="re0">$this</span>-&gt;<span class="me1">basePrice</span><span class="br0">&#40;</span><span class="br0">&#41;</span> - <span class="re0">$this</span>-&gt;<span class="me1">quantityDiscount</span><span class="br0">&#40;</span><span class="br0">&#41;</span> + <span class="re0">$this</span>-&gt;<span class="me1">extraFee</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span><br />
<br />
<span class="kw2">function</span> basePrice<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="kw1">return</span> <span class="re0">$this</span>-&gt;<span class="me1">quantity</span> * <span class="re0">$this</span>-&gt;<span class="me1">item_price</span>;<br />
<span class="br0">&#125;</span><br />
<br />
<span class="kw2">function</span> quantityDiscount<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="kw1">return</span> <a href="http://www.php.net/max"><span class="kw3">max</span></a><span class="br0">&#40;</span><span class="nu0">0</span>, <span class="re0">$this</span>-&gt;<span class="me1">quantity</span> - <span class="nu0">200</span><span class="br0">&#41;</span> * <span class="re0">$this</span>-&gt;<span class="me1">item_price</span> * <span class="nu0">0.08</span>;<br />
<span class="br0">&#125;</span><br />
<br />
<span class="kw2">function</span> extraFee<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="kw1">return</span> <a href="http://www.php.net/min"><span class="kw3">min</span></a><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">basePrice</span><span class="br0">&#40;</span><span class="br0">&#41;</span> * <span class="nu0">0.1</span>, <span class="nu0">100.0</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span></div>
<p>Looking good yes? For this example Extract method is indeed better, but I couldn't think of anything better to explain <i>Introduce Explaining Variable</i> to you. :) Perhaps some kind of conditional logic to check whether we are on IE or Mozilla would have been nice? Argh, too bad. :)</p>
<p>Cheers!</p>
<p><img style="display: none;" src="http://debuggable.com/posts/tick/480f4dfe-23f4-4fa4-b586-413fcbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fcomposing-methods-introduce-explaining-variable%3A480f4dfe-23f4-4fa4-b586-413fcbdd56cb &amp;title=Composing+Methods%3A+Introduce+Explaining+Variable';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Fcomposing-methods-introduce-explaining-variable%3A480f4dfe-23f4-4fa4-b586-413fcbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fcomposing-methods-introduce-explaining-variable%3A480f4dfe-23f4-4fa4-b586-413fcbdd56cb&amp;title=Composing+Methods%3A+Introduce+Explaining+Variable&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Fcomposing-methods-introduce-explaining-variable%3A480f4dfe-23f4-4fa4-b586-413fcbdd56cb&amp;title=Composing+Methods%3A+Introduce+Explaining+Variable';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>
	<div class="related-posts">
		<h3>(Theoretically) Related Posts</h3>
				<ul class="first">
							<li><a href="/posts/composing-methods-replace-temp-with-query:480f4dfe-bd20-435d-8a18-4495cbdd56cb">Composing Methods: Replace Temp With Query</a></li>
							<li><a href="/posts/how-to-execute-only-specific-test-methods-in-cakephp-unit-tests:4858fa7b-7194-4652-9c7f-47784834cda3">How To Execute Only Specific Test Methods in CakePHP Unit Tests</a></li>
							<li><a href="/posts/composing-methods-remove-assignments-to-parameters:480f4dfe-5bd4-4ef7-8c05-4b5ecbdd56cb">Composing Methods: Remove Assignments to Parameters</a></li>
							<li><a href="/posts/composing-methods-substitute-algorithmn:480f4dfe-30e4-407a-97bf-468dcbdd56cb">Composing Methods: Substitute Algorithmn</a></li>
							<li><a href="/posts/composing-methods-inline-temp:480f4dfe-73c0-49ec-ad00-4ec6cbdd56cb">Composing Methods: Inline Temp</a></li>
					</ul>
		<ul>
							<li><a href="/posts/composing-methods-split-temporary-variable:480f4dfe-1e28-4e32-b4b3-458ccbdd56cb">Composing Methods: Split Temporary Variable</a></li>
							<li><a href="/posts/how-to-compose-methods-the-extract-method-refactoring:480f4dfe-c0d8-48ac-9d91-4b47cbdd56cb">How To Compose Methods: The Extract Method Refactoring</a></li>
					</ul>
	</div>
	<div class="clear">&nsbp;</div>

			<p>You can <a href="#comment_form">skip to the end</a> and add a comment.</p>
	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/composing-methods-introduce-explaining-variable:480f4dfe-23f4-4fa4-b586-413fcbdd56cb">1 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/composing-methods-introduce-explaining-variable:480f4dfe-23f4-4fa4-b586-413fcbdd56cb#CommentAddForm">Add Comment</a>	</div>
	<div class="post_comments">
	<div class="clear"></div>
									<div id="comment-480f4e01-0c10-4a49-b117-46eecbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d41d8cd98f00b204e9800998ecf8427e&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.developercast.com/2007/07/02/php-coding-practicescom-composing-methods-introduce-explaining-variable/" rel="nofollow">developercast.com &raquo; PHP-Coding-Practices.com: Composing Me</a>						</strong>
						<strong>said 
						on Jul 02, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>[...] the PHP-Coding_Practices.com site, Tim Koschuetzki has posted an interesting suggestion for developers working with long expressions to make thing simpler - substituting temporary [...]</p>
				</div>
				<div class="clear"></div>
							</div>
	  	
				<div class="divider"></div>
		<a name="comment_form"></a>
		<p>This post is too old. We do not allow comments here anymore in order to fight spam. If you have real feedback or questions for the post, please <a href="/contact">contact us</a>.</p>
	</div></div>
	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@J√∂rn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
