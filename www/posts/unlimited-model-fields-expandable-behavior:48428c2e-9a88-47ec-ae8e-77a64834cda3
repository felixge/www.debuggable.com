<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Unlimited Model fields - Expandable Behavior &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="post">
	<h2><a href="/posts/unlimited-model-fields-expandable-behavior:48428c2e-9a88-47ec-ae8e-77a64834cda3">Unlimited Model fields - Expandable Behavior</a></h2>	<div class="posted-on">
		<p>Posted on 1/6/08 by 
		<a href="/felix">Felix Geisendörfer</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/felix_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p><img class="center" src="http://static.thinkingphp.org/img/expandable.jpg"></p>
<p>Hey folks,</p>
<p>lets say you have a model called Upload. Your Upload model has some generic fields like this:</p>
<p><img src="http://static.thinkingphp.org/img/expandable.upload.model.jpg"></p>
<h3>The problem</h3>
<p>However, you would like to store different types of meta information for different kinds of uploads. Examples:</p>
<p><strong>Images:</strong></p>
<ul>
<li>Width</li>
<li>Height</li>
<li>Quality (if jpg)</li>
<li>Camera</li>
<li>Lens</li>
<li>Focus</li>
</ul>
<p><strong>Videos:</strong></p>
<ul>
<li>FPS</li>
<li>Bitrate</li>
</ul>
<p><strong>PDFs:</strong></p>
<ul>
<li>Author</li>
<li>Description</li>
</ul>
<p><strong>ZIPs:</strong></p>
<ul>
<li>Original Size</li>
<li>File Count</li>
<li>Compression Rate</li>
</ul>
<h3>The solution</h3>
<p>So what are you going to do? Add 13 fields to your uploads table? Probably not. It is time to <a href="http://en.wikipedia.org/wiki/Database_normalization">normalize</a> things:</p>
<p><img src="http://static.thinkingphp.org/img/expandable.upload_field.model.jpg"></p>
<p>Ok nothing fancy so far. CakePHP's associations make it easy to deal with it. However, working with this setup can be a little inconvenient at times. Everytime you fetch a set of records from Upload, you will have to manually extract the meta information from the associated UploadField records:</p>
<pre class="terminal">-
    Upload:
        id: 1
        name: funny.mov
        type: video/quicktime
        bytes: 20480
        created: 2008-06-01 14:47:23
    UploadField:
        -
            id: 1
            upload_id: 1
            key: <em>fps</em>
            val: 26
        -
            id: 2
            upload_id: 1
            key: <em>bitrate</em>
            val: 376
</pre>
<p>So everytime you want to access your videos bitrate you will have to search your UploadField records for the 'bitrate' key. How annoying. But worry not, Expandable comes to rescue. With the Expandable behavior activated on your Upload model, your resultset will look like this:</p>
<pre class="terminal">-
    Upload:
        id: 1
        name: funny.mov
        type: video/quicktime
        bytes: 20480
        created: 2008-06-01 14:47:23
        <em>fps: 26</em>
        <em>bitrate: 376</em>
    UploadField:
        -
            id: 1
            upload_id: 1
            key: fps
            val: 26
        -
            id: 2
            upload_id: 1
            key: bitrate
            val: 376
</pre>
<p>But it comes even better. Expandable also makes it dead-simple to create / update UploadField records. This is how it works:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$this</span>-&gt;<span class="me1">Upload</span>-&gt;<span class="me1">save</span><span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><br />
&nbsp; <span class="st0">'id'</span> =&gt; <span class="nu0">1</span>,<br />
&nbsp; <span class="st0">'fps'</span> =&gt; <span class="nu0">30</span>,<br />
&nbsp; <span class="st0">'rating'</span>= &gt; <span class="nu0">7</span>/<span class="nu0">10</span>,<br />
<span class="br0">&#41;</span><span class="br0">&#41;</span>;</div>
<p>Without you having to do anything, the following happens to your uploads resultset:</p>
<pre class="terminal">-
    Upload:
        id: 1
        name: funny.mov
        type: video/quicktime
        bytes: 20480
        created: 2008-06-01 14:47:23
        fps: <em>30</em>
        bitrate: 376
        <em>rating: 0.7</em>
    UploadField:
        -
            id: 1
            upload_id: 1
            key: fps
            val: <em>30</em>
        -
            id: 2
            upload_id: 1
            key: bitrate
            val: 376
        -
            id: 3
            upload_id: 1
            key: <em>rating</em>
            val: <em>0.7</em>
</pre>
<p>As you can see the <strong>fps</strong> UploadField value has been updated and a new record with the key <strong>rating</strong> has been created. So this means you can use the CakePHP form helper to create different editors for your uploads like this:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$form</span>-&gt;<span class="me1">input</span><span class="br0">&#40;</span><span class="st0">'Upload.fps'</span><span class="br0">&#41;</span><br />
<span class="re0">$form</span>-&gt;<span class="me1">input</span><span class="br0">&#40;</span><span class="st0">'Upload.bitrate'</span><span class="br0">&#41;</span><br />
<span class="re0">$form</span>-&gt;<span class="me1">input</span><span class="br0">&#40;</span><span class="st0">'Upload.rating'</span>, <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'options'</span> =&gt; <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="nu0">1</span>, <span class="nu0">2</span>, <span class="nu0">3</span>, <span class="nu0">4</span>, <span class="nu0">5</span>, <span class="nu0">6</span>, <span class="nu0">7</span>, <span class="nu0">8</span>, <span class="nu0">9</span>, <span class="nu0">10</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;</div>
<p>And even so none of those fields really exist on the Upload model, everything will work just as if they would ; ).</p>
<h3 id="how-to-use">How to use it</h3>
<ol>
<li>Download the behavior from: <a href="http://github.com/felixge/debuggable-scraps/tree/master/cakephp/behaviors/expandable">the debuggable Scraps repository at github</a></li>
<li>Place the <em>expandable.php</em> file into /app/models/behaviors/expandable.php</li>
<li><strong>Optional:</strong> Place the <em>expandable.test.php</em> file into /app/tests/cases/behaviors/expandable.test.php</li>
<li>Create a table and model for UploadField with at least the fields shown above. (replace Upload with the name of your base model)</li>
<li>Setup a Upload hasMany UploadField and UploadField belongsTo Upload association</li>
<li>Add this to your Upload model:</li>
</ol>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">class</span> Upload <span class="kw2">extends</span> AppModel<span class="br0">&#123;</span><br />
&nbsp; <span class="kw2">var</span> <span class="re0">$actsAs</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="st0">'Expandable'</span><span class="br0">&#41;</span>;<br />
<span class="br0">&#125;</span></div>
<p>That is it. You are ready to go. Enjoy the magic ; ).</p>
<table class="pro-contra">
<tr>
<th class="pro">Pro</th>
<th class="contra">Contra</th>
</tr>
<tr>
<td>
<ul>
<li>Easy to use</li>
<li>Saves db space</li>
<li>Mostly leverages existing CakePHP magic</li>
</ul>
</td>
<td style="vertical-align: top;">
<ul>
<li>(Small) Performance hit while updating meta data</li>
</ul>
</td>
</tr>
</table>
<p>Please let me know what you think about this approach!</p>
<p>-- Felix Geisendörfer aka the_undefined<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/48428c2e-9a88-47ec-ae8e-77a64834cda3"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Funlimited-model-fields-expandable-behavior%3A48428c2e-9a88-47ec-ae8e-77a64834cda3 &amp;title=Unlimited+Model+fields+-+Expandable+Behavior';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Funlimited-model-fields-expandable-behavior%3A48428c2e-9a88-47ec-ae8e-77a64834cda3';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Funlimited-model-fields-expandable-behavior%3A48428c2e-9a88-47ec-ae8e-77a64834cda3&amp;title=Unlimited+Model+fields+-+Expandable+Behavior&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Funlimited-model-fields-expandable-behavior%3A48428c2e-9a88-47ec-ae8e-77a64834cda3&amp;title=Unlimited+Model+fields+-+Expandable+Behavior';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>
	<div class="related-posts">
		<h3>(Theoretically) Related Posts</h3>
				<ul class="first">
							<li><a href="/posts/using-generatefields-fix-fields-of-the-type-date:480f4dd5-1410-4124-86b2-4f0ccbdd56cb">Using generateFields() + Fix fields of the type &#039;date&#039;</a></li>
							<li><a href="/posts/making-error-handling-for-modelsave-more-beautiful-in-cakephp:480f4dd6-7110-4706-8230-4a97cbdd56cb">Making error handling for Model::save more beautiful in CakePHP</a></li>
							<li><a href="/posts/how-to-do-group-by-conditions-in-model-find()-calls:483fdc1c-8454-4593-a55e-37244834cda3">How to do Group By conditions in Model find() calls in the CakePHP RC1</a></li>
							<li><a href="/posts/how-to-properly-create-a-model-instance-manually:480f4dd6-4424-4c89-9564-4647cbdd56cb">How to properly create a Model instance manually</a></li>
							<li><a href="/posts/making-two-form-fields-required-to-match-each-other:480f4dfd-5c40-4c1d-ad0d-42b6cbdd56cb">Making two form fields required to match each other</a></li>
					</ul>
		<ul>
							<li><a href="/posts/modelsave-now-returns-an-array:480f4dd6-0a7c-4026-ad5a-49c8cbdd56cb">Model::save() now returns an array!</a></li>
							<li><a href="/posts/how-to-put-combined-fields-into-cakephps-model-generatelist:480f4dfe-7dec-4b43-bc7c-4258cbdd56cb">How to put Combined Fields Into CakePHP&#039;s Model-&gt;generateList()</a></li>
							<li><a href="/posts/lookupable-behavior:48b93b4a-eaf8-4fc8-85ad-6d454834cda3">Lookupable Behavior</a></li>
							<li><a href="/posts/validating-fields-with-costum-functions:480f4dd5-af28-4979-ab39-493bcbdd56cb">Validating fields with custom validateField() functions</a></li>
							<li><a href="/posts/update-to-the-rss-feed-parser-model:480f4dd5-0988-4bc8-98a8-455ecbdd56cb">Update to the RSS feed parser Model</a></li>
					</ul>
	</div>
	<div class="clear">&nsbp;</div>

			<p>You can <a href="#comment_form">skip to the end</a> and add a comment.</p>
	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/unlimited-model-fields-expandable-behavior:48428c2e-9a88-47ec-ae8e-77a64834cda3">29 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/unlimited-model-fields-expandable-behavior:48428c2e-9a88-47ec-ae8e-77a64834cda3#CommentAddForm">Add Comment</a>	</div>
	<div class="post_comments">
	<div class="clear"></div>
									<div id="comment-4842b8b3-2134-4893-9f54-165a4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=6cacda6f9cdac54d60f51d6190631fd8&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							nao&nbsp;						</strong>
						<strong>said 
						on Jun 01, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I was confronted to similar problem and my first idea was to create more specific table which inherit main table, the all manage be a behavior.<br />
But to complex to build for me!</br></p>
<p>Your solution is more flexible, so it accommodate me ^^</p>
<p>Useful contribution! Thanks!</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4842c87f-d8e8-44c1-b1de-64104834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=dc51f58249aa6abec7e79abff23d294e&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							GreyCells&nbsp;						</strong>
						<strong>said 
						on Jun 01, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I like the concept, Felix, but the implementation appears to leave you a little exposed. The standard model validation would deal with many of the value issues, but only if the field is specified (you'd have to set allowEmpty for all expandable fields). So the conditional mandatory (i.e. if it is file type x, then fields a,b and c are required) validation would get a little interesting.</p>
<p>Of greater concern though is the ability to 'inject' a whole load of expandable fields direct from a form - i.e. if the fields are not specified in the base model, then they are automagically added to the expandable model - not sure this is a good thing. Whitelisting might help, but perhaps a mandatory 'expandableFields' array in the behavior setup would be better?</p>
<p>An alternative (for fields that will never be required in a where clause) is to serialize the expandable fields into a single text field - also eminently doable with a bit of cake magic.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4842c9fc-dac4-409e-9a26-35a24834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=f4112f3023c643bf2f7b32c9c5dcfcba&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://cakebaker.42dh.com" rel="nofollow">Daniel Hofstetter</a>						</strong>
						<strong>said 
						on Jun 01, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hm, why don't you create a model for each type (PDF, Image, etc), each with a hasOne association to Upload (would probably need a different name in this new context)?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4842d261-682c-46fb-b61d-170b4834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.debuggable.com/felix" rel="nofollow">Felix Geisendörfer</a>						</strong>
						<strong>said 
						on Jun 01, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>GreyCells: Set up all your different rules for different upload types in an array and then apply the one you are interested in to Model::validates in the beforeValidate callback based on the data[Upload][type] key. I will add a key to limit fields at some point, or do you have a patch for me ; )?</p>
<p>Daniel: Simplicity and Flexibility. This behavior helped to simplify a 14 model app to a ~7 model one which had a very positive impact on the simplicity of things ; ).</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4842d3ef-bbb8-4e5b-a439-75bc4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=72b7bdc2ea7ade2d95f3396ded0a40ec&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							leo&nbsp;						</strong>
						<strong>said 
						on Jun 01, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hey Felix,<br />
think there was too much copy & paste with the test. ;) the class should be named ExpandableBehaviorTest instead of ContainableBehaviorTest, shouldn't it?</br><br />
Thanks anyway!</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4842d60b-d54c-4471-a277-7d334834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/felix" rel="nofollow">Felix Geisendörfer</a>						</strong>
						<strong>said 
						on Jun 01, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>leo: There is no such thing as too much copy & paste ; p. Anyway, thanks for catching this - fixed.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4842ea86-ec74-4394-8584-150f4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=dc51f58249aa6abec7e79abff23d294e&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							GreyCells&nbsp;						</strong>
						<strong>said 
						on Jun 01, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>@Felix - yes, that would be the approach I would expect to use - despite all the advances in the model validation in 1.2, I still seem to have an awful lot of stuff in Model::before/validates()... (that's where I put a lot of my business validation) :)</p>
<p>Untested (shock, horror!), but this is what I had in mind:</p>
<p>--- expandable.php.felix        2008-06-01 19:20:58.000000000 +0100<br />
+++ expandable.php      2008-06-01 19:18:57.000000000 +0100</br><br />
@@ -75,21 +75,25 @@</br><br />
         $fields = array_diff_key($Model->data[$Model->alias], $schema);</br><br />
         $id = $Model->id;</br><br />
         foreach ($fields as $key => $val) {</br><br />
-            $field = $Model->{$with}->find('first', array(</br><br />
-                'fields' => array($with.'.id'),</br><br />
-                'conditions' => array($with.'.'.$foreignKey => $id, $with.'.key' => $key),</br><br />
-                'recursive' => -1,</br><br />
-            ));</br><br />
-            $Model->{$with}->create(false);</br><br />
-            if ($field) {</br><br />
-                $Model->{$with}->set('id', $field[$with]['id']);</br><br />
-            } else {</br><br />
-                $Model->{$with}->set(array($foreignKey => $id, 'key' => $key));</br><br />
-            }</br><br />
-            $Model->{$with}->set('val', $val);</br><br />
-            $Model->{$with}->save();</br><br />
+               if ( !isset($expandableFields)</br><br />
+                       || in_array($key, $expandableFields)</br><br />
+                       ) {</br><br />
+                   $field = $Model->{$with}->find('first', array(</br><br />
+                       'fields' => array($with.'.id'),</br><br />
+                       'conditions' => array($with.'.'.$foreignKey => $id, $with.'.key' => $key),</br><br />
+                       'recursive' => -1,</br><br />
+                   ));</br><br />
+                   $Model->{$with}->create(false);</br><br />
+                   if ($field) {</br><br />
+                       $Model->{$with}->set('id', $field[$with]['id']);</br><br />
+                   } else {</br><br />
+                       $Model->{$with}->set(array($foreignKey => $id, 'key' => $key));</br><br />
+                   }</br><br />
+                   $Model->{$with}->set('val', $val);</br><br />
+                   $Model->{$with}->save();</br><br />
+               }</br><br />
         }</br><br />
     }</br><br />
 }</br></p>
<p>i.e. if there is an array called 'expandableFields' (or an empty array?) in the behavior settings, then the field name must exist in that array, otherwise continue as before.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4842f54c-cb50-436b-81a4-14554834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=a34131cd6fc7ad882f4d9fd3e7fc6ba3&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://realm3.com" rel="nofollow">Brian D.</a>						</strong>
						<strong>said 
						on Jun 01, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I've used this approach before (just not with CakePHP) and in retrospect I think that, unless it's absolutely necessary, it's usually VBI ("Very Bad Idea"). This approach works well with some cases, but it's definitely one of those approaches that one must use caution in implementation.</p>
<p>There's a great thread on this on the NYPHP mailing list (I asked a question about it) if anyone is interested in reading other opinions. The thread can be read here:</p>
<p><a rel="nofollow" href="http://www.mail-archive.com/talk@lists.nyphp.org/msg02145.html">http://www.mail-archive.com/talk@lists.nyphp.org/msg02145.html</a></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4842f5fb-74a0-43a1-9beb-4cdd4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=4471a0311f54800bfb38ea0cddffe090&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.raymondjavaxx.com" rel="nofollow">Ramon</a>						</strong>
						<strong>said 
						on Jun 01, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>It's like an EAV data model but with two tables.<br />
<a rel="nofollow" href="http://en.wikipedia.org/wiki/Entity-Attribute-Value_model">http://en.wikipedia.org/wiki/Entity-Attribute-Value_model</a></br></p>
<p>Felix: does it delete the meta records automatically when you delete the entity?</p>
<p>Thanks</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4842fbe3-81d0-46ed-992d-7eb64834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.debuggable.com/felix" rel="nofollow">Felix Geisendörfer</a>						</strong>
						<strong>said 
						on Jun 01, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Brian: As I said it works excellent for the scenario I'm describing in this post as well as for storing meta information for different types of Pages in a CMS I've worked on. But you are right, using this in the wrong context will not do you much good ; ).</p>
<p>Ramon: If you use foreign keys and have them setup that way, yes. If you mark the association as 'dependent' in CakePHP, yes. Otherwise, no. : )</p>
<p>Btw. does anybody like the pretty pictures and stuff?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48430c52-16a8-463a-8ba3-36e94834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=c9b00d1b547282a5259ff4716d9f1b12&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://usrportage.de" rel="nofollow">Lars Strojny</a>						</strong>
						<strong>said 
						on Jun 01, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>One simple thing: consider using a join table ("UploadFieldKeys") between the upload table and the UploadField table. The join table would consist of an int primary key and a name. The UploadField table would be modified so that the key field is an integer and references the UploadFieldKeys-table to avoid key duplication.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48438862-8e70-4e28-b207-45ec4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=f4112f3023c643bf2f7b32c9c5dcfcba&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://cakebaker.42dh.com" rel="nofollow">Daniel Hofstetter</a>						</strong>
						<strong>said 
						on Jun 02, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>@Felix: Sure, your solution requires less models and is quite flexible. On the other hand: do you really need this flexibility? And is it worth to move "data logic" (e.g. that a PDF has author and description properties) from the database layer to the application layer?</p>
<p>And regarding your question about the images, I like them (with the exception of the first one, which I don't understand)</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4843b277-31c0-44de-adfe-1cce4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=f89047a466ce2ab454925f9449c016b8&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Christoph Tavan&nbsp;						</strong>
						<strong>said 
						on Jun 02, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Felix, I think I don't have to repeat that I love you for that expandable behavior ;)</p>
<p>@Others: I agree that in many cases it might be against the principles of MVC or other noble concepts. But in some cases it's just soooooo damn f***in useful!<br />
Take an example: You have a CMS that you sell to your clients which you always custom-fit to the needs of each client. Some will want to add videos to their websites, others PDFs, again others Word, Excel, whatever... Some months later a client wants to be able to handle additional filetypes. You don't even have to touch the DB, just add a new controller method and you're done. Isn't that convenient for you as a programmer?</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4843bcfb-8e28-452c-a339-3ea04834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=36b294a2da7ecb48c04cf95aaebb7314&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							thomas&nbsp;						</strong>
						<strong>said 
						on Jun 02, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>hi felix,</p>
<p>and thanks for this. I was using an 'extra data' approach to deal with special cases for categories when I found your Behavior. It helps a lot but ...</p>
<p>Seems like the behavior is not triggered when the model that has the 'extra data' is not populated with this extra data when it is part of an association.</p>
<p>Setting 'recursive' to 2 or more won't change anything.</p>
<p>Is it expectad behavior ?</p>
<p>Thanks in advance</p>
<p>thomas</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4843d812-3d40-4146-939f-4df84834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=978fcafdf09f7fd856dd4becfcb0fe3c&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.blambar.de" rel="nofollow">Nils.r</a>						</strong>
						<strong>said 
						on Jun 02, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>This will definately come in handy in the next project! Had something alike in my head, but didn't yet have the time to think it out. </p>
<p>Thanks for saving my time! :D</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48443d50-4680-4ae2-aede-26a34834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=edfc4a8478edaf01fe35371a5e895ff4&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Khaled&nbsp;						</strong>
						<strong>said 
						on Jun 02, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Yeah the pictures are great , What is the program that you used to create them??</p>
<p>I saw expandable behavior two months ago, but I didn't pay attention to it ... or maybe I didn't understand it because there was no enough documentation !!! but with this post things changed it's pretty easy & effective .... thank you Felix ...</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4844462d-66e4-492c-a553-76334834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.debuggable.com/felix" rel="nofollow">Felix Geisendörfer</a>						</strong>
						<strong>said 
						on Jun 02, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Khaled: OmniGraffle 5</p>
<p>Where did you see the behavior two month ago? I don't recall publishing it anywhere up until now ; p.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48445e77-78c8-4900-a4dc-7e474834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=edfc4a8478edaf01fe35371a5e895ff4&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Khaled&nbsp;						</strong>
						<strong>said 
						on Jun 02, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>maybe in the bakery ... or it's something similar, but I remember that the title looks like yours "~Expandable Behavior" ... or maybe I'm wrong ... you know how many things you get when you're surfing ;-)</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48445f8d-3c24-4401-b441-2da44834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=edfc4a8478edaf01fe35371a5e895ff4&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Khaled&nbsp;						</strong>
						<strong>said 
						on Jun 02, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>BTW, nice application "OmniGraffle 5" , but I don't have MAC :( ... I know some similar programs but not as power as this app ...</p>
<p>Thank Felix</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4845a7a8-d04c-4c8c-9a73-3d4b4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e63576e06ac45ab78bb6b242587f0113&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://bruensicke.com" rel="nofollow">Dirk</a>						</strong>
						<strong>said 
						on Jun 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I have a very similar approach to this. But My "UploadField" Table has 2 more fields: serialize and unserialize in which i store the name of a php-function executed as you would expect, to save even array-data and/or complex structures in the blob-field. This way, it is even more expandable.</p>
<p>I also created the modelclass in runtime (because they are pretty predictable in structure), so i do not need to create them manually.</p>
<p>Great Work, though. I really like your implementation.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-484948d3-b6d4-47f9-a205-674a4834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=3f0db85e90db46310980c8e051d0f12d&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Alexander&nbsp;						</strong>
						<strong>said 
						on Jun 06, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hey Felix,<br />
thank you for that behaviour!! It's exactly what I need for my project, and what caused so much headaches on how  maintaining such variable models...</br></p>
<p>Regards,<br />
Alexander</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-489ab7c5-b5c4-45c6-bca6-65584834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=825ca9355017c7fd236ededf4bec1665&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Lucian Lature&nbsp;						</strong>
						<strong>said 
						on Aug 07, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hi Felix!...</p>
<p>There is a bug inside your code.<br />
More precisely, you should modify the line $conventions = array('foreignKey', $Model->hasMany[$settings['with']]['foreignKey']); from setup() function into  $conventions = array('foreignKey' => $Model->hasMany[$settings['with']]['foreignKey']);</br></p>
<p>That way it will be no problem using this behavior when you're using the "with" variabile inside your model's Expandable behavior, like var $actsAs = array ('Expandable' => array ('with' => 'Chichi'));</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48d3d19c-e1b8-414a-88d9-2fe54834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=486d73946a005ad9f32b2a62596bceb4&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Brad&nbsp;						</strong>
						<strong>said 
						on Sep 19, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hi,</p>
<p>I would like to try the Expandable behavior, but the it doesn't seem to be there anymore. Is there another link?</p>
<p>Thanks</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48d3da51-f090-4bc2-abca-0cfe4834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/felix" rel="nofollow">Felix Geisendörfer</a>						</strong>
						<strong>said 
						on Sep 19, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Brad: Sorry about that : ). The behavior can now be found here: <a rel="nofollow" href="http://github.com/felixge/debuggable-scraps/tree/master/cakephp/behaviors/expandable">http://github.com/felixge/debuggable-scraps/tree/master/cakephp/behaviors/expandable</a></p>
<p>I also updated the link in the post. Thanks for reporting this issue!</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48d8f869-d924-4b42-8e10-4e084834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8bd8bc287b7b952770f12812129190fc&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Martin Westin&nbsp;						</strong>
						<strong>said 
						on Sep 23, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hi Felix,<br />
Just ran into a link to this post today. I must say your behavior looks nice. I was wondering if there were any plans to support find operations. For me, that is one of the major reasons not to simply serialize things into a "properties" field.</br></p>
<p>What I mean is something like:<br />
$this->Upload->find('first',array(</br><br />
  'conditions'=>array('Upload.width'=>'400')</br><br />
));</br><br />
and this condition would actually be converted to something like:</br><br />
array('UploadField.key'=>'width', 'UploadField.value'=>'400')</br></p>
<p>I might make use of the behavior but I would probably have to write a beforeFind to do something like that first. If I go that way I will send you the results but it would be nice to know if something like that is already in the works.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-48d8fa3c-7824-4ec7-bfb9-0c534834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/felix" rel="nofollow">Felix Geisendörfer</a>						</strong>
						<strong>said 
						on Sep 23, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Martin Westin: nothing is in the works. Feel free to fork the github project and hack away, I'll gladly pull in any good changes you make!</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-490cc8c2-f658-4d35-8aa1-4ef14834cda3" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8d2435a56d548bfb66e5069458781d44&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Anthony&nbsp;						</strong>
						<strong>said 
						on Nov 01, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>The expandable behavior on the Github scraps is not correct. It doesn't match the older version I have.<br />
1) note the explicit use of 'file_id' in the afterSave method</br><br />
2) it doesn't create new Fields only tries to update pre-existing ones</br></p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-490f534a-01f4-4910-8b47-1c6b4834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/felix" rel="nofollow">Felix Geisendörfer</a>						</strong>
						<strong>said 
						on Nov 03, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Anthony: Do you have a patch to fix this? Or can you email me the version you have?</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-4910a867-1b68-4675-942d-7eac4834cda3" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://debuggable.com/felix" rel="nofollow">Felix Geisendörfer</a>						</strong>
						<strong>said 
						on Nov 04, 2008:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Anthony: Ok, I actually found the previously released version and pushed it to github. Sry for the inconvenience!</p>
				</div>
				<div class="clear"></div>
							</div>
	  	
				<div class="divider"></div>
		<a name="comment_form"></a>
		<p>This post is too old. We do not allow comments here anymore in order to fight spam. If you have real feedback or questions for the post, please <a href="/contact">contact us</a>.</p>
	</div></div>
	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@Jörn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
