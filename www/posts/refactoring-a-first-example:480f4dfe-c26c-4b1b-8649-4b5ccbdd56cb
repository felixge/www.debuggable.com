<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"> 
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /> 
	<title>Refactoring - A first example &raquo; Debuggable - Node.js Consulting</title>

	<link href="http://feeds.feedburner.com/debuggable" type="application/rss+xml" rel="alternate" title="RSS 2.0" />	<link rel="pingback" href="Debuggable.com/pingback" />
	<link rel="stylesheet" type="text/css" href="/css/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/4026ee2275e22a4e5ec8aea13747c557.php" /></head>
	<body>
		<div class="container_16">
			<h1 id="logo-text"><a href="/">debuggable</a></h1>
			<ul id="navigation">
				<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>			</ul>
			<div class="clear">&nbsp;</div>

			<div id="blueprint">
				<a href="/contact" class="contact">Contact Us</a>			</div>

			<div class="clear">&nbsp;</div>
			<div class="grid_11 alpha" id="content">
	<cake:nocache>
			<div class="messages empty"></div>
	</cake:nocache>
	<div class="post">
	<h2><a href="/posts/refactoring-a-first-example:480f4dfe-c26c-4b1b-8649-4b5ccbdd56cb">Refactoring - A first example</a></h2>	<div class="posted-on">
		<p>Posted on 30/4/07 by 
		<a href="/tim">Tim Kosch√ºtzki</a>				</p>
		<div class="thumb">
			<img alt="" src="/img/tim_thumb.jpg"/>		</div>
	</div>
	<div class="body">
				<p>Today we will look at a first php example of refactoring, to start creating a sense for it.</p>
<p>Think about the following scenario: You want to dynamically add workers to a department and then display that department's workers as an unordered list. Pretty easy eh? However, we will discover that there are some pitfalls and ways to improve from our initial code. We'll start off with the following:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">class</span> Department <span class="br0">&#123;</span><br />
&nbsp; protected <span class="re0">$name</span>;<br />
&nbsp; protected <span class="re0">$workers</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; <br />
&nbsp; <span class="kw2">public</span> <span class="kw2">function</span> addWorker<span class="br0">&#40;</span><span class="re0">$name</span>,<span class="re0">$isChief</span>,<span class="re0">$salary</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">workers</span><span class="br0">&#91;</span><span class="br0">&#93;</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="re0">$name</span>,<span class="re0">$isChief</span>,<span class="re0">$salary</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
&nbsp; <br />
&nbsp; <span class="kw2">public</span> <span class="kw2">function</span> listWorkers<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;ul&gt;'</span>;<br />
&nbsp; &nbsp; <span class="kw1">foreach</span><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">workers</span> <span class="kw1">as</span> <span class="re0">$worker</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">&quot;&lt;li&gt;{$worker[0]} - {$worker[1]} - {$worker[2]}&quot;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;/li&gt;&lt;/ul&gt;'</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span><br />
<br />
<span class="re0">$dept</span> = <span class="kw2">new</span> Department;<br />
<span class="re0">$dept</span>-&gt;<span class="me1">addWorker</span><span class="br0">&#40;</span><span class="st0">'Felix Broda'</span>,<span class="nu0">1</span>,<span class="nu0">2000</span><span class="br0">&#41;</span>;<br />
<span class="re0">$dept</span>-&gt;<span class="me1">addWorker</span><span class="br0">&#40;</span><span class="st0">'Stefan Muster'</span>,<span class="nu0">0</span>,<span class="nu0">1400</span><span class="br0">&#41;</span>;<br />
<span class="re0">$dept</span>-&gt;<span class="me1">addWorker</span><span class="br0">&#40;</span><span class="st0">'Klaus Schmidt'</span>,<span class="nu0">0</span>,<span class="nu0">1350</span><span class="br0">&#41;</span>;<br />
<span class="re0">$dept</span>-&gt;<span class="me1">listWorkers</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;</div>
<p>There are a couple of really bad <a href="http://c2.com/xp/CodeSmell.html" title="What are code smells?">Code Smells</a>in it, unfortunately. </p>
<p><!--adsense#singlepost_banner468horiz--></p>
<h2>Our first refactoring</h2>
<p>The first thing that comes to mind is the very bad way of storing the workers in the Department class. I mean an array is by all means fine. However, look at the 13th line: We will always depend on our implementation and have to go to the addWorker function to remember the order in which we stored the data. How can we fix this? Introduce a class for a Worker:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">class</span> Worker <span class="br0">&#123;</span><br />
&nbsp; protected <span class="re0">$name</span>;<br />
&nbsp; protected <span class="re0">$isChief</span> = <span class="kw2">false</span>;<br />
&nbsp; protected <span class="re0">$salary</span> = <span class="nu0">0</span>;<br />
<span class="br0">&#125;</span></div>
<p>Now we can change the addWorker method of the Department class:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">public</span> <span class="kw2">function</span> addWorker<span class="br0">&#40;</span><span class="re0">$worker</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">workers</span><span class="br0">&#91;</span><span class="br0">&#93;</span> = <span class="re0">$worker</span>;<br />
&nbsp; <span class="br0">&#125;</span></div>
<p>Okay, so we can change the client code now in the listWorkers() method:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">public</span> <span class="kw2">function</span> listWorkers<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;ul&gt;'</span>;<br />
&nbsp; &nbsp; <span class="kw1">foreach</span><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">workers</span> <span class="kw1">as</span> <span class="re0">$worker</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">&quot;&lt;li&gt;{$worker-&gt;name} - {$worker-&gt;isChief} - {$worker-&gt;salary}&quot;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;/li&gt;&lt;/ul&gt;'</span>;<br />
&nbsp; <span class="br0">&#125;</span></div>
<p>Okay looking good now. :)</p>
<h2>Our second refactoring</h2>
<p>When executing the code we see that the attributes of the Worker class must be public in order to work. A quick refactoring, let's fix it up:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">class</span> Worker <span class="br0">&#123;</span><br />
&nbsp; <span class="kw2">public</span> <span class="re0">$name</span>;<br />
&nbsp; <span class="kw2">public</span> <span class="re0">$isChief</span> = <span class="kw2">false</span>;<br />
&nbsp; <span class="kw2">public</span> <span class="re0">$salary</span> = <span class="nu0">0</span>;<br />
<span class="br0">&#125;</span></div>
<h2>Making our list standards-compliant</h2>
<p>There are actually two smaller problems now with our list generation: We are missing the closing list-tags:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">&quot;&lt;li&gt;{$worker-&gt;name} - {$worker-&gt;isChief} - {$worker-&gt;salary}&lt;/li&gt;&quot;</span>;</div>
<p>Okay this took us 5 seconds, but it was worth it. Now we notice that when we are outputting a department-list before adding workers to it, we get an unordered list that has starting ul-tags, but no li-tags. This is not standards-compliant, so we fix it:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">public</span> <span class="kw2">function</span> listWorkers<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span><span class="br0">&#40;</span><a href="http://www.php.net/count"><span class="kw3">count</span></a><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">workers</span><span class="br0">&#41;</span> &gt; <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;ul&gt;'</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">foreach</span><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">workers</span> <span class="kw1">as</span> <span class="re0">$worker</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">&quot;&lt;li&gt;{$worker-&gt;name} - {$worker-&gt;isChief} - {$worker-&gt;salary}&quot;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;/li&gt;&lt;/ul&gt;'</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;p&gt;Sorry, there are no workers to display.&lt;/p&gt;'</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; <span class="br0">&#125;</span></div>
<h2>Switching hats again - adding a feature</h2>
<p>Switching hats now, because our customer told us, that he wants the number of department workers displayed at the end of each list. We are wearing our feature-hat now. This feature is a quick thing, so we implement it right away:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">public</span> <span class="kw2">function</span> listWorkers<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span><span class="br0">&#40;</span><a href="http://www.php.net/count"><span class="kw3">count</span></a><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">workers</span><span class="br0">&#41;</span> &gt; <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;ul&gt;'</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">foreach</span><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">workers</span> <span class="kw1">as</span> <span class="re0">$worker</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">&quot;&lt;li&gt;{$worker-&gt;name} - {$worker-&gt;isChief} - {$worker-&gt;salary}&quot;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;/li&gt;&lt;/ul&gt;'</span>;<br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">&quot;&lt;p&gt;There are {count($this-&gt;workers} workers in this department.&lt;/p&gt;&quot;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;p&gt;Sorry, there are no workers to display.&lt;/p&gt;'</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; <span class="br0">&#125;</span></div>
<h2>More refactoring</h2>
<p>Looking at our code now we use the count() function twice to receive the same bit of information. Now we could call count() once and store its result in a variable. However, that would tie our interface to the implementation. Let's add a new method instead that counts the number of workers for us:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">public</span> <span class="kw2">function</span> numWorkers<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/count"><span class="kw3">count</span></a><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">workers</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span></div>
<p>Our altered listWorkers() method looks as follows:</p>
<p><!--adsense#singlepost_banner468horiz--></p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">public</span> <span class="kw2">function</span> listWorkers<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$numWorkers</span> = <span class="re0">$this</span>-&gt;<span class="me1">numWorkers</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; <br />
&nbsp; &nbsp; <span class="kw1">if</span><span class="br0">&#40;</span><span class="re0">$numWorkers</span> &gt; <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;ul&gt;'</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">foreach</span><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">workers</span> <span class="kw1">as</span> <span class="re0">$worker</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">&quot;&lt;li&gt;{$worker-&gt;name} - {$worker-&gt;isChief} - {$worker-&gt;salary}&quot;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;/li&gt;&lt;/ul&gt;'</span>;<br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">&quot;&lt;p&gt;There are {$numWorkers} workers in this department.&lt;/p&gt;&quot;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;p&gt;Sorry, there are no workers to display.&lt;/p&gt;'</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; <span class="br0">&#125;</span></div>
<p>Cool stuff. :) Let's see what we currently have:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">class</span> Department <span class="br0">&#123;</span><br />
&nbsp; protected <span class="re0">$name</span>;<br />
&nbsp; protected <span class="re0">$workers</span> = <a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; <br />
&nbsp; <span class="kw2">public</span> <span class="kw2">function</span> addWorker<span class="br0">&#40;</span><span class="re0">$worker</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">workers</span><span class="br0">&#91;</span><span class="br0">&#93;</span> = <span class="re0">$worker</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
&nbsp; <br />
&nbsp; <span class="kw2">public</span> <span class="kw2">function</span> listWorkers<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$numWorkers</span> = <span class="re0">$this</span>-&gt;<span class="me1">numWorkers</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; <br />
&nbsp; &nbsp; <span class="kw1">if</span><span class="br0">&#40;</span><span class="re0">$numWorkers</span> &gt; <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;ul&gt;'</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">foreach</span><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">workers</span> <span class="kw1">as</span> <span class="re0">$worker</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">&quot;&lt;li&gt;{$worker-&gt;name} - {$worker-&gt;isChief} - {$worker-&gt;salary}&quot;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;/li&gt;&lt;/ul&gt;'</span>;<br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">&quot;&lt;p&gt;There are {$numWorkers} workers in this department.&lt;/p&gt;&quot;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;p&gt;Sorry, there are no workers to display.&lt;/p&gt;'</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; <span class="br0">&#125;</span><br />
&nbsp; <br />
&nbsp; <span class="kw2">public</span> <span class="kw2">function</span> numWorkers<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/count"><span class="kw3">count</span></a><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">workers</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span><br />
<br />
<span class="kw2">class</span> Worker <span class="br0">&#123;</span><br />
&nbsp; <span class="kw2">public</span> <span class="re0">$name</span>;<br />
&nbsp; <span class="kw2">public</span> <span class="re0">$isChief</span> = <span class="kw2">false</span>;<br />
&nbsp; <span class="kw2">public</span> <span class="re0">$salary</span> = <span class="nu0">0</span>;<br />
<span class="br0">&#125;</span></div>
<h2>Adding some client code into the mix</h2>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$felix</span> = <span class="kw2">new</span> Worker;<br />
<span class="re0">$felix</span>-&gt;<span class="me1">name</span> = <span class="st0">'Felix Broda'</span>;<br />
<span class="re0">$felix</span>-&gt;<span class="me1">isChief</span> = <span class="kw2">true</span>;<br />
<span class="re0">$felix</span>-&gt;<span class="me1">salary</span> = <span class="nu0">2000</span>;<br />
<br />
<span class="re0">$stefan</span> = <span class="kw2">new</span> Worker;<br />
<span class="re0">$stefan</span>-&gt;<span class="me1">name</span> = <span class="st0">'Stefan Muster'</span>;<br />
<span class="re0">$stefan</span>-&gt;<span class="me1">salary</span> = <span class="nu0">1400</span>;<br />
<br />
<span class="re0">$klaus</span> = <span class="kw2">new</span> Worker;<br />
<span class="re0">$klaus</span>-&gt;<span class="me1">name</span> = <span class="st0">'Klaus Schmidt'</span>;<br />
<span class="re0">$klaus</span>-&gt;<span class="me1">salary</span> = <span class="nu0">1350</span>;<br />
<br />
<br />
<span class="re0">$dept</span> = <span class="kw2">new</span> Department;<br />
<span class="re0">$dept</span>-&gt;<span class="me1">addWorker</span><span class="br0">&#40;</span><span class="re0">$felix</span><span class="br0">&#41;</span>;<br />
<span class="re0">$dept</span>-&gt;<span class="me1">addWorker</span><span class="br0">&#40;</span><span class="re0">$stefan</span><span class="br0">&#41;</span>;<br />
<span class="re0">$dept</span>-&gt;<span class="me1">addWorker</span><span class="br0">&#40;</span><span class="re0">$klaus</span><span class="br0">&#41;</span>;<br />
<span class="re0">$dept</span>-&gt;<span class="me1">listWorkers</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;</div>
<p>Now it's all working well, but darn that client code is so much for what it does. Let's refactor a bit more and add a handy constructor to the Worker class:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">class</span> Worker <span class="br0">&#123;</span><br />
&nbsp; <span class="kw2">public</span> <span class="re0">$name</span>;<br />
&nbsp; <span class="kw2">public</span> <span class="re0">$isChief</span> = <span class="kw2">false</span>;<br />
&nbsp; <span class="kw2">public</span> <span class="re0">$salary</span> = <span class="nu0">0</span>;<br />
&nbsp; <br />
&nbsp; <span class="kw2">public</span> <span class="kw2">function</span> __construct<span class="br0">&#40;</span><span class="re0">$name</span>,<span class="re0">$salary</span>,<span class="re0">$isChief</span>=<span class="kw2">false</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">name</span> = <span class="re0">$name</span>;<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">salary</span> = <span class="re0">$salary</span>;<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">isChief</span> = <span class="re0">$isChief</span>;&nbsp; &nbsp; <br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span></div>
<p>Note that we put the isChief variable as an optional parameter with the default value of false. This is handy, because most workers will not be chiefs, leaving us without the need to explicitely tell every new worker object that it is not a chief.</p>
<p>Now our new client code:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$felix</span> = <span class="kw2">new</span> Worker<span class="br0">&#40;</span><span class="st0">'Felix Broda'</span>,<span class="nu0">2000</span>,<span class="kw2">true</span><span class="br0">&#41;</span>;<br />
<span class="re0">$stefan</span> = <span class="kw2">new</span> Worker<span class="br0">&#40;</span><span class="st0">'Stefan Muster'</span>,<span class="nu0">1400</span><span class="br0">&#41;</span>;<br />
<span class="re0">$klaus</span> = <span class="kw2">new</span> Worker<span class="br0">&#40;</span><span class="st0">'Klaus Schmidt'</span>,<span class="nu0">1350</span><span class="br0">&#41;</span>;<br />
<br />
<span class="re0">$dept</span> = <span class="kw2">new</span> Department;<br />
<span class="re0">$dept</span>-&gt;<span class="me1">addWorker</span><span class="br0">&#40;</span><span class="re0">$felix</span><span class="br0">&#41;</span>;<br />
<span class="re0">$dept</span>-&gt;<span class="me1">addWorker</span><span class="br0">&#40;</span><span class="re0">$stefan</span><span class="br0">&#41;</span>;<br />
<span class="re0">$dept</span>-&gt;<span class="me1">addWorker</span><span class="br0">&#40;</span><span class="re0">$klaus</span><span class="br0">&#41;</span>;<br />
<span class="re0">$dept</span>-&gt;<span class="me1">listWorkers</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;</div>
<p>Ah many less lines - much better. :)</p>
<h2>Shortening the code more</h2>
<p>Let's add the ability to add an array of workers all at once. Our goal is to make the following line valid:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="re0">$dept</span>-&gt;<span class="me1">addWorker</span><span class="br0">&#40;</span><a href="http://www.php.net/array"><span class="kw3">array</span></a><span class="br0">&#40;</span><span class="re0">$felix</span>,<span class="re0">$stefan</span>,<span class="re0">$klaus</span><span class="br0">&#41;</span><span class="br0">&#41;</span>;</div>
<p>Our altered addWorker() method:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">public</span> <span class="kw2">function</span> addWorker<span class="br0">&#40;</span><span class="re0">$worker</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">if</span><span class="br0">&#40;</span><a href="http://www.php.net/is_array"><span class="kw3">is_array</span></a><span class="br0">&#40;</span><span class="re0">$worker</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">foreach</span><span class="br0">&#40;</span><span class="re0">$worker</span> <span class="kw1">as</span> <span class="re0">$w</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">workers</span><span class="br0">&#91;</span><span class="br0">&#93;</span> = <span class="re0">$w</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">workers</span><span class="br0">&#91;</span><span class="br0">&#93;</span> = <span class="re0">$worker</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; <span class="br0">&#125;</span></div>
<p>Now was this a feature or a refactoring?</p>
<h2>Adding tax rates</h2>
<p>Our client wants us to display the actual salaries of all workers of a department. We add the feature in our listWorkers() method:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">public</span> <span class="kw2">function</span> listWorkers<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$numWorkers</span> = <span class="re0">$this</span>-&gt;<span class="me1">numWorkers</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; <br />
&nbsp; &nbsp; <span class="kw1">if</span><span class="br0">&#40;</span><span class="re0">$numWorkers</span> &gt; <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;ul&gt;'</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">foreach</span><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">workers</span> <span class="kw1">as</span> <span class="re0">$worker</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="re0">$salary</span> *= <span class="nu0">1.07</span>;<br />
&nbsp; &nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">&quot;&lt;li&gt;{$worker-&gt;name} - {$worker-&gt;isChief} - {$salary}&quot;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;/li&gt;&lt;/ul&gt;'</span>;<br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">&quot;&lt;p&gt;There are {$numWorkers} workers in this department.&lt;/p&gt;&quot;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;p&gt;Sorry, there are no workers to display.&lt;/p&gt;'</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; <span class="br0">&#125;</span></div>
<p>However, we just introduced another Code Smell. We should not hard code the calculation of the sales tax into our client code. If the calculation changes we would have to adjust all client code that depends on it. Let's make the overall flow by introducing a method in the Worker class clearer:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">public</span> <span class="kw2">function</span> calcTotalSalary<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">return</span> <a href="http://www.php.net/round"><span class="kw3">round</span></a><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">salary</span> * <span class="nu0">1.07</span>,<span class="nu0">2</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span></div>
<p>Now we can rewrite listWorkers() as follows:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<span class="kw2">public</span> <span class="kw2">function</span> listWorkers<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$numWorkers</span> = <span class="re0">$this</span>-&gt;<span class="me1">numWorkers</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;<br />
&nbsp; <br />
&nbsp; &nbsp; <span class="kw1">if</span><span class="br0">&#40;</span><span class="re0">$numWorkers</span> &gt; <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;ul&gt;'</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="kw1">foreach</span><span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">workers</span> <span class="kw1">as</span> <span class="re0">$worker</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">&quot;&lt;li&gt;{$worker-&gt;name} - {$worker-&gt;isChief} - {$worker-&gt;calcTotalSalary()}&quot;</span>;<br />
&nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;/li&gt;&lt;/ul&gt;'</span>;<br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">&quot;&lt;p&gt;There are {$numWorkers} workers in this department.&lt;/p&gt;&quot;</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <a href="http://www.php.net/echo"><span class="kw3">echo</span></a> <span class="st0">'&lt;p&gt;Sorry, there are no workers to display.&lt;/p&gt;'</span>;<br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; <span class="br0">&#125;</span></div>
<h2>Introducing a constant for the tax rate</h2>
<p>Now tax rates change and our code should account for them. Let's introduce a constant for the tax rate to save us a lot of trouble changing client code later when the tax rate changes:</p>
<div class="clear"></div>
<div class="code debuggable_sh_php" style="white-space: wrap;white-space: nowrap;">
<a href="http://www.php.net/define"><span class="kw3">define</span></a><span class="br0">&#40;</span><span class="st0">'TAX_RATE'</span>,<span class="st0">'17'</span><span class="br0">&#41;</span>;<br />
<span class="kw2">class</span> Worker <span class="br0">&#123;</span><br />
&nbsp; <span class="kw2">public</span> <span class="re0">$name</span>;<br />
&nbsp; <span class="kw2">public</span> <span class="re0">$isChief</span> = <span class="kw2">false</span>;<br />
&nbsp; <span class="kw2">public</span> <span class="re0">$salary</span> = <span class="nu0">0</span>;<br />
&nbsp; <br />
&nbsp; <span class="kw2">public</span> <span class="kw2">function</span> __construct<span class="br0">&#40;</span><span class="re0">$name</span>,<span class="re0">$salary</span>,<span class="re0">$isChief</span>=<span class="kw2">false</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">name</span> = <span class="re0">$name</span>;<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">salary</span> = <span class="re0">$salary</span>;<br />
&nbsp; &nbsp; <span class="re0">$this</span>-&gt;<span class="me1">isChief</span> = <span class="re0">$isChief</span>;&nbsp; &nbsp; <br />
&nbsp; <span class="br0">&#125;</span><br />
&nbsp; <br />
&nbsp; <span class="kw2">public</span> <span class="kw2">function</span> calcTotalSalary<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">return</span> <span class="br0">&#40;</span><span class="re0">$this</span>-&gt;<span class="me1">salary</span> + TAX_RATE/<span class="nu0">100</span> * <span class="re0">$this</span>-&gt;<span class="me1">salary</span><span class="br0">&#41;</span>;<br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span></div>
<h2>Conclusion</h2>
<p>As you see when you refactor you make little changes to code that is working already, but that can be improved to quite some extent. Hopefully you noticed how we switched hats often in order to<br />
reach to some very cool and working code. It often takes only fundamental sense of architecture to get to clean code that works. Please keep in mind that you do not add a feature and refactor at the same time, as that will lead you to the road to hell.</p>
<p>Happy refactoring. :)<br />
<img style="display: none;" src="http://debuggable.com/posts/tick/480f4dfe-c26c-4b1b-8649-4b5ccbdd56cb"></p>
	</div>
	<div class="clear">&nbsp;</div>
	<div class="social">
	<p class="subscribe">Did you like this blog post? If so, please consider <a href="http://feeds.feedburner.com/debuggable">subscribing to the Blog RSS feed</a>.</p>

	<ul>
	<li class="sociablefirst">
				<a class="linkedin" title="LinkedIn" href="javascript:window.location='http://www.linkedin.com/shareArticle?mini=true&amp;url=http%3A%2F%2Fdebuggable.com%2Fposts%2Frefactoring-a-first-example%3A480f4dfe-c26c-4b1b-8649-4b5ccbdd56cb &amp;title=Refactoring+-+A+first+example';" rel="nofollow">
			<img class="sociable-hovers" alt="Linked In" title="Linked In" src="/img/social_icons/linkedin.png"/>
		</a>
	</li>
	<li>
		<a class="sphinn" title="Sphinn" href="javascript:window.location='http://sphinn.com/index.php?c=post&amp;m=submit&amp;link=http%3A%2F%2Fdebuggable.com%2Fposts%2Frefactoring-a-first-example%3A480f4dfe-c26c-4b1b-8649-4b5ccbdd56cb';" rel="nofollow">
		<img class="sociable-hovers" alt="Sphinn" title="Sphinn" src="/img/social_icons/sphinn.png"/>
		</a>
	</li>
	<li>
		<a class="digg" title="Digg" href="javascript:window.location='http://digg.com/submit?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Frefactoring-a-first-example%3A480f4dfe-c26c-4b1b-8649-4b5ccbdd56cb&amp;title=Refactoring+-+A+first+example&amp;bodytext=+..&amp;media=News&amp;topic=Programming';" rel="nofollow">
		<img class="sociable-hovers" alt="Digg" title="Digg" src="/img/social_icons/digg.png"/>
		</a>
	</li>
	<li>
	<a class="del.icio.us" title="del.icio.us" href="javascript:window.location='http://delicious.com/post?url=http%3A%2F%2Fdebuggable.com%2Fposts%2Frefactoring-a-first-example%3A480f4dfe-c26c-4b1b-8649-4b5ccbdd56cb&amp;title=Refactoring+-+A+first+example';" rel="nofollow">
		<img class="sociable-hovers" alt="Delicious" title="Delicious" src="/img/social_icons/delicious.png"/>
	</a>
	</li>
	<li class="sociablelast">
		<a class="stumbleupon" title="StumbleUpon" href="javascript:window.location='http://www.stumbleupon.com/submit?url=http%253A%252F%252Fyoast.com%252F40-wordpress-optimisation-tips%252F&amp;title=40%2520WordPress%2520Optimisation%2520tips';" rel="nofollow">
		<img class="sociable-hovers" alt="StumbleUpon" title="StumbleUpon" src="/img/social_icons/stumbleupon.png"/>
		</a>
	</li>
	</ul>
</div>
	<div class="related-posts">
		<h3>(Theoretically) Related Posts</h3>
				<ul class="first">
							<li><a href="/posts/principles-in-refactoring:480f4dfe-7c6c-4591-8560-4c1ecbdd56cb">Principles in Refactoring</a></li>
							<li><a href="/posts/how-to-compose-methods-the-extract-method-refactoring:480f4dfe-c0d8-48ac-9d91-4b47cbdd56cb">How To Compose Methods: The Extract Method Refactoring</a></li>
					</ul>
		<ul>
					</ul>
	</div>
	<div class="clear">&nsbp;</div>

			<p>You can <a href="#comment_form">skip to the end</a> and add a comment.</p>
	
	<div class="post-footer">
		<img src="/css/img/comments.png" alt="Comments"> <a href="/posts/refactoring-a-first-example:480f4dfe-c26c-4b1b-8649-4b5ccbdd56cb">6 Comments</a> &nbsp; | &nbsp; 
		<img src="/css/img/add_comment.png" alt="Add Comment"> <a href="/posts/refactoring-a-first-example:480f4dfe-c26c-4b1b-8649-4b5ccbdd56cb#CommentAddForm">Add Comment</a>	</div>
	<div class="post_comments">
	<div class="clear"></div>
									<div id="comment-480f4dff-4478-462d-9122-4d73cbdd56cb" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=9c31d1102d95104fb994ae67cd1989b6&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.debuggable.com/tim" rel="nofollow">John</a>						</strong>
						<strong>said 
						on May 01, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Thanks for this nice tutorial. :)</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dff-c958-4c37-8ad3-4ec6cbdd56cb" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=9c31d1102d95104fb994ae67cd1989b6&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.debuggable.com/tim" rel="nofollow">Rick Jayne</a>						</strong>
						<strong>said 
						on May 01, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Yeah, I especially like the throurough code examples. </p>
<p>Good tutorial.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dff-bc7c-482f-8ee1-4acecbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=07c91367d1d62556f03dc5624305eef7&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://raphaelstolt.blogspot.com" rel="nofollow">Raphael Stolt</a>						</strong>
						<strong>said 
						on May 03, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Finally somebody writing some thoughts and insights on refactoring in PHP. I think you should have mentioned at least to run the according developer test after every large refactoring step, to prove the behaviour preservation. Thanks for posting on this topic.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dff-22a8-497d-bdb0-4ad6cbdd56cb" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=9c31d1102d95104fb994ae67cd1989b6&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.debuggable.com/tim" rel="nofollow">Tim Koschuetzki</a>						</strong>
						<strong>said 
						on May 04, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hi Raphael,</p>
<p>yes you are right. I could have highlighted this part of refactoring a bit more. Thanks for the tip.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dff-284c-4f92-9fd6-4db6cbdd56cb" class="blogcomment">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=1ae2b645a46feeedd784495eafec1002&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							Oscar&nbsp;						</strong>
						<strong>said 
						on May 11, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>I like the tutorial. It is to bad that your website is not displaying correctly on a Mac using Safari. It makes it hard to read.</p>
				</div>
				<div class="clear"></div>
							</div>
	  						<div id="comment-480f4dff-eea0-4ad7-aa75-4962cbdd56cb" class="blogcomment admin">
				<span class="author">
					<a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=9c31d1102d95104fb994ae67cd1989b6&size=31&rating=R&d=identicon" alt="" /></a>					<div>
						<strong class="author-name">
							<a href="http://www.debuggable.com/tim" rel="nofollow">Tim Koschuetzki</a>						</strong>
						<strong>said 
						on May 15, 2007:</strong>
					</div>
				</span>
				<div class="clear"></div>
				<div class="body">
					<p>Hi Oscar, thanks for your comment.</p>
<p>I will work on it. :) Promise!</p>
				</div>
				<div class="clear"></div>
							</div>
	  	
				<div class="divider"></div>
		<a name="comment_form"></a>
		<p>This post is too old. We do not allow comments here anymore in order to fight spam. If you have real feedback or questions for the post, please <a href="/contact">contact us</a>.</p>
	</div></div>
	
</div>
<div class="grid_4 prefix_1 omega" id="sidebar">
	<cake:nocache>
			</cake:nocache>

	<h3>RSS Feeds</h3>
	<div id="bug">
		<img src="/img/rss_bug.png" alt="" />	</div>
	<div class="rss">
		<p class="bug-message"></p>
		<a href="http://feeds.feedburner.com/debuggable">Blog RSS</a><br/>
		<a href="http://feeds.feedburner.com/debuggable-comments">Comments RSS</a><br/><br/>
		<img width="88" height="26" alt="" style="border: 0pt none ;" src="http://feeds.feedburner.com/~fc/debuggable?bg=FF9933&amp;fg=444444&amp;anim=0"/>
		<div class="clear"></div>
	</div>

	<h3>Recent Posts</h3>
	<ul>
<li class=""><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb">Releasing node-mysql 2.0.0-alpha</a></li><li class=""><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb">How to write jQuery plugins</a></li><li class=""><a href="/posts/vim-workshop-in-berlin-april-20:4f702b83-ce24-429c-9403-0e39cbdd56cb">Vim Workshop in Berlin (April 20)</a></li><li class=""><a href="/posts/npm-an-intervention:4f44dd25-a114-4361-ada1-6cefcbdd56cb">NPM - An intervention</a></li><li class="active"><a href="/posts/testing-node-js-modules-with-travis-ci:4ec62298-aec4-4ee3-8b5a-2c96cbdd56cb">Testing node.js modules with Travis CI</a></li><li class=""><a href="/posts/private-npm-modules:4e68cc7d-1ac4-42d9-995a-343dcbdd56cb">Private npm modules</a></li></ul>
	<h3>Archive</h3>
	<p class="small align">
		<strong>443 Posts</strong>, <strong>4608 Comments</strong><br /><br />
		We are on air since 2006. Take a tour through the
		<a href="/posts/archive">blog archive</a>.
	</p>
	<div class="search">
	<form id="PostSearchForm" method="post" action="/posts/search"><fieldset style="display:none;"><input type="hidden" name="_method" value="POST" /></fieldset><input name="data[Post][keywords]" type="text" value="" id="PostKeywords" /><input type="submit" class="button" value="Search" /></form>	<div class="clear"></div>
</div>
	<h3>Recent Comments</h3>
	<div class="recent-comments">
		<div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=23968f0ca75b13463d2db5343e5c2096&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd32b85-220c-4fc8-84b2-378fcbdd56cb">William: thanks, fixed ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=b47010beec892f11619d1e81f0c94f11&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/releasing-node-mysql-2-0-0-alpha:4fb21c18-7f84-4e8c-a1ef-599bcbdd56cb#comment-4fd30119-06fc-4712-aecd-7fa5cbdd56cb">Hi Felix,

The Upgra ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=99b59e8a9cfe2c5575f0fa90f7f30307&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f99a4a2-9ad8-4476-b208-611acbdd56cb">Maybe you can write so ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=8364689a1eefb5eceb6a4f38bbf95731&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f9651b9-eb88-4096-94c1-0fc2cbdd56cb">This is very nice plug ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=7e3d69d16d3b845e89198512355b2ac9&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f8bb75a-96cc-4197-8e93-7c63cbdd56cb">Nice article!

Somet ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f83326b-8c28-43fc-b70d-097ecbdd56cb">That&#039;s fine ognian, th ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=994516a664c2bdc728d18c47e935bc14&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f832a25-5818-4d38-9e39-097ecbdd56cb">Really nice work! I wa ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c15ca-c7c4-48e3-a4db-27decbdd56cb">@J√∂rn: Sorry, thought  ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=d5d83832be2b6c70d1968635f68a1b4a&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7c11aa-6f9c-448c-abdb-2066cbdd56cb">Thanks didn&#039;t quite un ..</a></div><div class="clear_left"></div><div class="comment"><a href="http://en.gravatar.com/site/signup" class="gravatar"><img src="http://www.gravatar.com/avatar.php?gravatar_id=e57a2bc121063a81e8e6a04aa85cc54f&size=15&rating=R&d=identicon" alt="" /></a><a href="/posts/how-to-write-jquery-plugins:4f72ab2e-7310-4a74-817a-0a04cbdd56cb#comment-4f7bf934-d4e8-4885-9a2c-7a93cbdd56cb">Well you could expose  ..</a></div><div class="clear_left"></div>	</div>
	<div class="clear_left"></div>
	<h3>Keep an eye on</h3>
<ul class="links external">
	<li><a href="http://transloadit.com" title="Video encoding, image resizing and more for your web or mobile app">Transloadit</a></li><li><a href="http://tus.io" title="Resumable file uploading, upload progress bar, faster upload speed">tus - resumable file upload protocol</a></li><li><a href="http://kevin.vanzonneveld.net/">Kevin van Zonneveld</a></li><li><a href="http://www.littlehart.net/atthekeyboard/">Chris Hartjes</a></li><li><a href="http://mark-story.com">Mark Story</a></li><li><a href="http://www.webbosaurus.de">Webbosaurus</a></li></ul>
	<a href='https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Number' title='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'><img src='http://static.jsconf.us/promotejshs.png' height='150' width='180' alt='JavaScript JS Documentation: JS Number Example: Using the Number object to assign values to numeric variables, JavaScript Number Example: Using the Number object to assign values to numeric variables'/></a>
</div>

						<div class="clear">&nbsp;</div>
		</div>

		<div id="footer">
			<div class="container_16">
				<ul id="footer_navigation">
					<ul>
<li class=""><a href="/blog">Blog</a></li><li class="active"><a href="/">About</a></li></ul>				</ul>
				<p>&copy; 2008 - 2015, Debuggable Ltd. All rights reserved.
				<i>Designed by <a href="http://www.fluidcore.net" target="_blank">fluidCORE</a>.</i>
			</div>
		</div>
	</div>
	<script type="text/javascript" src="/js/aggregate/58a4727fb2207154ddd0739cbc3b15104ad6cd03/5627ea2806458e56fb8a5f4b231a44c2.php"></script><script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-3306079-3']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script');
ga.src = ('https:' == document.location.protocol ?
    'https://ssl' : 'http://www') +
    '.google-analytics.com/ga.js';
ga.setAttribute('async', 'true');
document.documentElement.firstChild.appendChild(ga);
})();
</script></body>
</html>
